{"version":3,"sources":["components/auth/encrypt.js","components/config/config.js","components/auth/tokenEncryption.js","components/contexts/contexts.js","store/Reducers/employeeReducers.js","store/Reducers/departmentReducer.js","store/Reducers/placReducers.js","store/Reducers/usersReducer.js","store/Reducers/FieldAllowance.js","store/Reducers/configReducer.js","store/Reducers/companyReducer.js","controllers/removeRedudant.js","controllers/Employees.js","controllers/Department.js","controllers/Users.js","components/layout/Navbar/Navbar.js","components/users/Logout.js","components/users/userInfo.js","store/Actions/employeeAction.js","components/fetchers/employeeFetchers.js","store/Actions/userActions.js","components/fetchers/UsersFetcher.js","store/Actions/companyActions.js","components/fetchers/CompanyFetcher.js","controllers/saveProcess.js","socket.js","store/Actions/letterActions.js","components/fetchers/MessageFetchers.js","store/Actions/connectionAction.js","store/Actions/messageActions.js","store/Actions/departmentActions.js","components/fetchers/departmentFetch.js","components/layout/SideNav/SideNav.js","components/layout/Loading.js","components/routes/Home.js","controllers/Date.js","controllers/Letters.js","controllers/Message.js","components/layout/DataLoading.js","components/layout/ErrorLoading.js","components/letters/LetterTypes.js","components/letters/WriteLetter.js","components/letters/Approval.js","components/fetchers/Emmitters.js","components/letters/AddParticipants.js","components/letters/CreateLetters.js","components/letters/DeleteLetter.js","components/letters/EditLetter/EditLetter.js","components/letters/LetterProgress.js","components/letters/TakeActions.js","components/letters/PrintLetter.js","components/letters/ViewLetters.js","components/layout/ModalLetter.js","components/letters/Chat.js","components/routes/Letter.js","store/Reducers/lettersReducer.js","store/Reducers/allowanceReducer.js","store/Reducers/climatePlacesReducer.js","store/Reducers/deductionReducer.js","components/letters/Contacts.js","components/routes/ContactEmployee.js","components/routes/ChatRoom.js","store/Reducers/MessageReducer.js","store/Reducers/connectionReducer.js","components/letters/OutboxLetters.js","components/routes/OutBoxLetters.js","components/letters/InboxLetters.js","components/routes/InBoxLetters.js","App.js","serviceWorker.js","index.js"],"names":["password","require","CryptoJS","module","exports","encryptObject","object","AES","encrypt","JSON","stringify","toString","decrptObject","bytes","decrypt","parse","enc","Utf8","server","host","files_url","encryptToken","decryptToken","LayoutContext","React","createContext","StoreContext","LetterContext","empState","state","loading","error","employeeReducer","action","type","payload","depState","departmentReducer","placeState","placeReducer","UserState","UserReducer","fieldAllowanceState","fieldAllowanceReducer","configState","configReducer","companyState","CompanyReducer","removeDuplicates","originalArray","prop","newArray","lookupObject","i","push","EmployeeClass","employees","department","Filter","id","filter","e","emp_id","UnFilter","Find","find","getUserInfo","_id","Name","first_name","middle_name","last_name","Emp_id","Department","dpName","UserRole","findUser","length","Salary","salary","position","isOfficial","messageName","split","firstLetters","slice","toUpperCase","searchEmployee","Index","Employees","index","toLowerCase","includes","name","n","d","this","UsersClass","users","getId","Id","localStorage","user","u","User","employee","getEmp_id","canApprove","employeeSearch","ContactSearch","directors","f_director","team_leaders","sector_leaders","f_sector_leader","commisioner","withRouter","props","useState","search","toggleButton","title","screen","acivateProfile","profileOpener","setState","setToggler","useContext","togglers","uiContents","collapse","headertheme","user_type","token","socket","allowance","useEffect","history","width","window","toggler","className","icon","faBook","data-classname","onClick","op","po","openProfile","to","faPhone","data-toggle","aria-haspopup","aria-expanded","tabIndex","role","aria-hidden","removeItem","emit","Logout","data-letters","userInfo","Token","fetchEmployees","a","async","axios","get","headers","data","addEmployees","EmployeeFetcher","dispatchEmployees","console","log","getEmployees","fetchUsers","Users","UsersFetcher","dispatchUsers","getUsers","fetchCompany","Company","company","CompanyFetcher","dispatchCompany","getCompany","saveProcess","message","success","process","disable","Donothing","Round","num","Math","round","webSocket","socketIOClient","reconnection","loadLetters","Axios","L","l","MessageFetchers","dispatchMessages","dispatchConnections","dispatchLetters","setTyping","setLTyping","setSocket","empLoading","on","err","fetchDepartment","DepartmentFetch","dispatchDepartment","departments","getDepartment","SideNav","sidetheme","faPaperclip","faUsers","DotLoading","Home","COMPANY","Provider","value","getDate","Time","DATE","Date","date","toISOString","durationDays","initial_date","destination_date","i_date","getTime","TellDay","day","toUTCString","convertToEuropean","dd","mm","yyyy","hr","min","sec","Hr","Min","Sec","eth","ethDateTime","converterDateTime","toEuropean","ToEthiopianDateSting","parseInt","getUTCDay","ken","Month","toEthiopian","month","year","toEthiopianDate","localTime","t","toLocaleTimeString","local","simpleDate","LettersClass","letters","find_letter","description","editorState","EditorState","createWithContent","convertFromRaw","createEmpty","description_text","blocks","text","approval_managers","approval_manager","manager_info","m","participants","particpant_info","p","need_approval","status","first_manager","apply","map","step","isApproval","isParticipant","approvalStep","needsApproval","approvedManagers","sameStage","proceedStage","nextEmployee","remove","outBox","creater","searchLetters","rank","progress","seen","totallProgress","isModifiable","isApprovable","unApproved","Message","findConnected","onlineUsers","isOnline","lastSeen","disconnected_time","myMessage","sender","reciever","contactedUsers","contact","Set","searchContacted","c","chatRoom","newMessages","last_message","file_name","letter_id","created_date","notifiaction","InboxLetters","inbox","SearchLetters","newLetters","seenLetters","newInboxLetters","seenInboxLetters","allowanceLetter","DataLoading","ErrorLoading","faWindowClose","values","setValues","faEnvelopeOpen","tab","faForward","WriteLetter","derror","useRef","handleSubmit","preventDefault","current","focus","initial","idate","imonth","iyear","Return","rdate","rmonth","ryear","onSubmit","placeholder","required","onChange","target","toolbarClassName","editorStyle","marginLeft","minHeight","border","borderColor","wrapperClassName","editorClassName","onEditorStateChange","convertToRaw","getCurrentContent","ref","faDraftingCompass","objective","faBarcode","project_name","faProjectDiagram","program","faTruck","initial_place","faCar","destination_place","faCalendar","max","faBackward","Approval","approvalMax","faUser","faObjectGroup","faUserAlt","faPlus","key","s","colSpan","faLevelUpAlt","faTrash","ev","MsetLevel","removeManager","emitter","AddParticipants","managers","letter","rid","random","usage","createMessage","Letter","Data","_doc","part","post","messages","req","res","created","faInfo","addParticipant","removeParticpant","disabled","return_date","put","deleted","saveLetter","match","setSize","params","setTab","faLayerGroup","faEdit","faUserCheck","Progress","animated","multi","bar","color","DeleteLetter","close","faCheck","del","Delete","l_id","apm","fdirector","fd","LetterProgress","ap","striped","hover","faChartLine","faCheckCircle","faEye","aria-valuenow","aria-valuemin","aria-valuemax","style","comment","TakeActions","approved","check","Approved","Mess","sendToParticipant","Letters","M","Participants","participant","Part","approved_date","updated","nextManager","Req","checked","faComment","cols","rows","PrintLetter","readOnly","toolbarHidden","Component","ViewLetters","componentRef","trigger","faPrint","content","ModalLetter","typing","stop_typing","modal","setModal","size","sethover","toggle","onMouseEnter","onMouseLeave","faEnvelope","display","isOpen","faPencilAlt","faHammer","connections","Ltyping","empError","userLoading","userError","contacted","box","Messages","Scroller","document","getElementById","scrollIntoView","behavior","faSearch","faCircle","faPlusCircle","reverse","faCheckDouble","faCommentDots","autoComplete","onKeyUp","setTimeout","letterState","lettersReducer","allowanceState","allowanceReducer","climatePlaceState","climatePlacesReducer","deductionState","deductionReducer","Contacts","emp","bordered","f","ContactEmployee","ChatRoom","messageState","messageReducer","connState","connReducer","OutboxLetters","found","faCog","OutBoxLetters","notify","faBell","faEnvelopeOpenText","faUserAltSlash","InBoxLetters","letterLoading","letterError","messageLoading","messageError","App","useReducer","place","dispatchPlaces","fieldEmployees","dispatchFieldEmplooyees","config","dispatchConfig","allowances","dispatchAllowances","climatePlaces","dispatchClimatePlaces","deductions","dispatchDeductions","isHydrating","src","exact","path","Boolean","location","hostname","JavascriptTimeAgo","addLocale","en","ru","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d9cb88a.chunk.js","sourcesContent":["const {password} =require('../config/config')\r\nconst CryptoJS=require('crypto-js')\r\n\r\nconst encryptObject = (object)=>{\r\nvar encrptedObject = CryptoJS.AES.encrypt(JSON.stringify(object), password).toString();\r\nreturn encrptedObject\r\n}\r\nconst decrptObject = (object)=>{\r\n    var bytes  = CryptoJS.AES.decrypt(object,password);\r\nvar decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\nreturn decryptedData\r\n}\r\nmodule.exports={encryptObject,decrptObject}","const config = {\r\n  server: \"\",\r\n  host: \"/api\",\r\n  files_url: \"/static/\",\r\n  password: \"fLf3450asrxvae_zx_3q343543Xxsdkvdsl_zczxm\",\r\n};\r\nmodule.exports = config;\r\n","const { password } = require(\"../config/config\");\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nconst encryptToken = (object) => {\r\n  var encrptedObject = CryptoJS.AES.encrypt(object, password).toString();\r\n  return encrptedObject;\r\n};\r\nconst decryptToken = (object) => {\r\n  var bytes = CryptoJS.AES.decrypt(object, password);\r\n  var decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n  return decryptedData;\r\n};\r\nmodule.exports = { encryptToken, decryptToken };\r\n","import React from 'react'\r\n\r\nexport const LayoutContext=React.createContext()\r\nexport const StoreContext= React.createContext()\r\nexport const Anotification=React.createContext()\r\nexport const DeductionDnd=React.createContext()\r\nexport const Notification=React.createContext()\r\nexport const LetterContext=React.createContext()"," export const empState={\r\n     state:[],\r\n     loading:true,\r\n     error:false\r\n }\r\n  \r\n export const employeeReducer =(state=empState,action)=>{\r\n  switch(action.type){\r\n      case 'ADD_EMPLOYEES':\r\n      return {state:action.payload,loading:false,error:false}\r\n      case 'LOADING_EMPLOYEES':\r\n    return {...state,loading:true}\r\n    default:\r\n        return {...state,loading:false,error:true}\r\n  }   \r\n }","export const depState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const departmentReducer =(state=depState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_DEPARTMENT':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_DEPARTMENT':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const placeState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const placeReducer =(state=placeState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_PLACES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_PLACES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const UserState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const UserReducer = (state = UserState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_USERS':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_USERS':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","export const fieldAllowanceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const fieldAllowanceReducer =(state=fieldAllowanceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_FIELDALLOWANCE':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_FIELDALLOWANCE':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const configState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const configReducer =(state=configState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_CONFIG':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_CONFIG':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const companyState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const CompanyReducer =(state=companyState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_COMPANY':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_COMPANY':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","\r\nexport const removeDuplicates=(originalArray, prop)=> {\r\n    var newArray = [];\r\n    var lookupObject  = {};\r\n\r\n    for(var i in originalArray) {\r\n       lookupObject[originalArray[i][prop]] = originalArray[i];\r\n    }\r\n\r\n    for(i in lookupObject) {\r\n        newArray.push(lookupObject[i]);\r\n    }\r\n     return newArray;\r\n}","import { departmentClass } from \"./Department\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\n\r\nexport class EmployeeClass extends departmentClass {\r\n  constructor(employees, department) {\r\n    super(department);\r\n    this.employees = employees;\r\n  }\r\n  Filter = (id) => this.employees.filter((e) => e.emp_id === id);\r\n\r\n  UnFilter = (id) => {\r\n    let employee = this.employees.filter((e) => {\r\n      return e.emp_id !== id;\r\n    });\r\n    return employee;\r\n  };\r\n  /**accepts emp_id and return employee object */\r\n  Find = (id) => this.employees.find((e) => e.emp_id === id);\r\n  /**return's object of employee info\r\n   * @param {*} id -employee _id not emp_id\r\n   */\r\n  getUserInfo = (id) => this.employees.find((e) => e._id === id);\r\n\r\n  Name = (id) => {\r\n    let first_name = this.Find(id) ? this.Find(id).first_name : \"\";\r\n    let middle_name = this.Find(id) ? this.Find(id).middle_name : \"\";\r\n    let last_name = this.Find(id) ? this.Find(id).last_name : \"\";\r\n    return first_name + \" \" + middle_name + \" \" + last_name;\r\n  };\r\n\r\n  Emp_id = (id) => {\r\n    let emp_id = this.Find(id) ? this.Find(id).emp_id : \"\";\r\n    return emp_id;\r\n  };\r\n  Department = (id) =>\r\n    this.Find(id) ? this.dpName(this.Find(id).department) : \"\";\r\n  UserRole = (id) => {\r\n    let userole = this.Find(id) ? this.Find(id).type : \"\";\r\n    return userole;\r\n  };\r\n  findUser = (id) => {\r\n    let found = this.Filter(id).length ? true : false;\r\n    return found;\r\n  };\r\n\r\n  Salary = (id) => (this.Find(id) ? this.Find(id).salary : 0);\r\n\r\n  /**Accepts emp_id and returns position of  the official if it is official\r\n   * employee.... returns empty string if the user is not found and\r\n   * not official employee\r\n   */\r\n  position = (id) => (this.isOfficial(id) ? this.Find(id).position : \"\");\r\n  /** returns first name and last Name only\r\n     @param {*} emp_id =>string of emp_id\r\n     */\r\n  messageName = (emp_id) =>\r\n    this.Name(emp_id).split(\" \")[0] + \" \" + this.Name(emp_id).split(\" \")[1];\r\n  /**return's two first letter string of one letter from first name one letter from last name\r\n   * @param {*} emp_id =>emp_id of the user\r\n   */\r\n  firstLetters = (emp_id) =>\r\n    (\r\n      this.messageName(emp_id).split(\" \")[0].slice(0, 1) +\r\n      this.messageName(emp_id).split(\" \")[1].slice(0, 1)\r\n    ).toUpperCase();\r\n  /**return's an array of user resulted from searched\r\n   * @param {*} Index - String to search\r\n   */\r\n  searchEmployee = (Index, Employees) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let employees = Employees ? Employees : this.employees;\r\n    //search by emp_id\r\n    let emp_id = employees.filter((e) =>\r\n      e.emp_id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    //search by name\r\n    let name = employees.filter((n) =>\r\n      this.Name(n.emp_id).toString().toLowerCase().includes(index, 0)\r\n    );\r\n    //search department\r\n    let department = this.department.filter((e) =>\r\n      e.name.toString().toLowerCase().includes(index, 0)\r\n    );\r\n\r\n    let position = employees.filter((e) =>\r\n      e.position.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    return removeDuplicates(\r\n      [...name, ...department, ...emp_id, ...position],\r\n      \"_id\"\r\n    );\r\n  };\r\n}\r\n","export class departmentClass {\r\n  constructor(department) {\r\n    this.department = department;\r\n  }\r\n  find = (id) => this.department.find((d) => d._id === id);\r\n  dpName = (id) => (this.find(id) ? this.find(id).name : \"\");\r\n}\r\n","import { EmployeeClass } from \"./Employees\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\n\r\nexport class UsersClass extends EmployeeClass {\r\n  constructor(users, employees, department) {\r\n    super(employees, department);\r\n    this.users = users;\r\n  }\r\n  //get _id from employee with emp_id\r\n  getId = (Id) => {\r\n    let id = Id ? Id : localStorage.id;\r\n    let user = this.users.find((u) => {\r\n      return u._id === id;\r\n    });\r\n    let User = user ? user : { emp_id: \"\" };\r\n    let employee = this.Find(User.emp_id);\r\n    return employee ? employee._id : \"\";\r\n  };\r\n  getEmp_id = (Id) => {\r\n    let id = Id ? Id : localStorage.id;\r\n    let user = this.users.find((u) => {\r\n      return u._id === id;\r\n    });\r\n    let User = user ? user : { emp_id: \"\" };\r\n    return User.emp_id;\r\n  };\r\n  /**return's array of employee with filtered employee type\r\n       @param {*} type =>String which used filter 'director' ,'sector leader'...\r\n      */\r\n  position = (type) =>\r\n    this.employees.filter(\r\n      (e) => e.position === type && this.getEmp_id() !== e.emp_id\r\n    );\r\n  canApprove = (emp_id) =>\r\n    this.Find(emp_id ? emp_id : this.getEmp_id())\r\n      ? this.Find(emp_id ? emp_id : this.getEmp_id()).type === \"Manager\"\r\n        ? true\r\n        : false\r\n      : false;\r\n  /**\r\n   * retun's an array of employee based on given array and employee type\r\n   * @param {*} employees =>array of employees to search \r\n   @param {*} type =>String which used filter 'director' ,'sector leader'...\r\n   */\r\n  employeeSearch = (employees, type) =>\r\n    employees.filter((e) => e.type === type && this.getEmp_id() !== e.emp_id);\r\n  /**\r\n   * return's array of contacts searched\r\n   * @param {*} Index=>string to search\r\n   */\r\n  ContactSearch = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let emp_id = this.employees.filter((e) =>\r\n      e.emp_id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let name = this.employees.filter((e) =>\r\n      this.Name(e.emp_id).toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let department = this.employees.filter((e) =>\r\n      e.department.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let users = removeDuplicates([...emp_id, ...name, ...department], \"_id\");\r\n    return {\r\n      employees: removeDuplicates(\r\n        [\r\n          ...this.employeeSearch(users, \"employee\"),\r\n          ...this.employeeSearch(users, \"f_employee\"),\r\n        ],\r\n        \"_id\"\r\n      ),\r\n      directors: this.employeeSearch(users, \"director\"),\r\n      f_director: this.employeeSearch(users, \"f_director\"),\r\n      team_leaders: removeDuplicates(\r\n        [\r\n          ...this.employeeSearch(users, \"f_team_leader\"),\r\n          ...this.employeeSearch(users, \"team_leader\"),\r\n        ],\r\n        \"_id\"\r\n      ),\r\n      sector_leaders: this.employeeSearch(users, \"sector_leader\"),\r\n      f_sector_leader: this.employeeSearch(users, \"f_sector_leader\"),\r\n      commisioner: this.employeeSearch(users, \"senior_officer\"),\r\n    };\r\n  };\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { withRouter } from \"react-router\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faInfo,\r\n  faPhone,\r\n  faCalculator,\r\n  faBook,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { AllowanceClass } from \"../../../controllers/Allowance\";\r\nimport { Logout } from \"../../users/Logout\";\r\nimport { UsersClass } from \"../../../controllers/Users\";\r\n\r\nconst Navbar = (props) => {\r\n  const [state, setState] = useState({\r\n    search: \"\",\r\n    toggleButton: \"\",\r\n    title: \"Shemsu Medebir\",\r\n    screen: 0,\r\n    acivateProfile: \"\",\r\n    profileOpener: \"\",\r\n  });\r\n  const setToggler = useContext(LayoutContext);\r\n  const { togglers, uiContents } = setToggler;\r\n  const { collapse, headertheme } = setToggler.uiContents;\r\n  const { user_type, token } = localStorage;\r\n\r\n  /**profiler */\r\n  const { socket, department, employees, users } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading } = employees;\r\n  const { state: Users, loading: userLoading } = users;\r\n  const allowance = new UsersClass(\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n\r\n  useEffect(() => {\r\n    var x = 0;\r\n    //if the user is not authenticated push to login\r\n    user_type !== \"system_admin\" && token\r\n      ? (x = 1)\r\n      : props.history.push(\"/login.html\");\r\n    let { width } = window.screen;\r\n    setState({ ...state, screen: width });\r\n    if (width <= 892) {\r\n      togglers({\r\n        ...uiContents,\r\n        collapse: \"closed-sidebar-mobile closed-sidebar\",\r\n      });\r\n    }\r\n  }, [user_type, token]);\r\n  const openSearch = () => {\r\n    setState({ ...state, search: \"active\" });\r\n  };\r\n  const closeSearch = () => {\r\n    setState({ ...state, search: \"\" });\r\n  };\r\n  const openProfile = () => {\r\n    let { acivateProfile: op, profileOpener: po } = state;\r\n    let { width } = window.screen;\r\n    let acivateProfile = width <= 892 ? (op === \"\" ? \"active\" : \"\") : \"\";\r\n    let profileOpener =\r\n      width <= 892 ? (po === \"\" ? \"header-mobile-open\" : \"\") : \"\";\r\n    setState({ ...state, acivateProfile, profileOpener });\r\n  };\r\n  const toggler = () => {\r\n    let { toggleButton: button } = state;\r\n    let toggleButton = button === \"\" ? \"is-active\" : \"\";\r\n    let { width } = window.screen;\r\n    let toggler =\r\n      width <= 892\r\n        ? collapse === \"closed-sidebar-mobile closed-sidebar\"\r\n          ? \"closed-sidebar-mobile closed-sidebar sidebar-mobile-open\"\r\n          : \"closed-sidebar-mobile closed-sidebar\"\r\n        : collapse === \"\"\r\n          ? \"closed-sidebar\"\r\n          : \"\";\r\n    togglers({ ...uiContents, collapse: toggler });\r\n    setState({ ...state, toggleButton });\r\n  };\r\n\r\n  return (\r\n    <div className={\"app-header header-shadow \" + headertheme}>\r\n      <div className=\"app-header__logo\">\r\n        <h2 className=\"font-weight-bold show\">\r\n          Webook\r\n          <FontAwesomeIcon icon={faBook} className=\"mx-2\" />\r\n        </h2>\r\n        <div className=\"header__pane ml-auto\">\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className={\r\n                \"hamburger close-sidebar-btn hamburger--elastic \" +\r\n                state.toggleButton\r\n              }\r\n              data-classname=\"closed-sidebar\"\r\n              onClick={() => toggler()}\r\n            >\r\n              <span className=\"hamburger-box\">\r\n                <span className=\"hamburger-inner\"></span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__mobile-menu\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n            onClick={() => toggler()}\r\n          >\r\n            <span className=\"hamburger-box\">\r\n              <span className=\"hamburger-inner\"></span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu\">\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            className={\r\n              \"btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav \" +\r\n              state.acivateProfile\r\n            }\r\n            onClick={() => openProfile()}\r\n          >\r\n            <span className=\"btn-icon-wrapper\">\r\n              <i className=\"fa fa-ellipsis-v fa-w-6\"></i>\r\n            </span>\r\n          </button>\r\n        </span>\r\n      </div>\r\n      <div className={\"app-header__content \" + state.profileOpener}>\r\n        <div className=\"app-header-left\">\r\n          <ul className=\"header-menu nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/contacts\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faPhone} className=\"nav-link-icon\" />\r\n                Contact\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"app-header-right\">\r\n          <div className=\"header-btn-lg pr-0\">\r\n            <div className=\"widget-content p-0\">\r\n              <div className=\"widget-content-wrapper\">\r\n                <div className=\"widget-content-left\">\r\n                  <div className=\"btn-group\">\r\n                    <div\r\n                      data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"p-0 btn\"\r\n                    >\r\n                      <h4 className=\"font-weight-bold\">\r\n                        [W]\r\n                        <i className=\"fa fa-angle-down ml-2 opacity-8\"></i>\r\n                      </h4>\r\n                    </div>\r\n                    <div\r\n                      tabIndex=\"-1\"\r\n                      role=\"menu\"\r\n                      aria-hidden=\"true\"\r\n                      className=\"dropdown-menu dropdown-menu-right\"\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => Logout(props, socket, allowance.getEmp_id)}\r\n                        tabIndex=\"0\"\r\n                        className=\"dropdown-item\"\r\n                      >\r\n                        Logout\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"widget-content-left  ml-3 header-user-info\">\r\n                  <div className=\"widget-heading\">\r\n                    {allowance.Name(allowance.getEmp_id())}\r\n                  </div>\r\n                  <div className=\"widget-subheading\">\r\n                    {allowance.Department(allowance.getEmp_id())}{\" \"}\r\n                    {allowance.UserRole(allowance.getEmp_id())}\r\n                  </div>\r\n                </div>\r\n                <div className=\"widget-content-right header-user-info ml-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-shadow p-1 btn  btn-sm show-toastr-example\"\r\n                  >\r\n                    <p\r\n                      data-letters={allowance.firstLetters(\r\n                        allowance.getEmp_id()\r\n                      )}\r\n                    ></p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import { Socket } from \"socket.io-client\";\r\n\r\nexport const Logout = (props, socket, emp_id) => {\r\n  localStorage.removeItem(\"id\");\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"auth\");\r\n  localStorage.removeItem(\"user_type\");\r\n  localStorage.removeItem(\"emp_id\");\r\n  socket.emit(\"disConnect\", { emp_id });\r\n  props.history.push(\"/login.html\");\r\n};\r\n","import { decryptToken } from \"../auth/tokenEncryption\";\r\n\r\nexport const userInfo = () => {\r\n  let { user_type, token: Token } = localStorage;\r\n  let token = decryptToken(Token);\r\n  return { token, user_type };\r\n};\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchEmployees = async () => {\r\n  const employees = await axios.get(host + \"/employee\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const Employees = decrptObject(employees.data);\r\n  return Employees;\r\n};\r\nexport const addEmployees = (employees) => {\r\n  return {\r\n    type: \"ADD_EMPLOYEES\",\r\n    payload: employees,\r\n  };\r\n};\r\nexport const loadingEmployees = () => {\r\n  return {\r\n    type: \"LOADING_EMPLOYEES\",\r\n  };\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport {\r\n  loadingEmployees,\r\n  fetchEmployees,\r\n  addEmployees,\r\n} from \"../../store/Actions/employeeAction\";\r\n\r\nconst EmployeeFetcher = () => {\r\n  const { dispatchEmployees } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    const getEmployees = async () => {\r\n      try {\r\n        dispatchEmployees(loadingEmployees());\r\n        const employees = await fetchEmployees();\r\n        dispatchEmployees(addEmployees(employees));\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatchEmployees({ type: \"ERROR\" });\r\n      }\r\n    };\r\n    getEmployees();\r\n  }, [dispatchEmployees]);\r\n  return <p></p>;\r\n};\r\n\r\nexport default EmployeeFetcher;\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchUsers = async () => {\r\n  const Users = await axios.get(host + \"/users\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const users = decrptObject(Users.data);\r\n  return users;\r\n};\r\nexport const addUsers = (Users) => {\r\n  return {\r\n    type: \"ADD_USERS\",\r\n    payload: Users,\r\n  };\r\n};\r\nexport const loadingUsers = () => {\r\n  return {\r\n    type: \"LOADING_USERS\",\r\n  };\r\n};\r\n","import React, { useEffect ,useContext } from 'react'\r\nimport { fetchUsers, loadingUsers, addUsers } from '../../store/Actions/userActions'\r\nimport { StoreContext } from '../contexts/contexts'\r\n\r\n  const UsersFetcher=()=> {\r\n    const {dispatchUsers}=useContext(StoreContext)  \r\n    \r\n    useEffect(()=>{\r\n        const getUsers=async ()=>{\r\n       try{\r\n        //loading users\r\n        dispatchUsers(loadingUsers())     \r\n        //fectching users\r\n            const users= await fetchUsers()\r\n            //storing to reducer\r\n            dispatchUsers(addUsers(users)) \r\n       } \r\n       catch(err){\r\n         dispatchUsers({type:'ERROR'})\r\n       }\r\n      }\r\n      getUsers()\r\n    },[dispatchUsers])\r\n    return (\r\n     <p></p>\r\n    )\r\n}\r\n\r\nexport default UsersFetcher\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchCompany = async () => {\r\n  const Company = await axios.get(host + \"/company\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const company = decrptObject(Company.data);\r\n  return company;\r\n};\r\nexport const addCompany = (Company) => {\r\n  return {\r\n    type: \"ADD_COMPANY\",\r\n    payload: Company,\r\n  };\r\n};\r\nexport const loadingCompany = () => {\r\n  return {\r\n    type: \"LOADING_COMPANY\",\r\n  };\r\n};\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { loadingCompany, fetchCompany, addCompany } from '../../store/Actions/companyActions'\r\n\r\n  const CompanyFetcher=()=> {\r\n      const {dispatchCompany}=useContext(StoreContext)\r\n    \r\n      useEffect(()=>{\r\n        const getCompany=async ()=>{\r\n         dispatchCompany(loadingCompany())\r\n            try{\r\n          const company=await fetchCompany()\r\n          dispatchCompany(addCompany(company))\r\n         }   \r\n         catch(err){\r\n        dispatchCompany({type:'ERROR'})\r\n         }\r\n        }\r\n   getCompany()\r\n      },[dispatchCompany])\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default CompanyFetcher\r\n","/**Accepts type of what to do and message return an object of speld  */\r\nexport const saveProcess=(type,message)=>{\r\n   switch(type){\r\n       case 'initial':\r\n        return {error:'',success:'',process:message,\r\n              disable:true,loading:true}   \r\n        case 'error':\r\n       return {error:message,success:'',process:'',\r\n       disable:false,loading:false} \r\n       case 'success':\r\n      return{error:'',success:message,process:'',\r\n      disable:false,loading:false}\r\n      default:\r\n       return {error:'',success:'',process:'',disable:false,loading:false}   \r\n      }\r\n}\r\n/**generates random id */\r\nexport const randomId=()=>Math.round(Math.random(0,100000000)*100000000)\r\nexport const Donothing=()=>{}\r\nexport const Round=num=>Math.round(num*100)/100","import socketIOClient from \"socket.io-client\";\r\nimport { server } from \"./components/config/config\";\r\n\r\nexport const webSocket = socketIOClient(server,{reconnection:true}) ","import Axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\n\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const addLetters = (letters) => {\r\n  return {\r\n    type: \"ADD_LETTERS\",\r\n    payload: letters,\r\n  };\r\n};\r\nexport const loadingLetters = () => {\r\n  return {\r\n    type: \"LOADING_LETTERS\",\r\n  };\r\n};\r\nexport const loadLetters = async () => {\r\n  const L = await Axios.get(host + \"/letters\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const l = decrptObject(L.data);\r\n  return l;\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { UsersClass } from \"../../controllers/Users\";\r\nimport { webSocket } from \"../../socket\";\r\nimport { addConn } from \"../../store/Actions/connectionAction\";\r\nimport { addLetters } from \"../../store/Actions/letterActions\";\r\nimport { addMessages } from \"../../store/Actions/messageActions\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\n\r\nconst MessageFetchers = () => {\r\n  const {\r\n    socket,\r\n    dispatchMessages,\r\n    dispatchConnections,\r\n    dispatchLetters,\r\n    setTyping,\r\n    setLTyping,\r\n    setSocket,\r\n    department, employees, users\r\n  } = useContext(StoreContext);\r\n  setSocket(webSocket);\r\n  const { } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading } = employees;\r\n  const { state: Users, loading: userLoading } = users;\r\n  const allowance = new UsersClass(\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  useEffect(() => {\r\n    try {\r\n      socket\r\n        ? socket.emit(\"onConnect\", { emp_id: allowance.getEmp_id() })\r\n        : Donothing();\r\n      socket ? socket.emit(\"users\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"users\", (data) => dispatchConnections(addConn(data)))\r\n        : Donothing();\r\n      socket ? socket.emit(\"chat\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"chat\", (data) => dispatchMessages(addMessages(data)))\r\n        : Donothing();\r\n      socket\r\n        ? socket.on(\"typing\", (data) => setTyping(data.emp_id))\r\n        : Donothing(); //chat typing\r\n      socket\r\n        ? socket.on(\"typing_letter\", (data) => setLTyping(data.emp_id))\r\n        : Donothing(); //letter typing\r\n      socket ? socket.emit(\"letters\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"letters\", (data) => dispatchLetters(addLetters(data)))\r\n        : Donothing();\r\n    } catch (err) {\r\n      dispatchConnections({ type: \"Error\" });\r\n      dispatchMessages({ type: \"Error\" });\r\n    }\r\n  }, [socket, empLoading]);\r\n  return <div></div>;\r\n};\r\n\r\nexport default MessageFetchers;\r\n","\r\nexport const addConn = (connections) => {\r\n    return {\r\n        type: 'ADD_CONNECTIONS', payload: connections\r\n    }\r\n}\r\nexport const loadingConn = () => {\r\n    return {\r\n        type: 'LOADING_CONNECTIONS'\r\n    }\r\n}","\r\nexport const addMessages = (Messages) => {\r\n    return {\r\n        type: 'ADD_MESSAGES', payload: Messages\r\n    }\r\n}\r\nexport const loadingMessages = () => {\r\n    return {\r\n        type: 'LOADING_MESSAGES'\r\n    }\r\n}","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchDepartment = async () => {\r\n  const Department = await axios.get(host + \"/department\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const department = decrptObject(Department.data);\r\n  return department;\r\n};\r\nexport const addDepartment = (Department) => {\r\n  return {\r\n    type: \"ADD_DEPARTMENT\",\r\n    payload: Department,\r\n  };\r\n};\r\nexport const loadingDepartment = () => {\r\n  return {\r\n    type: \"LOADING_DEPARTMENT\",\r\n  };\r\n};\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { loadingDepartment, fetchDepartment, addDepartment } from '../../store/Actions/departmentActions'\r\n\r\n  const DepartmentFetch=()=> {\r\n      const {dispatchDepartment}=useContext(StoreContext)\r\n    const getDepartment=async ()=>{\r\n        dispatchDepartment(loadingDepartment())\r\n     try{\r\n      const departments=await fetchDepartment()\r\n      dispatchDepartment(addDepartment(departments))\r\n     }   \r\n     catch(err){\r\n    dispatchDepartment({type:'ERROR'})\r\n     }\r\n    }\r\n      useEffect(()=>{\r\n   getDepartment()\r\n      },[dispatchDepartment])\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepartmentFetch\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperclip,\r\n  faStamp,\r\n  faCalculator,\r\n  faMapMarker,\r\n  faChartBar,\r\n  faInfo,\r\n  faUsers,\r\n  faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport EmployeeFetcher from \"../../fetchers/employeeFetchers\";\r\nimport UsersFetcher from \"../../fetchers/UsersFetcher\";\r\nimport CompanyFetcher from \"../../fetchers/CompanyFetcher\";\r\n\r\nimport MessageFetchers from \"../../fetchers/MessageFetchers\";\r\nimport { UsersClass } from \"../../../controllers/Users\";\r\nimport DepartmentFetch from \"../../fetchers/departmentFetch\";\r\nconst SideNav = () => {\r\n  const { setSocket, users, employees, department } = useContext(StoreContext);\r\n  const setToggler = useContext(LayoutContext);\r\n  const { sidetheme } = setToggler.uiContents;\r\n  const User = new UsersClass(users.state, employees.state, department.state);\r\n\r\n  return (\r\n    <div className={\"app-sidebar sidebar-shadow \" + sidetheme}>\r\n      <div className=\"app-header__logo\">\r\n        <DepartmentFetch />\r\n        <EmployeeFetcher />\r\n        <CompanyFetcher />\r\n        <UsersFetcher />\r\n        <MessageFetchers />\r\n        <div className=\"header__pane ml-auto\">\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"hamburger close-sidebar-btn hamburger--elastic\"\r\n              data-classname=\"closed-sidebar\"\r\n            >\r\n              <span className=\"hamburger-box\">\r\n                <span className=\"hamburger-inner\"></span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__mobile-menu\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n          >\r\n            <span className=\"hamburger-box\">\r\n              <span className=\"hamburger-inner\"></span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu\">\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav\"\r\n          >\r\n            <span className=\"btn-icon-wrapper\">\r\n              <i className=\"fa fa-ellipsis-v fa-w-6\"></i>\r\n            </span>\r\n          </button>\r\n        </span>\r\n      </div>{\" \"}\r\n      <div className=\"scrollbar-sidebar\">\r\n        <div className=\"app-sidebar__inner\">\r\n          <ul className=\"vertical-nav-menu\">\r\n            <li className=\"app-sidebar__heading\">Webook</li>\r\n\r\n            <li className=\"app-sidebar__heading\">\r\n              <FontAwesomeIcon\r\n                icon={faPaperclip}\r\n                className=\"metismenu-icon pe-7s-diamond fa-2x text-info mx-2\"\r\n              />\r\n              Document\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/inbox\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">Letter</p>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/message\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">message</p>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"app-sidebar__heading\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className=\"metismenu-icon pe-7s-diamond fa-2x text-info mx-2\"\r\n              />\r\n              Employess\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/contact\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">contact</p>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from 'react'\r\nimport  '../../css/Layout.css'\r\nexport const DotLoading=()=> {\r\n    return (\r\n        <div className=\"spinner\">\r\n  <div className=\"bounce1\"></div>\r\n  <div className=\"bounce2\"></div>\r\n  <div className=\"bounce3\"></div>\r\n     </div>\r\n    )\r\n}\r\nexport const SpinnerLoading=()=>{\r\n  return(\r\n    <div className=\"col-lg-12 text-center\">\r\n           <div className=\"spinner-border text-dark text-center\" role=\"status\">\r\n<span className=\"sr-only text-center text-dark\">Loading...</span>\r\n</div>\r\n</div>\r\n  )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport { SpinnerLoading, DotLoading } from \"../layout/Loading\";\r\nimport { files_url } from \"../config/config\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalculator, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { company } = useContext(StoreContext);\r\n  const { state: COMPANY, loading, error } = company;\r\n  const Company = COMPANY[0];\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\"\r\nimport { decrptObject } from \"../components/auth/encrypt\"\r\nimport { host } from \"../components/config/config\"\r\nimport {ethDateTime,converterDateTime,converterString} from 'ethiopian-calendar-date-converter'\r\nvar etdate=require('ethiopic-date')\r\n/**get Date from the server */\r\nexport const getDate=async ()=>{\r\nconst Time=await axios.get(host+'/date')\r\nconst DATE=new Date(Time.data.date)\r\nreturn DATE.toISOString()\r\n}\r\n\r\nexport const DateFormat=(DATE)=>{\r\n    const date=new Date(DATE)\r\n    const year=date.getFullYear()\r\n    const Month=date.getMonth()\r\n    let month=parseInt(Month)<10?'0'+Month:Month\r\n    let day=date.getDate()\r\n    let Day=parseInt(day)<10?'0'+day:day\r\n    return year+'-'+month+'-'+Day\r\n}\r\n\r\n /**returns duration of day btn to isoString dates */\r\n export const durationDays=(initial_date,destination_date)=>{\r\n    let i_date=new Date(initial_date) \r\n    let d_date=new Date(destination_date)\r\n    let duration=d_date.getTime()-i_date.getTime()\r\n      return duration/(1000*3600*24)\r\n }  \r\n/**accepts initial date and destination date and check duration is valid */\r\nexport const checkDate=(initial_date,destination_date)=>\r\n durationDays(initial_date,destination_date)<0? false:true\r\n       \r\n export const FullDay=(Day)=>{\r\n     let date=new Date(Day)\r\n     return date.toUTCString()\r\n }\r\n /**returns utc date representation string removing the time */\r\n export const TellDay=(day)=>{\r\n     let date=new Date(day)\r\n     return date.toUTCString().slice(0,16) \r\n }\r\n export const tellTime=(day)=>{\r\n    let date=new Date(day)\r\n    let hour=date.getHours()\r\n    let minute=date.getMinutes()\r\n    return hour+':'+minute\r\n }\r\n /**converts  ethiopian date to gregorian calander in iso format */   \r\n export const convertToEuropean=(dd,mm,yyyy,hr,min,sec)=>{\r\n     let Hr=hr?hr:1\r\n     let Min=min?min:0\r\n     let Sec=sec?sec:0\r\n    const eth=new ethDateTime(dd,mm,yyyy,Hr,Min,Sec)\r\n    const gr=new Date( converterDateTime.toEuropean(eth))\r\n    return gr.toISOString()\r\n }\r\n /**converts gregorian calander to ethiopian date string */\r\n export const ToEthiopianDateSting=(DATE)=>{\r\n     const date=new Date(DATE)\r\n     const day=parseInt(date.getUTCDay())\r\n     const ken=day===1?'ሰኞ':day===2?'ማክሰኞ':day===3?'ረቡዕ':day===4?'ሐሙስ':\r\n         day===5?'አርብ':day===6?'ቅዳሜ':day===7?'እሁድ':''\r\n     const Month=parseInt(converterDateTime.toEthiopian(date).month)\r\n     const DAte=parseInt(converterDateTime.toEthiopian(date).date) \r\n     const {year}=converterDateTime.toEthiopian(date)\r\n     const month=Month===1?'መስከረም':Month===2?'ጥቅምት':Month===3?'ህዳር':Month===4?'ታህሳስ':\r\n    Month===5?'ጥር':Month===6?'የካቲት':Month===7?'መጋቢት':Month===8?'ሚያዝያ':Month===9?'ግንቦት':\r\n    Month===10?'ሰኔ':Month===11?'ሐምሌ':Month===12?'ነሐሴ':Month===13?'ጳጉሜ':''   \r\n   return ken+' '+DAte+' '+month+' '+year  \r\n}\r\n/**returns object of date,month,year with gc calander as parameter\r\n * @param DATE-accepts date value of gc isostring\r\n */\r\nexport const toEthiopianDate=(DATE)=>{\r\n    const date=new Date(DATE)\r\n    return converterDateTime.toEthiopian(date)\r\n}\r\n/**accepts month number and returns month string */\r\nexport const toEthiopianMonth=Month=>Month===1?'መስከረም':Month===2?'ጥቅምት':Month===3?\r\n'ህዳር':Month===4?'ታህሳስ':Month===5?'ጥር':Month===6?'የካቲት':Month===7?\r\n'መጋቢት':Month===8?'ሚያዝያ':Month===9?'ግንቦት':Month===10?'ሰኔ':Month===11?\r\n'ሐምሌ':Month===12?'ነሐሴ':Month===13?'ጳጉሜ':''\r\n/**accepts initial month number and return month.\r\n *  returns array of months object {number:1,month:String}\r\n * that is duration btn initial and return month to Ethiopian string\r\n * @param imonth=>is the initial month\r\n * @param rmonth=>is the return month \r\n */\r\nexport const durationMonth=(imonth,rmonth)=>{\r\n    let duration=rmonth-imonth<0?(13-imonth)+rmonth:rmonth-imonth\r\n    var months=[],x,j=0\r\n      for(var i=0;i<=duration;i++){\r\n     i+imonth>13?months.push({\r\n         number:rmonth-j ,\r\n        month:toEthiopianMonth(rmonth-j)}):x=0\r\n     i+imonth<=13?months.push({\r\n        number:i+imonth, \r\n        month:toEthiopianMonth(i+imonth)}):j++      \r\n      }\r\n      return months\r\n}\r\n/**return array of years btn two years */\r\nexport const durationYears=(initial_year,final_year)=>{\r\n   let duration=final_year-initial_year\r\n   var years=[]\r\n   for(var i=0;i<=duration;i++){\r\n      years.push(i+initial_year)\r\n   }\r\n   return years\r\n}\r\n/**returns a string of local time formatted like this (11:00 am)  */\r\nexport const localTime=DATE=>{\r\n   const date=new Date(DATE)\r\n   const time=date.toLocaleTimeString()\r\n   const t=time.split(':')\r\n  const local= t[2].split(' ')\r\n  return t[0]+':'+t[1]+' '+(local[1]?local[1]:'')\r\n}\r\n/**return astring of month contactenated like (dec 2 2020) */\r\nexport const simpleDate=DATE=>{\r\n    const date=TellDay(DATE)\r\n    const d=date.split(',')\r\n    return d[1]\r\n}","import { UsersClass } from \"./Users\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\nimport { Donothing, Round } from \"./saveProcess\";\r\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\r\n\r\nexport class LettersClass extends UsersClass {\r\n  constructor(letters, users, employees, department) {\r\n    super(users, employees, department);\r\n    this.letters = letters;\r\n  }\r\n  /**find letter based on given _id\r\n   * @param {*} id - string of letter of letter id\r\n   */\r\n  find_letter = (id) => this.letters.find((l) => l._id === id);\r\n  /**return's object of editorState for react-wywisgy description of the letter\r\n   * @param {*} id - string of letter of letter id\r\n   */\r\n  description = (id) =>\r\n    this.find_letter(id) ? JSON.parse(this.find_letter(id).description) : \"\";\r\n  /**retun's an object for react-wyiswgy editor\r\n   * @param {*} id - string of letter id\r\n   */\r\n  editorState = (id) =>\r\n    this.description(id)\r\n      ? EditorState.createWithContent(convertFromRaw(this.description(id)))\r\n      : EditorState.createEmpty();\r\n  /**retun's string description text of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  description_text = (id) =>\r\n    this.description(id)\r\n      ? this.description(id).blocks[0]\r\n        ? this.description(id).blocks[0].text\r\n        : \"\" + \"<br/>\" + this.description(id).blocks[1]\r\n          ? this.description(id).blocks[1].text\r\n          : \"\"\r\n      : \"\";\r\n  /**returns title of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  title = (id) => (this.find_letter(id) ? this.find_letter(id).title : \"\");\r\n  /**return's array of approval managers of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  approval_managers = (id) =>\r\n    this.find_letter(id) ? this.find_letter(id).approval_manager : [];\r\n  /**return's of object about the information of the approval manager\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id - string of employee id\r\n   */\r\n  manager_info = (id, emp_id) =>\r\n    this.approval_managers(id).find((m) => {\r\n      let Emp_id = emp_id ? emp_id : this.getEmp_id();\r\n      return m.emp_id === Emp_id;\r\n    });\r\n  /**return's participants of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  participants = (id) =>\r\n    this.find_letter(id) ? this.find_letter(id).participants : [];\r\n  /**return's object information about the letter participant\r\n   * @param {*} id - string of letter id\r\n   * @param {*} emp_id - string of employee id\r\n   */\r\n  particpant_info = (id, emp_id) =>\r\n    this.participants(id).find((p) => {\r\n      let Emp_id = emp_id ? emp_id : this.getEmp_id();\r\n      return p.emp_id === Emp_id;\r\n    });\r\n  /**return's array of approval managers that their status is waiting\r\n   * @param {*} id - string of letter id\r\n   */\r\n  need_approval = (id) =>\r\n    this.approval_managers(id).filter((l) => l.status === \"waiting\");\r\n  /**return's array of least approval manager's that approve first\r\n   * @param {*} id - string of letter id\r\n   */\r\n  first_manager = (id) => {\r\n    let min = Math.min.apply(\r\n      null,\r\n      this.approval_managers(id).map((a) => a.step)\r\n    );\r\n    return this.approval_managers(id).filter((m) => m.step === min);\r\n  };\r\n  /**retun's true if the current user is on the approval manager false if the user is npt\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isApproval = (id, emp_id) => (this.manager_info(id, emp_id) ? true : false);\r\n  /** retun's true if the current user is on the participants list false if it is not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isParticipant = (id, emp_id) =>\r\n    this.particpant_info(id, emp_id) ? true : false;\r\n\r\n  /**return's number approval step of the current user\r\n   * @param {*} id - string of letter _id\r\n   * * @param {*} emp_id- string of emp_id\r\n   */\r\n  approvalStep = (id, emp_id) =>\r\n    this.manager_info(id, emp_id) ? this.manager_info(id, emp_id).step : null;\r\n  /** return's if the true if the letter status is waiting false if it is not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  needsApproval = (id, emp_id) =>\r\n    this.need_approval(id).find((m) =>\r\n      m.emp_id === emp_id ? emp_id : this.getEmp_id()\r\n    )\r\n      ? true\r\n      : false;\r\n  /**return's an object array of managers which approved the letter\r\n   * @param {*} id - string of letter _id\r\n   */\r\n  approvedManagers = (id) =>\r\n    this.approval_managers(id).filter((m) => m.status === \"Approved\");\r\n  /** retun's an array of managers that have the same approval stages with the current employee or given emp_id\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  sameStage = (id, emp_id) =>\r\n    this.approval_managers(id).filter(\r\n      (m) =>\r\n        m.step === this.approvalStep(id, emp_id) &&\r\n        m.emp_id !== this.getEmp_id()\r\n    );\r\n  /**retun's true if the rest manager in the same step approved the letter and\r\n   * false if the the rest manager in the same step has not approved yet\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  proceedStage = (id, emp_id) =>\r\n    this.sameStage(id, emp_id).find(\r\n      (m) => m.status === \"waiting\" || m.status === \"unApproved\"\r\n    )\r\n      ? false\r\n      : true;\r\n  /**return's array of employee to approve next\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  nextEmployee = (id, emp_id) => {\r\n    //remove current step employees\r\n    let remove = this.approval_managers(id).filter(\r\n      (m) => m.step !== this.approvalStep(id, emp_id) && m.status !== \"Approved\"\r\n    );\r\n    //determine the minimum step of employee\r\n    let min = Math.min.apply(\r\n      null,\r\n      remove.map((a) => a.step)\r\n    );\r\n    //return the managers\r\n    return this.approval_managers(id).filter((m) => m.step === min);\r\n  };\r\n  /**retun's an array of outbox letters of the user*/\r\n  outBox = () => this.letters.filter((l) => l.creater === this.getEmp_id());\r\n  /**return's array of objects that included on the index search string\r\n   * for Outbox letters\r\n   * @param {*} Index-search string\r\n   */\r\n  searchLetters = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let id = this.outBox().filter((l) =>\r\n      l.id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let title = this.outBox().filter((l) =>\r\n      l.title.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let type = this.outBox().filter((l) =>\r\n      l.type.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    return removeDuplicates([...id, ...title, ...type], \"_id\");\r\n  };\r\n  /**retuns's number of rank approval\r\n   * @param {*} status- string of status\r\n   */\r\n  rank = (status) =>\r\n    status === \"Approved\" ? 1 : status === \"waiting\" ? 0.5 : 0;\r\n  /**return's number of progress of approval manager\r\n   * @param {*} id - string letter id\r\n   */\r\n  progress = (id, i = 0) => {\r\n    this.approval_managers(id).map((m) => {\r\n      m.seen && m.status === \"waiting\"\r\n        ? (i = i + this.rank(m.status))\r\n        : m.status === \"waiting\"\r\n          ? Donothing()\r\n          : (i = i + this.rank(m.status));\r\n    });\r\n    return i;\r\n  };\r\n  /**return's number of totall progress\r\n   * @param {*} id-string of letter id\r\n   */\r\n  totallProgress = (id) =>\r\n    Round((this.progress(id) / this.approval_managers(id).length) * 100);\r\n  /** return's true if the letter can be edited or deleled. false for\r\n   * the letter can approve or deleted\r\n   * @param {*} id-string letter id\r\n   */\r\n  isModifiable = (id) =>\r\n    this.approval_managers(id).find((m) => m.status === \"unApproved\")\r\n      ? true\r\n      : this.progress(id) === 0\r\n        ? true\r\n        : false;\r\n  /**return's true if the approval mananager can approve the letter false if it can not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isApprovable = (id, emp_id) => {\r\n    console.log(this.participants(id).find((l) => l.seen))\r\n    return (this.approval_managers(id).find(\r\n      (m) => m.status === \"unApproved\" && m.emp_id !== this.getEmp_id()\r\n    )\r\n      ? false\r\n      : this.approval_managers(id).find(\r\n        (m) =>\r\n          m.step > this.approvalStep(id, emp_id) && m.status === \"Approved\"\r\n      )\r\n        ? false\r\n        : this.participants(id).find((l) => l.seen)\r\n          ? true\r\n          : true);\r\n  }\r\n  /** return's array of object about unApproved managers list\r\n   * @param {*} id- String letter id\r\n   */\r\n  unApproved = (id) =>\r\n    this.approval_managers(id).filter((m) => m.status === \"unApproved\");\r\n}\r\n","import { tellTime } from \"./Date\";\r\nimport { LettersClass } from \"./Letters\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\nimport { Donothing } from \"./saveProcess\";\r\n\r\nexport class Message extends LettersClass {\r\n  /**\r\n   * @param {*} users=>list of users in the system\r\n   * @param {*} Users => array of objects connected and disconnected users\r\n   */\r\n  constructor(message, letters, users, employees, department) {\r\n    super(letters, users, employees, department);\r\n    this.message = message;\r\n  }\r\n  /** return an object of active or inactive users \r\n     @param {*} emp_id => emp_id of the users\r\n    */\r\n  findConnected = (emp_id) => this.users.find((a) => a.emp_id === emp_id);\r\n  /**returns an array of online users */\r\n  onlineUsers = () => this.users.filter((a) => a.status === \"connected\");\r\n  /** returns true if the user connected to the system  false if it is disconnected\r\n      @param {*} emp_id =>emp_id of the user\r\n     */\r\n  isOnline = (emp_id) =>\r\n    this.onlineUsers().find((a) => a.emp_id === emp_id) ? true : false;\r\n  /**retuns time of disconnected user if the user is new don't use the system before returns\r\n   * empty string\r\n   * @param {*} emp_id => employee id of the user\r\n   */\r\n  lastSeen = (emp_id) =>\r\n    this.findConnected(emp_id)\r\n      ? this.findConnected(emp_id).disconnected_time\r\n      : \"\";\r\n  /**return's array of messages of the current user */\r\n  myMessage = () =>\r\n    this.message.filter(\r\n      (m) => m.sender === this.getEmp_id() || m.reciever === this.getEmp_id()\r\n    );\r\n  /* return's array of employee contacted recently*/\r\n  contactedUsers = () => {\r\n    var u = [];\r\n    this.myMessage().map((m) => {\r\n      m.sender !== this.getEmp_id()\r\n        ? u.push(m.sender)\r\n        : m.reciever !== this.getEmp_id()\r\n        ? u.push(m.reciever)\r\n        : Donothing();\r\n    });\r\n    let contact = new Set(u);\r\n    return [...contact];\r\n  };\r\n  /**retun's array of contacted user emp_id that is searched using search string\r\n   * @param {*} index string - String to search\r\n   */\r\n  searchContacted = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    return this.contactedUsers().filter((c) =>\r\n      this.messageName(c).toString().toLowerCase().includes(index, 0)\r\n    );\r\n  };\r\n  /**return's array of messages of the current user and provided emp_id\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  chatRoom = (emp_id) =>\r\n    this.myMessage().filter(\r\n      (m) => m.sender === emp_id || m.reciever === emp_id\r\n    );\r\n  /**returns new message of the the current user and the provided id\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  newMessages = (emp_id) =>\r\n    this.chatRoom(emp_id).filter(\r\n      (m) => !m.seen && m.reciever === this.getEmp_id()\r\n    );\r\n  /**return's object of last chat contacted with the current user\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  last_message = (emp_id) =>\r\n    this.chatRoom(emp_id).length\r\n      ? this.chatRoom(emp_id)[0]\r\n      : { message: \"\", file_name: \"\", letter_id: \"\", created_date: \"\" };\r\n  /* return's number of all new messages recieved */\r\n  notifiaction = () => {\r\n    var i = 0;\r\n    this.contactedUsers().map((m) => {\r\n      i = i + this.newMessages(m).length;\r\n    });\r\n    return i;\r\n  };\r\n  /** return's an array of inbox letters that the user recieves*/\r\n  InboxLetters = () => {\r\n    //inbox messages with letter\r\n    let inbox = this.message.filter(\r\n      (m) => m.reciever === this.getEmp_id() && m.letter_id !== \"\"\r\n    );\r\n    console.log(inbox);\r\n    return inbox.map((m) => this.find_letter(m.letter_id));\r\n  };\r\n  /**return's array of objects that included on the index search string\r\n   * for Inbox letters\r\n   * @param {*} Index-search string\r\n   */\r\n  SearchLetters = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let id = this.InboxLetters().filter((l) =>\r\n      l.id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let title = this.InboxLetters().filter((l) =>\r\n      l.title.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let type = this.InboxLetters().filter((l) =>\r\n      l.type.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let letters = removeDuplicates([...id, ...title, ...type], \"_id\");\r\n    return {\r\n      newLetters: letters.filter((m) =>\r\n        this.manager_info(m ? m._id : \"\")\r\n          ? !this.manager_info(m._id).seen\r\n          : false || this.particpant_info(m ? m._id : \"\")\r\n          ? !this.particpant_info(m._id).seen\r\n          : false\r\n      ),\r\n      seenLetters: letters.filter((m) =>\r\n        this.manager_info(m ? m._id : \"\")\r\n          ? this.manager_info(m._id).seen\r\n          : false || this.particpant_info(m ? m._id : \"\")\r\n          ? this.particpant_info(m._id).seen\r\n          : false\r\n      ),\r\n    };\r\n  };\r\n  newInboxLetters = () =>\r\n    this.InboxLetters().filter((m) =>\r\n      this.manager_info(m ? m._id : \"\")\r\n        ? !this.manager_info(m ? m._id : \"\").seen\r\n        : false || this.particpant_info(m ? m._id : \"\")\r\n        ? !this.particpant_info(m ? m._id : \"\").seen\r\n        : false\r\n    );\r\n  seenInboxLetters = () =>\r\n    this.InboxLetters().filter((m) =>\r\n      this.manager_info(m ? m._id : \"\")\r\n        ? this.manager_info(m ? m._id : \"\").seen\r\n        : false || this.particpant_info(m ? m._id : \"\")\r\n        ? this.particpant_info(m ? m._id : \"\").seen\r\n        : false\r\n    );\r\n  /**return's allowance letter of the user*/\r\n  allowanceLetter = () =>\r\n    this.InboxLetters().filter((a) => a.type === \"allowance\");\r\n}\r\n","import React from 'react'\r\nimport { DotLoading } from './Loading'\r\n\r\n   const DataLoading=()=> {\r\n    return (\r\n        <div className=\"col-lg-12\">\r\n            <div className=\"main-card mb-3 min-height card\">\r\n             <h3 className=\"text-center\">Loading...</h3> \r\n              <DotLoading className='mt-5'/>  \r\n                </div>    \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DataLoading\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\n  const ErrorLoading=()=> {\r\n    return (\r\n        <div className=\"col-lg-12 \">\r\n\r\n<div className=\"main-card mb-3 min-height card\">\r\n  <h3 className='mt-5 text-center text-danger'>\r\n    <FontAwesomeIcon icon={faWindowClose} className='fa-2x'/>\r\n    <br/>  \r\n  ...oops loading failed the server is down or not active\r\n  contact admin\r\n  </h3>  \r\n    </div>    \r\n</div>\r\n    )\r\n}\r\n\r\nexport default ErrorLoading\r\n","import { faEnvelopeOpen, faForward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext } from \"../contexts/contexts\";\r\n\r\nconst LetterTypes = () => {\r\n  const { values, setValues } = useContext(LetterContext);\r\n  const { type, step } = values;\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <div className=\"row card\">\r\n        <div className=\"col-lg-12 mb-2\">\r\n          <h2 className=\"text-center\">Please select letter type</h2>\r\n          <hr />\r\n        </div>\r\n        <div\r\n          className=\"col-lg-12 text-center my-2\"\r\n          onClick={() => setValues({ ...values, type: \"allowance\" })}\r\n        ></div>\r\n        <div\r\n          className=\"col-lg-12 text-center my-2\"\r\n          onClick={() => setValues({ ...values, type: \"normal\" })}\r\n        >\r\n          {type === \"normal\" ? (\r\n            <button className=\"btn btn-info\">\r\n              <h3>\r\n                <FontAwesomeIcon icon={faEnvelopeOpen} className=\"mx-2\" />\r\n                Normal letter\r\n              </h3>\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn\">\r\n              <h3>\r\n                <FontAwesomeIcon icon={faEnvelopeOpen} className=\"mx-2\" />\r\n                Normal letter\r\n              </h3>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-4\">\r\n          {type ? (\r\n            <button\r\n              className=\"btn btn-info float-right text-white\"\r\n              onClick={() =>\r\n                setValues({\r\n                  ...values,\r\n                  step:\r\n                    values.type === \"allowance\"\r\n                      ? 2\r\n                      : step <= 2\r\n                      ? 2\r\n                      : values.step,\r\n                  tab:\r\n                    values.type === \"allowance\"\r\n                      ? \"create\"\r\n                      : step <= 2\r\n                      ? \"create\"\r\n                      : step === 3\r\n                      ? \"approval\"\r\n                      : step === 4\r\n                      ? \"parcticpant\"\r\n                      : \"\",\r\n                })\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faForward} className=\"mx-2\" />\r\n              Next\r\n            </button>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LetterTypes);\r\n","import { faBackward, faBarcode, faCalendar, faCar, faDraftingCompass, faForward, faProjectDiagram, faTruck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { LetterContext } from '../contexts/contexts'\r\nimport { convertToRaw,EditorState,convertFromRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToMarkdown,{} from 'draftjs-to-markdown'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { checkDate, convertToEuropean } from '../../controllers/Date';\r\nimport { Donothing } from '../../controllers/saveProcess';\r\n const WriteLetter=()=> {\r\n   const {values,setValues}=useContext(LetterContext)\r\n   const {type,editorState,step}=values\r\n   const [state,setState]=useState({\r\n       error:false,\r\n       derror:false,\r\n       description:''\r\n   })\r\n   const text=useRef(null)\r\n   const date=useRef(null)\r\n   const onEditorStateChange=editorState=>{\r\nsetValues({...values,editorState,description:JSON.stringify(convertToRaw(editorState.getCurrentContent()))})\r\n       setState({...values,error:false,derror:false})\r\n    }\r\n \r\n //setValues({...values,editorState:JSON.stringify(convertToRaw(editorState.getCurrentContent()))})\r\n// const content=editorState?\r\n//             EditorState.createWithContent(convertFromRaw(JSON.parse(editorState))):\r\n//             EditorState.createEmpty() \r\n\r\nconst handleSubmit=e=>{\r\n   e.preventDefault()\r\n   let err=!editorState?true:false\r\n   if(err){\r\n      setState({...values,error:true})\r\n      try{\r\n        text.current.focus()\r\n      }\r\n      catch(err){\r\n        console.log(err)\r\n      }\r\n   }\r\n   else{\r\n     if(type==='allowance'){\r\n\r\n      try{\r\n  let initial=convertToEuropean(values.idate,values.imonth,values.iyear) \r\n  let Return=convertToEuropean(values.rdate,values.rmonth,values.ryear)  \r\n  if(!checkDate(initial,Return)){\r\n      setState({...state,derror:true})\r\n      date.current.focus()\r\n     } \r\n          else{\r\nsetValues({...values,step:step<=2?3:step, tab:step<=3?'approval':step===4?'parcticpant':''})\r\n          }\r\n        }\r\n          catch(err){\r\n           setState({...state,derror:true})\r\n        date.current.focus()\r\n          }\r\n     }\r\n     else{\r\nsetValues({...values,step:step<=2?3:step,tab:step<=3?'approval':step===4?'parcticpant':''})    \r\n     }\r\n}}\r\nreturn (\r\n    <form onSubmit={e=>handleSubmit(e)}>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n         <div className=\"col-lg-12 text-center\">\r\n    <div className=\"signup-form\">\r\n    <p className=\"font-weight-bold text-center\">Title</p>\r\n    <div className=\"form-group\">\r\n\t\t\t<div className=\"input-group input-container\">\r\n\t\t\t\t<span className=\"input-group-addon\">\r\n    <h3>T</h3>\r\n                    </span>\r\n    <input type=\"text\" className=\"input-field form-control\" \r\n        placeholder=\"Title\" required={true} value={values.title}\r\n        onChange={e=>setValues({...values,title:e.target.value})}\r\n        />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n</div>\r\n<div className=\"col-lg-12\">\r\n<p className=\"font-weight-bold text-center\">Description</p>\r\n<Editor  toolbarClassName=\"toolbarClassName\" \r\neditorStyle={{marginLeft:100,width:'212mm',minHeight:450, border: \"1px solid\",borderColor:values.error?'red':'' }}\r\nwrapperClassName=\"wrapperClassName\"\r\n  editorClassName=\"editorClassName\"\r\n   onEditorStateChange={onEditorStateChange}\r\n   editorState={editorState}\r\n   ref={text}\r\n   />\r\n   {\r\n    state.error?\r\n    <p className=\"text-center text-danger font-weight-bold\">\r\n      Please enter description\r\n      </p>:\r\n      <p></p>\r\n   }\r\n   \r\n</div>\r\n<div>\r\n     \r\n      </div>\r\n         </div>\r\n         {\r\n        type==='allowance'?\r\n       <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n          <p className=\"font-weight-bold text-center\">Objective</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faDraftingCompass} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\" value={values.objective}\r\n placeholder=\"Objective\" onChange={e=>setValues({...values,objective:e.target.value})}\r\n required={true} value={values.objective}\r\n    />\r\n</div>\r\n<p className=\"font-weight-bold text-center\">Project name and code</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faBarcode} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n  value={values.project_name}\r\n placeholder=\"Project name and code\" onChange={e=>setValues({...values,project_name:e.target.value})} \r\n   />\r\n</div>\r\n<p className=\"font-weight-bold text-center\">program name</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faProjectDiagram} \r\n    className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\nvalue={values.program}\r\n placeholder=\"Program name\" onChange={e=>setValues({...values,program:e.target.value})} \r\n   />\r\n</div>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n\r\n<p className=\"font-weight-bold text-center\">Initial Place</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faTruck} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n placeholder=\"Initial place\" onChange={e=>setValues({...values,initial_place:e.target.value})} \r\n   values={values.initial_place} required={true}/>\r\n</div>\r\n<p className=\"font-weight-bold text-center\">Destination Place</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCar} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n placeholder=\"Destination place\" onChange={e=>setValues({...values,destination_place:e.target.value})} \r\n   value={values.destination_place} required={true}/>\r\n</div>\r\n<p className=\"font-weight-bold text-center\">\r\n     Initial Date\r\n     </p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCalendar} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"dd\" min={1} max={30} value={values.idate}  onChange={e=>{\r\n     setValues({...values,idate:parseInt(e.target.value)\r\n})}} required={true} />\r\n  <select  className=\"input-field form-control my-auto\"\r\n      onChange={e=>setValues({...values,imonth:parseInt(e.target.value)\r\n        ,process:'',error:'',success:''})} value={values.imonth} required={true}>\r\n        <option value=\"\">mm</option>\r\n      <option value={1}>መስከረም</option>\r\n      <option value={2}>ጥቅምት</option>\r\n      <option value={3}>ህዳር</option>\r\n      <option value={4}>ታህሳስ</option>\r\n      <option value={5}>ጥር</option>\r\n      <option value={6}>የካቲት</option>\r\n      <option value={7}>መጋቢት</option>\r\n      <option value={8}>ሚያዝያ</option>\r\n      <option value={9}>ግንቦት</option>\r\n      <option value={10}>ሰኔ</option>\r\n      <option value={11}>ሐምሌ</option>\r\n      <option value={12}>ነሐሴ</option>\r\n      <option value={13}>ጳጉሜ</option>\r\n      </select> \r\n      <input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"YYYY\"  min={2013} onChange={e=>{\r\n     setValues({...values,iyear:parseInt(e.target.value)})}} required={true} \r\n     value={values.iyear}/>\r\n     <p className=\"my-auto font-weight-bold\">\r\n         E.C\r\n         </p>    \r\n </div> \r\n <p className=\"font-weight-bold text-center\">\r\n     Return Date\r\n     </p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCalendar} \r\n    className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"dd\" min={1} max={30} value={values.rdate}  \r\n      onChange={e=>{\r\n  setValues({...values,rdate:parseInt(e.target.value)})}} \r\n     required={true} ref={date}/>\r\n  <select  className=\"input-field form-control my-auto\" value={values.rmonth}\r\n      onChange={e=>setValues({...values,rmonth:parseInt(e.target.value)\r\n        ,process:'',error:'',success:''})} required={true}>\r\n        <option value=\"\">mm</option>\r\n      <option value={1}>መስከረም</option>\r\n      <option value={2}>ጥቅምት</option>\r\n      <option value={3}>ህዳር</option>\r\n      <option value={4}>ታህሳስ</option>\r\n      <option value={5}>ጥር</option>\r\n      <option value={6}>የካቲት</option>\r\n      <option value={7}>መጋቢት</option>\r\n      <option value={8}>ሚያዝያ</option>\r\n      <option value={9}>ግንቦት</option>\r\n      <option value={10}>ሰኔ</option>\r\n      <option value={11}>ሐምሌ</option>\r\n      <option value={12}>ነሐሴ</option>\r\n      <option value={13}>ጳጉሜ</option>\r\n      </select> \r\n      <input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"YYYY\"  min={2013} onChange={e=>{\r\n     setValues({...values,ryear:parseInt(e.target.value),process:'',\r\n     error:'',success:''\r\n     })}} required={true} value={values.ryear}/>\r\n     <p className=\"my-auto font-weight-bold\">\r\n         E.C\r\n         </p>\r\n </div> \r\n              </div>\r\n\r\n           </div>:\r\n           <p></p>      \r\n         } \r\n         <div className=\"row\">\r\n     <div className=\"col-lg-12\">\r\n   {\r\n     state.derror?\r\n     <p className=\"text-center text-danger font-weight-bold\">\r\n       Invalid date entered please check initial day and return day\r\n       </p>:\r\n     <p></p>\r\n   }    \r\n       </div>      \r\n             <div className=\"col-lg-6\">\r\n           <div className=\"btn-danger btn\" onClick={()=>setValues({...values,tab:'type'})}>\r\n          <FontAwesomeIcon icon={faBackward}  className='text-white'/>\r\n          Back    \r\n               </div>      \r\n             </div>\r\n             <div className=\"col-lg-6\">\r\n        <button type=\"submit\" className=\"btn btn-info mt-3 float-right\">\r\n            <FontAwesomeIcon icon={faForward} className='text-white' />\r\n            Next\r\n            </button>        \r\n             </div>\r\n         </div>  \r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WriteLetter\r\n","import {\r\n  faBackward,\r\n  faForward,\r\n  faLevelUpAlt,\r\n  faObjectGroup,\r\n  faPlus,\r\n  faTrash,\r\n  faUser,\r\n  faUserAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, usevalues, useEffect } from \"react\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { UsersClass } from \"../../controllers/Users\";\r\nimport { LetterContext, StoreContext } from \"../contexts/contexts\";\r\n\r\nconst Approval = () => {\r\n  const { values, setValues, emp_id } = useContext(LetterContext);\r\n  const { employees, users, department } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading, error: empError } = employees;\r\n  const { state: Users, loading: usersLoading, error: usersError } = users;\r\n  const user = new UsersClass(Users, Employees, department.state);\r\n  const { type } = values;\r\n\r\n  /**retun's a number of maximum step of approval*/\r\n  const approvalMax = () => {\r\n    let i = 0;\r\n    values.approval_manager.map((e) =>\r\n      e.step > i ? (i = e.step) : Donothing()\r\n    );\r\n    values.f_director.map((e) => (e.step > i ? (i = e.step) : Donothing()));\r\n    return i;\r\n  };\r\n  /** set the values value of approval managaer if it is not finance director if finance director\r\n   * set f_director\r\n   * @param {*} id=>String of emp_id\r\n   * @param {*} type => string manager if the employee is different from finance director and fd if the user is finance director\r\n   *\r\n   */\r\n  const addManager = (id) => {\r\n    values.approval_manager.find((e) => e.emp_id === id)\r\n      ? Donothing()\r\n      : setValues((s) => ({\r\n          ...s,\r\n          approval_manager: [\r\n            ...s.approval_manager,\r\n            { emp_id: id, step: approvalMax() + 1 },\r\n          ],\r\n        }));\r\n\r\n    // managerSort()\r\n    //  FD_Sort()\r\n  };\r\n  /** set level for approval for approval manager\r\n   * @param {*} emp_id String of emp_id\r\n   * @param {*} step number step to set\r\n   */\r\n  const MsetLevel = (emp_id, step) => {\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: step\r\n        ? [\r\n            ...s.approval_manager.filter((e) => e.emp_id !== emp_id),\r\n            { emp_id, step },\r\n          ]\r\n        : s.approval_manager,\r\n    }));\r\n  };\r\n\r\n  const removeManager = (emp_id) =>\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: s.approval_manager.filter((e) => e.emp_id !== emp_id),\r\n    }));\r\n\r\n  const handleSearch = (index) =>\r\n    setValues({\r\n      ...values,\r\n      employees: index !== \"\" ? user.searchEmployee(index) : [],\r\n    });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Search employee name,department,userole\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"col-lg-12 mt-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  Select\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {values.employees.length ? (\r\n                values.employees.map((e) => {\r\n                  return (\r\n                    <tr key={e._id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.department)}</td>\r\n                      <td>{e.type}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => addManager(e.emp_id)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                          select\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={5}\r\n                    className=\"text-center text-danger font-weight-bold\"\r\n                  >\r\n                    No Employees found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <h3 className=\"text-center\">Approval Managers</h3>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faLevelUpAlt} className=\"mx-2\" />\r\n                  step to approve\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  set approval step\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faTrash} className=\"mx-2\" />\r\n                  Remove\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {!values.approval_manager.length && !values.f_director.length ? (\r\n                <tr>\r\n                  <td colSpan={6} className=\"text-center font-weight-bold\">\r\n                    No Employess added for approval\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                values.approval_manager.map((e) => {\r\n                  return (\r\n                    <tr key={e.emp_id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.emp_id)}</td>\r\n                      <td>{user.UserRole(e.emp_id)}</td>\r\n                      <td>{e.step}</td>\r\n                      <td className=\"text-center input-container\">\r\n                        <p className=\"mx-2\">set Level</p>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"input-field\"\r\n                          onChange={(ev) =>\r\n                            MsetLevel(e.emp_id, parseInt(ev.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td\r\n                        className=\"text-center\"\r\n                        onClick={() => removeManager(e.emp_id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} className=\"fa-1x\" />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-6 mt-3\">\r\n          <div\r\n            className=\"btn-danger btn\"\r\n            onClick={() => setValues({ ...values, tab: \"create\" })}\r\n          >\r\n            <FontAwesomeIcon icon={faBackward} className=\"text-white\" />\r\n            Back\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 mt-3\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info float-right\"\r\n            onClick={() =>\r\n              setValues({ ...values, tab: \"participant\", step: 4 })\r\n            }\r\n          >\r\n            <FontAwesomeIcon icon={faForward} className=\"text-white\" />\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Approval;\r\n","export const emitter=socket=>{\r\n    socket.emit('letters','')\r\n    socket.emit('chat','')\r\n}","import {\r\n  faInfo,\r\n  faObjectGroup,\r\n  faPlus,\r\n  faTrash,\r\n  faUser,\r\n  faUserAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { convertToEuropean } from \"../../controllers/Date\";\r\nimport { LettersClass } from \"../../controllers/Letters\";\r\nimport {\r\n  Donothing,\r\n  randomId,\r\n  saveProcess,\r\n} from \"../../controllers/saveProcess\";\r\nimport { addMessages } from \"../../store/Actions/messageActions\";\r\nimport { decrptObject, encryptObject } from \"../auth/encrypt\";\r\nimport { host } from \"../config/config\";\r\nimport { LetterContext, StoreContext } from \"../contexts/contexts\";\r\nimport { DotLoading } from \"../layout/Loading\";\r\nimport { userInfo } from \"../users/userInfo\";\r\nimport { emitter } from \"../fetchers/Emmitters\";\r\nconst AddParticipants = () => {\r\n  const { emp_id, setValues, values, id: _id } = useContext(LetterContext);\r\n  const { approval_manager, f_director } = values;\r\n  const managers = [\r\n    ...(approval_manager ? approval_manager : []),\r\n    ...(f_director ? f_director : []),\r\n  ];\r\n  const { employees, users, socket, letters, department } =\r\n    useContext(StoreContext);\r\n  const { state: Employees } = employees;\r\n  const { state: Users } = users;\r\n  const user = new LettersClass(\r\n    letters.state,\r\n    Users,\r\n    Employees,\r\n    department.state\r\n  );\r\n  const letter = user.find_letter(_id);\r\n  const rid = randomId() + socket ? socket.id : \"\";\r\n  const [state, setState] = useState({ i: 0, ...saveProcess(\"default\") });\r\n\r\n  useEffect(() => {\r\n    //if the user is not on approval manager list add to partcipants list *\r\n    values.usage === \"create\" && emp_id\r\n      ? managers.find((m) => m.emp_id === emp_id)\r\n        ? Donothing()\r\n        : setValues((s) => ({\r\n            ...s,\r\n            participants: [...s.participants, { emp_id }],\r\n          }))\r\n      : Donothing();\r\n  }, []);\r\n\r\n  /** search\r\n   * @param {*} index-string value to search from\r\n   */\r\n  const handleSearch = (index) =>\r\n    setValues({\r\n      ...values,\r\n      employees: index !== \"\" ? user.searchEmployee(index) : [],\r\n    });\r\n  /**add the employee id participants array list\r\n   * @param {*} emp_id-string of employee id\r\n   */\r\n  const addParticipant = (emp_id) =>\r\n    values.participants.find((p) => p.emp_id === emp_id)\r\n      ? Donothing()\r\n      : setValues((s) => ({\r\n          ...s,\r\n          participants: [...s.participants, { emp_id }],\r\n        }));\r\n  /**removes the employee from participants array\r\n   * @param {*} emp_id-string of employee id\r\n   */\r\n  const removeParticpant = (emp_id) =>\r\n    setValues((s) => ({\r\n      ...s,\r\n      participants: s.participants.filter((p) => p.emp_id !== emp_id),\r\n    }));\r\n  /**complete all process and send to the server */\r\n  const saveLetter = async () => {\r\n    try {\r\n      const {\r\n        type,\r\n        title,\r\n        objective,\r\n        initial_place,\r\n        destination_place,\r\n        idate,\r\n        imonth,\r\n        iyear,\r\n        rdate,\r\n        rmonth,\r\n        ryear,\r\n        participants,\r\n        description,\r\n        project_name,\r\n        program,\r\n      } = values;\r\n\r\n      let initial_date =\r\n        type === \"allowance\" ? convertToEuropean(idate, imonth, iyear) : \"\";\r\n      let return_date =\r\n        type === \"allowance\" ? convertToEuropean(rdate, rmonth, ryear) : \"\";\r\n\r\n      if (values.usage === \"create\") {\r\n        /**telling user is saving process */\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\"initial\", \"saving please wait...\"),\r\n        }));\r\n        /**sending to the server using socket connection */\r\n        socket.emit(\"create_letter\", {\r\n          creater: user.getEmp_id(),\r\n          type,\r\n          title,\r\n          description,\r\n          objective,\r\n          initial_place,\r\n          project_name,\r\n          program,\r\n          destination_place,\r\n          initial_date,\r\n          return_date,\r\n          participants,\r\n          approval_manager: managers,\r\n          rid,\r\n        });\r\n\r\n        /**retrieving the response */\r\n        socket.on(\"create_letter\", (data) => {\r\n          if (data.rid === rid) {\r\n            createMessage(data);\r\n          } else {\r\n            setState((s) => ({\r\n              ...s,\r\n              ...saveProcess(\"error\", \"Saving error please try again letter\"),\r\n            }));\r\n          }\r\n        });\r\n      } else if (values.usage === \"edit\") {\r\n        /**edit process */\r\n        var i = 0;\r\n        /**telling user is saving process */\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\"initial\", \"updating please wait...\"),\r\n        }));\r\n        /**sending to the server using socket connection */\r\n        socket.emit(\"update_letter\", {\r\n          _id,\r\n          ...letter,\r\n          type,\r\n          title,\r\n          description,\r\n          objective,\r\n          initial_place,\r\n          project_name,\r\n          program,\r\n          destination_place,\r\n          initial_date,\r\n          return_date,\r\n          participants,\r\n          approval_manager: managers,\r\n          rid,\r\n        });\r\n        const req = await axios.put(host + \"/delMessages\", {\r\n          data: encryptObject({ _id, ...userInfo() }),\r\n        });\r\n        const res = decrptObject(req.data);\r\n        if (res.deleted) {\r\n          createMessage({ _doc: { title, _id } });\r\n        }\r\n      } else {\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\r\n            \"error\",\r\n            \"unable to update message of the letter please try again letter\"\r\n          ),\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setState((s) => ({\r\n        ...s,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"unable to update letter please try again letter\"\r\n        ),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const createMessage = async (data) => {\r\n    const L = await axios.get(host + \"/letters\", {\r\n      headers: { data: encryptObject(userInfo()) },\r\n    });\r\n    const l = decrptObject(L.data);\r\n    console.log(l);\r\n    /**after saving create message that says about the letter */\r\n    let Letter = new LettersClass(l, Users, Employees, department.state);\r\n\r\n    const Data = Letter.first_manager(data._doc._id).map((m) => {\r\n      return {\r\n        message: data._doc.title,\r\n        letter_id: data._doc._id,\r\n        sender: user.getEmp_id(),\r\n        reciever: m.emp_id,\r\n      };\r\n    });\r\n\r\n    /*if their is no approval manager give it to particiapants */\r\n    const part = Letter.first_manager(data._doc._id).length\r\n      ? []\r\n      : Letter.participants(data._doc._id).map((p) => {\r\n          return {\r\n            message: data._doc.title,\r\n            letter_id: data._doc._id,\r\n            sender: user.getEmp_id(),\r\n            reciever: p.emp_id,\r\n          };\r\n        });\r\n\r\n    let req = await axios.post(host + \"/messages\", {\r\n      data: encryptObject({ messages: [...part, ...Data], ...userInfo() }),\r\n    });\r\n    let res = decrptObject(req.data);\r\n    console.log(res);\r\n    if (res.created) {\r\n      /**saved sucessfully*/\r\n      setState((s) => ({\r\n        ...s,\r\n        ...(values.usage === \"create\"\r\n          ? saveProcess(\"success\", \"saving letter success\")\r\n          : saveProcess(\"success\", \"updating letter success\")),\r\n      }));\r\n    } else {\r\n      setState((s) => ({\r\n        ...s,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"Error in creating message please try again later...\"\r\n        ),\r\n      }));\r\n    }\r\n    emitter(socket);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <h4 className=\"text-center my-3\">Add Recievers</h4>\r\n          <p className=\"text-small font-weight-bold font-italic text-center\">\r\n            <FontAwesomeIcon icon={faInfo} className=\"text-info mx-2\" />\r\n            what are Recievers ?- are employees which don't need to approve\r\n            ,simply they are the employees that are include in the letter\r\n          </p>\r\n        </div>\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Search employee name,department,userole\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"col-lg-12 mt-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  Select\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {values.employees.length ? (\r\n                values.employees.map((e) => {\r\n                  return (\r\n                    <tr key={e._id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.dpName(e.department)}</td>\r\n                      <td>{e.position}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => addParticipant(e.emp_id)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                          Add\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={5}\r\n                    className=\"text-center text-danger font-weight-bold\"\r\n                  >\r\n                    No Employees found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12 my-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faTrash} className=\"mx-2\" />\r\n                  Remove\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {!values.participants.length ? (\r\n                <tr>\r\n                  <td colSpan={5} className=\"text-center font-weight-bold\">\r\n                    No particpants added\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                values.participants.map((e) => {\r\n                  return (\r\n                    <tr key={e.emp_id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.emp_id)}</td>\r\n                      <td>{user.UserRole(e.emp_id)}</td>\r\n\r\n                      <td\r\n                        className=\"text-center\"\r\n                        onClick={() => removeParticpant(e.emp_id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} className=\"fa-1x\" />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-danger text-center font-weight-bold\">\r\n              {state.error}\r\n            </p>\r\n            <p className=\"text-success text-center font-weight-bold\">\r\n              {state.success}\r\n            </p>\r\n            <p className=\"text-info text-center font-weight-bold\">\r\n              {state.process}\r\n            </p>\r\n            {state.loading ? <DotLoading /> : <p></p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 my-2\"></div>\r\n        <div className=\"col-lg-6 my-2\">\r\n          <button\r\n            disabled={state.disable}\r\n            className=\"btn float-right btn-info\"\r\n            onClick={() => saveLetter()}\r\n          >\r\n            save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddParticipants;\r\n","import {\r\n  faEdit,\r\n  faLayerGroup,\r\n  faUserCheck,\r\n  faUserEdit,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext } from \"../contexts/contexts\";\r\nimport { Progress } from \"reactstrap\";\r\nimport LetterTypes from \"./LetterTypes\";\r\nimport WriteLetter from \"./WriteLetter\";\r\nimport Approval from \"./Approval\";\r\nimport AddParticipants from \"./AddParticipants\";\r\nconst CreateLetters = ({ match, setSize }) => {\r\n  const emp_id = match.params.id;\r\n  const [values, setValues] = useState({\r\n    step: 1,\r\n    type: \"\",\r\n    tab: \"type\",\r\n    employees: [],\r\n    approval_manager: [],\r\n    f_director: [],\r\n    participants: [],\r\n    usage: \"create\",\r\n  });\r\n  useEffect(() => {\r\n    setSize(\"xl\");\r\n  }, []);\r\n  /**return's a string of 4 types\r\n   * @param {*} tab clicked tab\r\n   */\r\n  const setTab = (tab) => {\r\n    if (tab === \"type\") {\r\n      return \"type\";\r\n    } else if (tab === \"create\") {\r\n      return values.step >= 2 ? \"create\" : \"type\";\r\n    } else if (tab === \"approval\") {\r\n      return values.step >= 3\r\n        ? \"approval\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : \"\";\r\n    } else if (tab === \"participant\") {\r\n      return values.step >= 4\r\n        ? \"participant\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : values.step == 3\r\n        ? \"approval\"\r\n        : \"\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <LetterContext.Provider value={{ setValues, values, setSize, emp_id }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"type\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon icon={faLayerGroup} className=\"text-info\" />\r\n              select type\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"create\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faEdit}\r\n                className={values.step >= 2 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Write aletter\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"approval\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUserCheck}\r\n                className={values.step >= 3 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Select approval stages\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"participant\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className={values.step >= 4 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Add Recievers\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12 my-3\">\r\n          <h4 className=\"text-center\">\r\n            <Progress animated multi>\r\n              <Progress animated bar value={25}>\r\n                select type\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"warning\"\r\n                value={values.step >= 2 ? 25 : 0}\r\n              >\r\n                Write aletter\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"info\"\r\n                value={values.step >= 3 ? 25 : 0}\r\n              >\r\n                Select approval stages\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"success\"\r\n                value={values.step >= 4 ? 25 : 0}\r\n              >\r\n                Add participants\r\n              </Progress>\r\n            </Progress>\r\n          </h4>\r\n        </div>\r\n        {values.tab === \"type\" ? (\r\n          <LetterTypes />\r\n        ) : values.tab === \"create\" ? (\r\n          <WriteLetter />\r\n        ) : values.tab === \"approval\" ? (\r\n          <Approval />\r\n        ) : values.tab === \"participant\" ? (\r\n          <AddParticipants />\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </LetterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateLetters);\r\n","import { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport React,{useContext, useState} from 'react'\r\nimport { saveProcess } from '../../controllers/saveProcess'\r\nimport { decrptObject, encryptObject } from '../auth/encrypt'\r\nimport { host } from '../config/config'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { DotLoading } from '../layout/Loading'\r\nimport { userInfo } from '../users/userInfo'\r\n\r\nconst DeleteLetter=({_id,close})=> {\r\n    const [state,setState]=useState({\r\n        deleted:false,\r\n        ...saveProcess('default')\r\n    })\r\n    const {socket}=useContext(StoreContext)\r\n const Delete=async ()=>{\r\n  try{\r\nsetState({...state,...saveProcess('initial','Deleting...')})\r\n    const req=await axios.put(host+'/letters',\r\n    {data:encryptObject({_id,...userInfo()})}) \r\n  const res=decrptObject(req.data)\r\n  if(res.deleted){\r\n   const del=await axios.put(host+'/delMessages',\r\n   {data:encryptObject({_id,...userInfo()})})\r\n   const rdel=decrptObject(del.data)\r\nif(rdel.deleted){\r\n    setState(s=>({...s,\r\n        ...saveProcess('success','Deleted successfully'),\r\n        deleted:true\r\n    }))\r\n    \r\n}\r\nelse{\r\n    setState(s=>({...s,...saveProcess('error','unable to delete messages of the letter please contact admin')}))\r\n}\r\n      \r\n   \r\n  }\r\n  else{\r\n    setState(s=>({...s,...saveProcess('error','unable to delete letter please try again letter')}))   \r\n  } \r\n  }\r\n  catch(err){\r\n    setState(s=>({...s,...saveProcess('error','unable to letter internal server error')}))\r\n  }\r\n\r\n}   \r\n    return (\r\n       <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    \r\n                        {state.deleted?\r\n                            <h5 className=\"text-center text-success\">\r\n    <FontAwesomeIcon icon={faCheck} /> Deleted\r\n    </h5>:\r\n    <h5 className=\"text-center text-info\">\r\n        {state.progress}\r\n        </h5> \r\n                        }\r\n                   <p className=\"text-center\">\r\n    { state.loading?<DotLoading/>:<p></p>   }  \r\n                   </p>\r\n                </div>\r\n            </div>\r\n        <div className=\"row float-right\">\r\n       {\r\n           //if deleted populate with new data else close with out populating\r\n           state.deleted?\r\n        <button className=\"btn btn-info float-right mx-2\"\r\n         disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faWindowClose} className='mx-2 fx-2'/>\r\n        Close\r\n        </button>:\r\n        <button className=\"btn btn-info float-right\"\r\n         onClick={()=>close()} disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faWindowClose} className='mx-2 fx-2'/>\r\n        Cancel\r\n        </button>\r\n       }     \r\n        \r\n       {\r\n           !state.deleted?\r\n        <button className=\"btn btn-primary float-right mx-2\" onClick={()=>Delete()}\r\n             disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faCheck} className='mx-2 fx-2'/>\r\n        Yes\r\n        </button>:\r\n        <p></p> \r\n       } \r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteLetter\r\n","import {\r\n  faEdit,\r\n  faLayerGroup,\r\n  faUserCheck,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { LettersClass } from \"../../../controllers/Letters\";\r\nimport { Progress } from \"reactstrap\";\r\nimport { toEthiopianDate } from \"../../../controllers/Date\";\r\nimport Approval from \"../Approval\";\r\nimport LetterTypes from \"../LetterTypes\";\r\nimport WriteLetter from \"../WriteLetter\";\r\nimport AddParticipants from \"../AddParticipants\";\r\nimport { Donothing } from \"../../../controllers/saveProcess\";\r\n\r\nconst EditLetter = ({ match, l_id: id }) => {\r\n  const emp_id = match.params.id;\r\n\r\n  const { letters, users, employees } = useContext(StoreContext);\r\n  const Letter = new LettersClass(letters.state, users.state, employees.state);\r\n  const letter = Letter.find_letter(id);\r\n  const [values, setValues] = useState({\r\n    step: 1,\r\n    type: \"\",\r\n    tab: \"type\",\r\n    employees: [],\r\n    approval_manager: [],\r\n    f_director: [],\r\n    participants: [],\r\n    usage: \"edit\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let apm = Letter.approval_managers(id).filter(\r\n      (e) => Letter.UserRole(e.emp_id) !== \"f_director\"\r\n    );\r\n    let fdirector = Letter.approval_managers(id).filter(\r\n      (e) => Letter.UserRole(e.emp_id) === \"f_director\"\r\n    );\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: apm.map((m) => {\r\n        return { emp_id: m.emp_id, step: m.step };\r\n      }),\r\n      f_director: fdirector.map((fd) => {\r\n        return { emp_id: fd.emp_id, step: fd.step };\r\n      }),\r\n      participants: Letter.participants(id).map((p) => {\r\n        return p ? { emp_id: p.emp_id } : Donothing();\r\n      }),\r\n      type: letter.type,\r\n      editorState: Letter.editorState(id),\r\n      description: JSON.stringify(Letter.description(id)),\r\n      title: letter.title,\r\n      /**for allowance letter type */\r\n      objective: letter.objective,\r\n      project_name: letter.project_name,\r\n      program: letter.program,\r\n      initial_place: letter.initial_place,\r\n      destination_place: letter.destination_place,\r\n      idate:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).date\r\n          : \"\",\r\n      imonth:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).month\r\n          : \"\",\r\n      iyear:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).year\r\n          : \"\",\r\n      rdate:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).date\r\n          : \"\",\r\n      rmonth:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).month\r\n          : \"\",\r\n      ryear:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).year\r\n          : \"\",\r\n    }));\r\n  }, []);\r\n\r\n  const setTab = (tab) => {\r\n    if (tab === \"type\") {\r\n      return \"type\";\r\n    } else if (tab === \"create\") {\r\n      return values.step >= 2 ? \"create\" : \"type\";\r\n    } else if (tab === \"approval\") {\r\n      return values.step >= 3\r\n        ? \"approval\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : \"\";\r\n    } else if (tab === \"participant\") {\r\n      return values.step >= 4\r\n        ? \"participant\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : values.step == 3\r\n        ? \"approval\"\r\n        : \"\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <LetterContext.Provider value={{ setValues, values, id, letter }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"type\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon icon={faLayerGroup} className=\"text-info\" />\r\n              select type\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"create\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faEdit}\r\n                className={values.step >= 2 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Write aletter\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"approval\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUserCheck}\r\n                className={values.step >= 3 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Select approval stages\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"participant\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className={values.step >= 4 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Add Recievers\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12 my-3\">\r\n          <h4 className=\"text-center\">\r\n            <Progress animated multi>\r\n              <Progress animated bar value={25}>\r\n                select type\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"warning\"\r\n                value={values.step >= 2 ? 25 : 0}\r\n              >\r\n                Write aletter\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"info\"\r\n                value={values.step >= 3 ? 25 : 0}\r\n              >\r\n                Select approval stages\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"success\"\r\n                value={values.step >= 4 ? 25 : 0}\r\n              >\r\n                Add participants\r\n              </Progress>\r\n            </Progress>\r\n          </h4>\r\n        </div>\r\n        {values.tab === \"type\" ? (\r\n          <LetterTypes />\r\n        ) : values.tab === \"create\" ? (\r\n          <WriteLetter />\r\n        ) : values.tab === \"approval\" ? (\r\n          <Approval />\r\n        ) : values.tab === \"participant\" ? (\r\n          <AddParticipants />\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </LetterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditLetter);\r\n","import {\r\n  faChartLine,\r\n  faCheckCircle,\r\n  faEye,\r\n  faUser,\r\n  faUserCheck,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext } from \"react\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\n\r\nconst LetterProgress = ({ l_id: id }) => {\r\n  const { socket, messages, department, employees, users, letters } =\r\n    useContext(StoreContext);\r\n\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n\r\n  const tprogress = message.totallProgress(id);\r\n  const color = message\r\n    .approval_managers(id)\r\n    .find((ap) => ap.status === \"unApproved\")\r\n    ? \"red\"\r\n    : \"info\";\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 my-2\">\r\n          {message.approval_managers(id).length ? (\r\n            <h4 className=\"text-center\">Approval managers</h4>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          {message.approval_managers(id).length ? (\r\n            <MDBTable striped hover>\r\n              <MDBTableHead>\r\n                <tr>\r\n                  <th>#Employee id</th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                    Employee name\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                    Approval stage\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUserCheck} className=\"mx-2\" />\r\n                    Seen\r\n                  </th>\r\n                  <th className=\"text-center\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mx-2\" />\r\n                    Approval status\r\n                  </th>\r\n                </tr>\r\n              </MDBTableHead>\r\n              <MDBTableBody>\r\n                {message.approval_managers(id).map((m) => {\r\n                  return (\r\n                    <tr key={m._id}>\r\n                      <td>{m.emp_id}</td>\r\n                      <td>{message.Name(m.emp_id)}</td>\r\n                      <td>{m.step}</td>\r\n                      <td>{m.seen ? \"Seen\" : \"not Seen\"}</td>\r\n                      <td>\r\n                        {m.status === \"Approved\" ? (\r\n                          <p className=\"text-center text-success\">\r\n                            <FontAwesomeIcon\r\n                              icon={faCheckCircle}\r\n                              className=\"fa-2x mx-2 text-success\"\r\n                            />\r\n                            Approved\r\n                          </p>\r\n                        ) : m.status === \"unApproved\" ? (\r\n                          <p className=\"text-center\">\r\n                            <FontAwesomeIcon\r\n                              icon={faWindowClose}\r\n                              className=\"fa-2x mx-2 text-danger\"\r\n                            />\r\n                            unApproved\r\n                          </p>\r\n                        ) : m.status === \"waiting\" && m.seen ? (\r\n                          <p className=\"text-center\">\r\n                            <FontAwesomeIcon\r\n                              icon={faEye}\r\n                              className=\"fa-2x mx-2 text-info\"\r\n                            />\r\n                            Reviewing\r\n                          </p>\r\n                        ) : m.status === \"waiting\" ? (\r\n                          <p className=\"text-center font-weight-bold\">\r\n                            waiting\r\n                          </p>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </MDBTableBody>\r\n            </MDBTable>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          {message.participants(id).length ? (\r\n            <h4 className=\"text-center\">participants</h4>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          {message.participants(id).length ? (\r\n            <MDBTable striped hover>\r\n              <MDBTableHead>\r\n                <tr>\r\n                  <th className=\"text-center\"># Employee id</th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                    Employee name\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUserCheck} className=\"mx-2\" />\r\n                    Seen\r\n                  </th>\r\n                </tr>\r\n              </MDBTableHead>\r\n              <MDBTableBody>\r\n                {message.participants(id).map((p) => {\r\n                  return (\r\n                    <tr key={p._id}>\r\n                      <td className=\"text-center\">{p.emp_id}</td>\r\n                      <td>{message.Name(p.emp_id)}</td>\r\n                      <td>{p.seen ? \"Seen\" : \"not Seen\"}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </MDBTableBody>\r\n            </MDBTable>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        {message.totallProgress(id) ? (\r\n          <div className=\"col-lg-12\">\r\n            <div\r\n              className={\r\n                \"mb-3 widget-chart widget-chart2 text-left card card-shadow-\" +\r\n                color\r\n              }\r\n            >\r\n              <div className=\"widget-content\">\r\n                <div className=\"widget-content-outer\">\r\n                  <div className=\"widget-content-wrapper\">\r\n                    <div className=\"widget-content-left pr-2 fsize-1\">\r\n                      <div\r\n                        className={\"widget-numbers mt-0 fsize-3 text-\" + color}\r\n                      >\r\n                        {message.totallProgress(id)}%\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"widget-content-right w-100\">\r\n                      <div className=\"progress-bar-xs progress\">\r\n                        <div\r\n                          className={\"progress-bar bg-\" + color}\r\n                          role=\"progressbar\"\r\n                          aria-valuenow={message.totallProgress(id)}\r\n                          aria-valuemin={0}\r\n                          aria-valuemax={100}\r\n                          style={{ width: message.totallProgress(id) + \"%\" }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"widget-content-left fsize-1\">\r\n                    <div className=\"text-muted opacity-6\">\r\n                      Approval Totall progress made\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        {message.unApproved(id).length ? (\r\n          <div className=\"col-lg-12\">\r\n            <h4 className=\"text-center font-weight-bold text-danger\">\r\n              The following managers does not approve this letter because of\r\n            </h4>\r\n            {message.unApproved(id).map((m) => {\r\n              return (\r\n                <p className=\"text-danger font-italic font-weight-bold text-center\">\r\n                  {message.Name(m.emp_id)}-\r\n                  {message.manager_info(id, m.emp_id)\r\n                    ? message.manager_info(id, m.emp_id).comment\r\n                    : \"\"}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterProgress;\r\n","import {\r\n  faCheck,\r\n  faComment,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { getDate } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { saveProcess } from \"../../controllers/saveProcess\";\r\nimport { loadLetters } from \"../../store/Actions/letterActions\";\r\nimport { encryptObject, decrptObject } from \"../auth/encrypt\";\r\nimport { host } from \"../config/config\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport { emitter } from \"../fetchers/Emmitters\";\r\nimport { DotLoading } from \"../layout/Loading\";\r\nimport { userInfo } from \"../users/userInfo\";\r\n\r\nconst TakeActions = ({ l_id: id }) => {\r\n  const [state, setState] = useState({\r\n    approved: \"\",\r\n    unApproved: false,\r\n    comment: \"\",\r\n    check: { Approved: false, unApproved: false },\r\n    ...saveProcess(\"default\"),\r\n  });\r\n  const {\r\n    socket,\r\n    letters,\r\n    employees,\r\n    messages,\r\n    users,\r\n    department\r\n  } = useContext(StoreContext);\r\n  const Mess = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letter = Mess.find_letter(id);\r\n  const emp_id = Mess.getEmp_id();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setState({\r\n        ...state,\r\n        ...saveProcess(\"initial\", \"Taking decision please wait ...\"),\r\n      });\r\n      const date = await getDate();\r\n      const letter = {\r\n        ...Letter,\r\n        approval_manager: [\r\n          ...Mess.approval_managers(id).filter((m) => m.emp_id !== emp_id),\r\n          {\r\n            ...Mess.manager_info(id),\r\n            status: state.approved,\r\n            comment: state.comment,\r\n            approved_date: date,\r\n          },\r\n        ],\r\n      };\r\n      //update the letter\r\n      const req = await axios.put(host + \"/letter\", {\r\n        data: encryptObject({ ...letter, ...userInfo() }),\r\n      });\r\n      const res = decrptObject(req.data);\r\n      if (res.updated) {\r\n        let proceed = Mess.proceedStage(id); //checks wheter to proceed this stage\r\n        if (proceed) {\r\n          //procedd to the next stage\r\n          let nextManager = Mess.nextEmployee(id); //select next manager\r\n          let next = nextManager.length ? true : false; //check approval manager are there\r\n          if (next) {\r\n            let Data = nextManager.map((m) => {\r\n              return {\r\n                message: Letter.title,\r\n                letter_id: id,\r\n                file_name: \"\",\r\n                sender: Letter.creater,\r\n                reciever: m.emp_id,\r\n              };\r\n            }); //send message to the next employee\r\n\r\n            let Req = await axios.post(host + \"/messages\", {\r\n              data: encryptObject({\r\n                messages: [\r\n                  ...Data,\r\n                  {\r\n                    message:\r\n                      state.approved === \"Approved\"\r\n                        ? \"System Notification \" +\r\n                        Mess.Name(emp_id) +\r\n                        \" has approved your letter \" +\r\n                        Letter.id\r\n                        : state.approved === \"unApproved\"\r\n                          ? \"System notification \" +\r\n                          Mess.Name(emp_id) +\r\n                          \" un approved your letter because \" +\r\n                          state.comment\r\n                          : \"\",\r\n                    letter_id: \"\",\r\n                    file_name: \"\",\r\n                    sender: emp_id,\r\n                    reciever: Letter.creater,\r\n                  },\r\n                ],\r\n                ...userInfo(),\r\n              }),\r\n            }); //sending message with system notification\r\n            let Res = decrptObject(Req.data); //decrypting response\r\n            if (Res.created) {\r\n              sendToParticipant();\r\n            } else {\r\n              sendToParticipant();\r\n            }\r\n          } else {\r\n            sendToParticipant();\r\n          }\r\n        } else {\r\n          setState({\r\n            ...state,\r\n            ...saveProcess(\"success\", \"Decison made succesfully\"),\r\n          });\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          ...saveProcess(\r\n            \"error\",\r\n            \"Error made while taking decision making please try again letter\"\r\n          ),\r\n        });\r\n      }\r\n      emitter(socket);\r\n    } catch (err) {\r\n      setState({\r\n        ...state,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"Error made while taking decision making please try again letter\"\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendToParticipant = async () => {\r\n    const Letters = await loadLetters();\r\n    const M = new Message(\r\n      messages.state,\r\n      Letters,\r\n      users.state,\r\n      employees.state,\r\n      department.state\r\n    );\r\n    let progress = M.totallProgress(id) === 100 ? true : false;\r\n    let Participants = M.participants(id).length ? true : false;\r\n    if (progress && Participants) {\r\n      //if no approval manager are found send to participant\r\n      let participant = Mess.participants(id);\r\n      let Part = participant.map((p) => {\r\n        return {\r\n          message: Letter.title,\r\n          letter_id: id,\r\n          sender: Letter.creater,\r\n          reciever: p.emp_id,\r\n        };\r\n      });\r\n      let req = await axios.post(host + \"/messages\", {\r\n        data: encryptObject({\r\n          messages: [\r\n            ...Part,\r\n            {\r\n              message:\r\n                \"System Notification- Letter \" +\r\n                Letter.id +\r\n                \" has completed approval stages and given to all participants\",\r\n              sender: emp_id,\r\n              reciever: Letter.creater,\r\n            },\r\n          ],\r\n          ...userInfo(),\r\n        }),\r\n      });\r\n      let res = decrptObject(req.data);\r\n    }\r\n    setState({\r\n      ...state,\r\n      ...saveProcess(\"success\", \"Decison made succesfully\"),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"container\">\r\n        <div className=\"col-lg-12\">\r\n          {/* Approve */}\r\n          <div className=\"input-container\">\r\n            <FontAwesomeIcon\r\n              icon={faCheck}\r\n              className=\"text-info fa-2x mx-2 my-auto \"\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"approval\"\r\n              value=\"male\"\r\n              checked={state.check.Approved}\r\n              className=\"my-auto mx-3\"\r\n              onChange={(e) =>\r\n                setState((s) => ({\r\n                  ...state,\r\n                  approved: s.approved === \"Approved\" ? \"\" : \"Approved\",\r\n                  check: { Approved: !s.check.Approved, unApproved: false },\r\n                }))\r\n              }\r\n            />\r\n            Approve\r\n          </div>\r\n          {/* UnApprove */}\r\n          <div className=\"input-container\">\r\n            <FontAwesomeIcon\r\n              icon={faWindowClose}\r\n              className=\"text-danger fa-2x mx-2 my-auto \"\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"approval\"\r\n              value=\"male\"\r\n              checked={state.check.unApproved}\r\n              className=\"my-auto mx-3\"\r\n              onChange={(e) =>\r\n                setState((s) => ({\r\n                  ...state,\r\n                  approved: s.approved === \"unApproved\" ? \"\" : \"unApproved\",\r\n                  check: { Approved: false, unApproved: !s.check.unApproved },\r\n                }))\r\n              }\r\n            />\r\n            un Approve\r\n          </div>\r\n          {state.check.unApproved && state.approved === \"unApproved\" ? (\r\n            <p className=\"font-weight-bold text-center\">\r\n              please write a comment why you unApprove this message\r\n            </p>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          {state.check.unApproved && state.approved === \"unApproved\" ? (\r\n            <div className=\"input-container\">\r\n              <FontAwesomeIcon\r\n                icon={faComment}\r\n                className=\"text-warning fa-2x mx-2 my-auto \"\r\n              />\r\n              <textarea\r\n                className=\"input-field form-control my-auto\"\r\n                type=\"text\"\r\n                placeholder=\"write comment\"\r\n                onChange={(e) => {\r\n                  setState({ ...state, comment: e.target.value });\r\n                }}\r\n                required={true}\r\n                cols=\"20\"\r\n                rows=\"5\"\r\n              ></textarea>\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          <div className=\"text-center\">\r\n            <p className=\"text-danger text-center font-weight-bold\">\r\n              {state.error}\r\n            </p>\r\n            <p className=\"text-success text-center font-weight-bold\">\r\n              {state.success}\r\n            </p>\r\n            <p className=\"text-info text-center font-weight-bold\">\r\n              {state.process}\r\n            </p>\r\n            {state.loading ? <DotLoading /> : <p></p>}\r\n          </div>\r\n          {state.check.Approved || state.check.unApproved ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"float-right btn btn-info\"\r\n              disabled={state.disable}\r\n            >\r\n              Done\r\n            </button>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TakeActions;\r\n","import { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { durationDays, ToEthiopianDateSting, TellDay } from \"../../controllers/Date\";\r\n\r\nclass PrintLetter extends Component {\r\n  render() {\r\n    let { company, Mess, Letter, id } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 my-2\">\r\n            <h3 className=\"text-center font-weight-bold\">\r\n              {company.state[0].name}\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-lg-6 my-2\">\r\n            <h6 className=\"text-center font-weight-bold\">\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"To- \" + Mess.Name(Mess.getEmp_id())\r\n                : \"\"}\r\n            </h6>\r\n            <h6 className=\"text-center font-weight-bold\">\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"From - \" + Mess.Name(Letter.creater)\r\n                : \"\"}{\" \"}\r\n              <br />\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"Department- \" + Mess.Department(Letter.creater)\r\n                : \"\"}\r\n            </h6>\r\n          </div>\r\n          <div className=\"col-lg-6 my-2\">\r\n            <h6 className=\"text-center font-italic float-right\">\r\n              Letter id- {Letter.id} <br />\r\n              Date -{Letter ? TellDay(Letter.created_date) : \"\"}\r\n            </h6>\r\n          </div>\r\n          {Letter ? (\r\n            Letter.type === \"allowance\" ? (\r\n              <div className=\"col-lg-6\">\r\n                <p className=\"text-center font-italic\">\r\n                  Project name -{Letter.project_name} <br />\r\n                  program- {Letter.program} <br />\r\n                  objective- {Letter.objective} <br />\r\n                  duration days-{\" \"}\r\n                  {parseInt(\r\n                    durationDays(Letter.initial_date, Letter.return_date)\r\n                  ) + 1}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p></p>\r\n            )\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          {Letter ? (\r\n            Letter.type === \"allowance\" ? (\r\n              <div className=\"col-lg-6\">\r\n                <p className=\"text-center font-italic font-weight-bold\">\r\n                  መነሻ ቀን - {ToEthiopianDateSting(Letter.initial_date)} <br />\r\n                  መመለሻ ቀን-{ToEthiopianDateSting(Letter.return_date)} <br />\r\n                  መነሻ ቦታ- {Letter.initial_place} <br />\r\n                  መድረሻ ቦታ-{Letter.destination_place} <br />\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p></p>\r\n            )\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          <div className=\"col-lg-12 my-2\">\r\n            <h4 className=\"text-center font-weight-bold\">\r\n              ጉዳዩ-{Letter ? Letter.title : \"\"}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-12 my-2\">\r\n            <Editor\r\n              toolbarClassName=\"toolbarClassName\"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              editorClassName=\"editorClassName\"\r\n              readOnly={true}\r\n              toolbarHidden={true}\r\n              editorState={Mess.editorState(id)}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6 y-2\">\r\n            {Mess.isApproval(id) ? (\r\n              Mess.approvedManagers().map((l) => {\r\n                return (\r\n                  <p className=\"text-center font-weight-bold\">\r\n                    <FontAwesomeIcon\r\n                      icon={faCheckCircle}\r\n                      className=\"text-success fa-2x mx-2\"\r\n                    />\r\n                    {Mess.Name(l.emp_id)}\r\n                  </p>\r\n                );\r\n              })\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrintLetter;\r\n","import { faPrint } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport PrintLetter from \"./PrintLetter\";\r\n\r\nconst ViewLetters = ({ l_id: id, setSize }) => {\r\n  const { socket, company, letters, employees, messages, users, department } =\r\n    useContext(StoreContext);\r\n\r\n  const Mess = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letter = Mess.find_letter(id);\r\n  const emp_id = Mess.getEmp_id();\r\n\r\n  useEffect(() => {\r\n    setSize ? setSize(\"xl\") : Donothing();\r\n    Mess.manager_info(id)\r\n      ? socket.emit(\"update_letter\", {\r\n        ...Letter,\r\n        approval_manager: [\r\n          ...Mess.approval_managers(id).filter((m) => m.emp_id !== emp_id),\r\n          { ...Mess.manager_info(id, emp_id), seen: true },\r\n        ],\r\n      })\r\n      : Donothing();\r\n\r\n    Mess.participants(id).find((m) => m.emp_id === emp_id)\r\n      ? !(Mess.participants(id).find((m) => m.emp_id === emp_id)).seen ?\r\n        socket.emit(\"update_letter\", {\r\n          ...Letter,\r\n          participants: [\r\n            ...Mess.participants(id).filter((m) => m.emp_id !== emp_id),\r\n            { ...Mess.particpant_info(id, emp_id), seen: true },\r\n          ],\r\n        })\r\n        : Donothing() : Donothing();\r\n  }, []);\r\n  const componentRef = useRef();\r\n  return (\r\n    <div>\r\n      <ReactToPrint\r\n        trigger={() => (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\"></div>\r\n              <div className=\"col-lg-3\">\r\n                <button className=\"btn btn-outline-info\">\r\n                  <FontAwesomeIcon icon={faPrint} className=\"mx-2\" />\r\n                  Print\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        content={() => componentRef.current}\r\n      />\r\n      <PrintLetter\r\n        ref={componentRef}\r\n        company={company}\r\n        Mess={Mess}\r\n        Letter={Letter}\r\n        id={id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewLetters;\r\n","import { faChartLine, faEnvelope, faEye, faHammer, faPencilAlt, faPlus, faProcedures, faProjectDiagram, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'reactstrap/lib/Modal';\r\nimport ModalBody from 'reactstrap/lib/ModalBody';\r\nimport ModalHeader from 'reactstrap/lib/ModalHeader';\r\nimport { Donothing } from '../../controllers/saveProcess';\r\nimport CreateLetters from '../letters/CreateLetters'\r\nimport DeleteLetter from '../letters/DeleteLetter';\r\nimport EditLetter from '../letters/EditLetter/EditLetter';\r\nimport LetterProgress from '../letters/LetterProgress';\r\nimport TakeActions from '../letters/TakeActions';\r\nimport ViewLetters from '../letters/ViewLetters';\r\n\r\nconst ModalLetter=({className,type,typing,stop_typing,l_id,emitter})=> {\r\n\r\n    \r\n    const [modal, setModal] = useState(false);\r\n    const [size,setSize]=useState('xl')\r\n    const [hover,sethover]=useState(false)\r\n    const toggle = () =>{\r\n        setModal(!modal);\r\n      type==='create_letter'?!modal?typing():stop_typing():Donothing()\r\n      type==='delete_letter'?!modal?Donothing():emitter():Donothing()\r\n    }\r\n    if(type==='create_letter')\r\n    {\r\n    return (\r\n        <div>\r\n        <div className=\"btn\" onClick={toggle}\r\n        onMouseEnter={() => sethover(true)} onMouseLeave={() => sethover(false)} \r\n        >\r\n        <FontAwesomeIcon icon={faEnvelope} className='text-danger fa-2x' />\r\n<p style={{display:hover?'':'none'}} className='font-italic font-weight-bold text-white'>\r\n            Create a letter\r\n        </p>\r\n           </div>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            New Letter\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <CreateLetters setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n} \r\nelse if(type==='Create_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faPlus} className='mx-2'/>\r\n        Create Letter\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n                <CreateLetters setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='view_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faEye} className='mx-2'/>\r\n        View\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='lg'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <ViewLetters l_id={l_id /**letter id */} setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='edit_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faPencilAlt} className='mx-2'/>\r\n        Edit\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <EditLetter l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='delete_letter'){\r\n    return(\r\n        <div>\r\n        <div onClick={toggle} color=\"primary\"\r\n            className=' btn btn-outline-success mx-2 my-2 '\r\n            >\r\n                <FontAwesomeIcon icon={faTrash} className='mx-2 fa-1x' />\r\n   Delete\r\n        </div>\r\n            <Modal isOpen={modal} toggle={toggle}  className={className+' dialogue'}>\r\n                <ModalHeader toggle={toggle}>\r\n     <p className=\"text-danger\">\r\n     <FontAwesomeIcon icon={faTrash} className='mx-2 text-danger' />\r\n     Letter is flagged for deletion are you sure you want to delete    \r\n         </p>               \r\n        </ModalHeader>\r\n                <ModalBody>\r\n  <DeleteLetter _id={l_id} close={toggle}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nelse if(type==='progress')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faChartLine} className='mx-2'/>\r\n        Progress\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='lg'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faChartLine} className='mx-2' />\r\n           Progress\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <LetterProgress l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='approve')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faHammer} className='mx-2'/>\r\n        Take Decision\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='md'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faHammer} className='mx-2' />\r\n           Take Decision\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <TakeActions l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\n}\r\n\r\nexport default ModalLetter\r\n","import {\r\n  faCheck,\r\n  faCheckDouble,\r\n  faCircle,\r\n  faCommentDots,\r\n  faEnvelopeOpen,\r\n  faEye,\r\n  faPaperPlane,\r\n  faPlus,\r\n  faPlusCircle,\r\n  faSearch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { localTime, simpleDate } from \"../../controllers/Date\";\r\n\r\nconst Chat = ({ match }) => {\r\n  const emp_id = match.params.id ? match.params.id : \"\";\r\n  const {\r\n    socket,\r\n    users,\r\n    employees,\r\n    messages,\r\n    letters,\r\n    connections,\r\n    typing,\r\n    Ltyping,\r\n    department,\r\n  } = useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = employees;\r\n  const { loading: userLoading, error: userError } = users;\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    contacted: [],\r\n  });\r\n  const box = useRef(null);\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  ); //importing message class\r\n\r\n  /** */\r\n  useEffect(() => {\r\n    Messages.newMessages(emp_id).map((m) => {\r\n      socket.emit(\"update\", { ...m, seen: true });\r\n    });\r\n    setState((s) => ({ ...s, contacted: Messages.contactedUsers() }));\r\n    Scroller();\r\n    box.current && emp_id ? box.current.focus() : Donothing();\r\n  }, [messages.state, emp_id, box]);\r\n\r\n  /**scroll */\r\n  const Scroller = () => {\r\n    try {\r\n      var scroll = document.getElementById(\r\n        Messages.last_message(emp_id)\r\n          ? Messages.last_message(emp_id)._id\r\n          : \"dsdc\"\r\n      );\r\n      scroll.scrollIntoView({ behavior: \"auto\" });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  /**emiiting message is typing*/\r\n  const typingFocus = () =>\r\n    socket.emit(\"typing\", { emp_id: Messages.getEmp_id() });\r\n  /**creating letter emit message that user is creating letter */\r\n  const typing_letter = () =>\r\n    socket.emit(\"typing_letter\", { emp_id: Messages.getEmp_id() });\r\n\r\n  /**stop typing */\r\n  const stopTyping = () =>\r\n    setTimeout(() => socket.emit(\"typing\", { emp_id: \"\" }), 1200); //for chat\r\n  const stop_typing = () => socket.emit(\"typing_letter\", { emp_id: \"\" }); //for creating letter\r\n\r\n  /**emmitter */\r\n\r\n  /**handling submit */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    state.message !== \"\"\r\n      ? socket.emit(\"submit\", {\r\n        sender: Messages.getEmp_id(),\r\n        reciever: emp_id,\r\n        message: state.message,\r\n      })\r\n      : Donothing();\r\n    setState({ ...state, message: \"\" });\r\n    Scroller();\r\n  };\r\n\r\n  const handleSearch = (index) =>\r\n    setState({ ...state, contacted: Messages.searchContacted(index) });\r\n  const emitter = () => {\r\n    socket.emit(\"chat\", \"\");\r\n    socket.emit(\"letters\", \"\");\r\n    socket.on(\"chat\", (data) => {\r\n      let Mess = new Message(\r\n        data,\r\n        connections.state,\r\n        letters.state,\r\n        users.state,\r\n        employees.state\r\n      );\r\n      setState((s) => ({ ...s, contacted: Mess.contactedUsers() }));\r\n    });\r\n  };\r\n  return empLoading || userLoading ? (\r\n    <DataLoading />\r\n  ) : empError || userError ? (\r\n    <ErrorLoading />\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"messaging mt-2 card bg-dark\">\r\n        <div className=\"inbox_msg \">\r\n          <div className=\"inbox_people\">\r\n            <div className=\"headind_srch\">\r\n              <div className=\"recent_heading\">\r\n                <h4 className=\"font-weight-bold\">Recent Messages</h4>\r\n              </div>\r\n              <div className=\"srch_bar\">\r\n                <div className=\"stylish-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"search-bar\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                  />\r\n                  <span className=\"input-group-addon\">\r\n                    <button type=\"button\">\r\n                      <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"inbox_chat\">\r\n              {state.contacted.length ? (\r\n                state.contacted.map((m) => {\r\n                  return (\r\n                    <Link to={\"/message/\" + m} key={m}>\r\n                      <div className=\"chat_list active_chat\" key={m}>\r\n                        <div className=\"chat_people\">\r\n                          <div className=\"chat_img\">\r\n                            <p data-letters={Messages.firstLetters(m)}></p>\r\n                            {Messages.isOnline(m) ? (\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"text-success\"\r\n                              />\r\n                            ) : (\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"text-secondary\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"chat_ib\">\r\n                            <h5>\r\n                              {Messages.messageName(m)}{\" \"}\r\n                              <span className=\"chat_date\">\r\n                                {simpleDate(\r\n                                  Messages.last_message(m).created_date\r\n                                )}\r\n                              </span>\r\n                            </h5>\r\n                            <p>\r\n                              {Messages.last_message(m).message.length > 100\r\n                                ? Messages.last_message(m).message.slice(\r\n                                  0,\r\n                                  120\r\n                                ) + \"  ...\"\r\n                                : Messages.last_message(m).message}\r\n                            </p>\r\n                          </div>\r\n                          {Messages.newMessages(m).length ? (\r\n                            <div className=\"float-right rounded-circle\">\r\n                              <h4 className=\"text-small\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faPlusCircle}\r\n                                  className=\"text-info fa-1x\"\r\n                                />\r\n                                {Messages.newMessages(m).length}\r\n                              </h4>\r\n                            </div>\r\n                          ) : (\r\n                            <p></p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {!emp_id ? (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  <h2 className=\"text-white font-weight-bold text-center\">\r\n                    Please Select chat... <br />\r\n                    <FontAwesomeIcon\r\n                      icon={faEnvelopeOpen}\r\n                      className=\"text-white fa-3x\"\r\n                    />\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"row bg-light\">\r\n                    <div className=\"col-lg-2 float-right mt-2\">\r\n                      <p\r\n                        data-letters={Messages.firstLetters(emp_id)}\r\n                        className=\"ml-5\"\r\n                      >\r\n                        {\" \"}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"col-lg-6 mt-2 my-auto float-left\">\r\n                      <h4 className=\"\">{Messages.messageName(emp_id)}</h4>\r\n                      {Messages.isOnline(emp_id) ? (\r\n                        <p className=\"float-left\">\r\n                          <FontAwesomeIcon\r\n                            icon={faCircle}\r\n                            className=\"text-success ml-5\"\r\n                          />\r\n                          online\r\n                        </p>\r\n                      ) : Messages.lastSeen(emp_id) ? (\r\n                        <p className=\"float-left\">\r\n                          last seen at{\" \"}\r\n                          <ReactTimeAgo date={Messages.lastSeen(emp_id)} />{\" \"}\r\n                          {localTime(Messages.lastSeen(emp_id))}\r\n                        </p>\r\n                      ) : (\r\n                        <p></p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-4 float-right font-italic mt-2\">\r\n                      Department- {Messages.Department(emp_id)} <br />\r\n                      position-{Messages.UserRole(emp_id)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {!emp_id ? (\r\n            <p></p>\r\n          ) : (\r\n            <div className=\"mesgs\">\r\n              <div className=\"msg_history\">\r\n                {Messages.chatRoom(emp_id).reverse().length ? (\r\n                  Messages.chatRoom(emp_id)\r\n                    .reverse()\r\n                    .map((m) => {\r\n                      return m.sender === Messages.getEmp_id() ? (\r\n                        <div className=\"outgoing_msg\" key={m._id} id={m._id}>\r\n                          <div className=\"sent_msg\">\r\n                            {m.letter_id ? (\r\n                              <div className=\"card\" style={{ minHeight: 200 }}>\r\n                                <div className=\"card-header text-center font-weight-bold\">\r\n                                  {Messages.title(m.letter_id)}\r\n                                </div>\r\n                                <div className=\"card-body font-italic\">\r\n                                  {Messages.description_text(m.letter_id)\r\n                                    .length > 100\r\n                                    ? Messages.description_text(\r\n                                      m.letter_id\r\n                                    ).slice(0, 120) + \" ...\"\r\n                                    : Messages.description_text(m.letter_id)}\r\n                                  { } {/*letter class*/}\r\n                                </div>\r\n                                <div className=\"card-footer text-muted\">\r\n                                  <ModalLetter\r\n                                    type=\"view_letter\"\r\n                                    l_id={m.letter_id}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <p>{m.message}</p>\r\n                            )}\r\n                            <span className=\"time_date\">\r\n                              {localTime(m.created_date)} |{\" \"}\r\n                              {simpleDate(m.created_date)} |\r\n                              {m.seen ? \" seen\" : \" Delivered\"}\r\n                              {m.seen ? (\r\n                                <FontAwesomeIcon\r\n                                  icon={faCheckDouble}\r\n                                  className=\"text-info mx-2\"\r\n                                />\r\n                              ) : (\r\n                                <FontAwesomeIcon\r\n                                  icon={faCheck}\r\n                                  className=\"text-info mx-2\"\r\n                                />\r\n                              )}\r\n                            </span>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      ) : m.reciever === Messages.getEmp_id() ? (\r\n                        <div className=\"incoming_msg\" key={m._id} id={m._id}>\r\n                          <div className=\"incoming_msg_img\">\r\n                            <p\r\n                              data-letters={\r\n                                m.sender !== Messages.getEmp_id()\r\n                                  ? Messages.firstLetters(m.sender)\r\n                                  : m.reciever !== Messages.getEmp_id()\r\n                                    ? Messages.firstLetters(m.reciever)\r\n                                    : \"\"\r\n                              }\r\n                            ></p>\r\n                          </div>\r\n                          <div className=\"received_msg\">\r\n                            <div className=\"received_withd_msg\">\r\n                              {m.letter_id ? (\r\n                                <div\r\n                                  className=\"card\"\r\n                                  style={{ minHeight: 200 }}\r\n                                >\r\n                                  <div className=\"card-header text-center font-weight-bold\">\r\n                                    {Messages.title(m.letter_id)}\r\n                                  </div>\r\n                                  <div className=\"card-body font-italic\">\r\n                                    {Messages.description_text(m.letter_id)\r\n                                      .length > 100\r\n                                      ? Messages.description_text(\r\n                                        m.letter_id\r\n                                      ).slice(0, 100) + \" ...\"\r\n                                      : Messages.description_text(m.letter_id)}\r\n                                    { } {/*letter class*/}\r\n                                  </div>\r\n                                  <div className=\"card-footer text-muted\">\r\n                                    <ModalLetter\r\n                                      type=\"view_letter\"\r\n                                      l_id={m.letter_id}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                <p>{m.message}</p>\r\n                              )}\r\n                              <span className=\"time_date\">\r\n                                {\" \"}\r\n                                {localTime(m.created_date)} |\r\n                                {simpleDate(m.created_date)}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <p key={m._id}></p>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <h4 className=\"text-center text-white  mt-2 font-itlaic font-weight-bold \">\r\n                    <FontAwesomeIcon\r\n                      icon={faCommentDots}\r\n                      className=\"text-white fa-2x mx-2\"\r\n                    />\r\n                    No messages yet...\r\n                  </h4>\r\n                )}\r\n              </div>\r\n              <div className=\"incoming_msg mb-2\" id=\"type\">\r\n                <div className=\"incoming_msg_img\"></div>\r\n                {typing === emp_id ? (\r\n                  <div className=\"received_msg bg-light\">\r\n                    <div className=\"received_withd_msg\">\r\n                      <p>{Messages.messageName(emp_id) + \" \"} is typing ...</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <p></p>\r\n                )}\r\n                {Ltyping === emp_id ? (\r\n                  <div className=\"received_msg bg-light\">\r\n                    <div className=\"received_withd_msg\">\r\n                      <p>\r\n                        {Messages.messageName(emp_id) + \" \"} is creating letter\r\n                        ...\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <p></p>\r\n                )}\r\n              </div>\r\n              <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"input-container\">\r\n                  <input\r\n                    className=\"input-field form-control my-auto\"\r\n                    id=\"message\"\r\n                    type=\"text\"\r\n                    placeholder=\"type message\"\r\n                    autoComplete=\"off\"\r\n                    onKeyUp={() => stopTyping()}\r\n                    onChange={(e) => {\r\n                      setState({ ...state, message: e.target.value });\r\n                      typingFocus();\r\n                    }}\r\n                    ref={box}\r\n                    value={state.message}\r\n                  />\r\n\r\n                  <ModalLetter\r\n                    type=\"create_letter\"\r\n                    typing={typing_letter}\r\n                    stop_typing={stop_typing}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Chat);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport {\r\n  faEnvelopeOpen,\r\n  faComment,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n  faBell,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Chat from \"../letters/Chat\";\r\nimport { Message } from \"../../controllers/Message\";\r\n\r\nconst Letter = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/* title*/}\r\n\r\n              {/**chat */}\r\n              <Chat />\r\n              {/** */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Letter;\r\n","export const letterState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const lettersReducer =(state=letterState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_LETTERS':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_LETTERS':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const allowanceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const allowanceReducer =(state=allowanceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_ALLOWANCES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_ALLOWANCES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const climatePlaceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const climatePlacesReducer =(state=climatePlaceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_PLACES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_PLACES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const deductionState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const deductionReducer =(state=deductionState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_DEDUCTIONS':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_DEDUCTIONS':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","import {\r\n  faCircle,\r\n  faComment,\r\n  faObjectGroup,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { removeDuplicates } from \"../../controllers/removeRedudant\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { Notification, StoreContext } from \"../contexts/contexts\";\r\n\r\nconst Contacts = () => {\r\n  const [state, setState] = useState({\r\n    employees: [], // connected or discconnected users\r\n  });\r\n  const { users, employees, messages, department, letters } =\r\n    useContext(StoreContext);\r\n\r\n  const { state: Users, loading: userLoading, error: userError } = users;\r\n  const { state: Employees, loading: empLoading, error: empError } = employees;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    Users,\r\n    Employees,\r\n    department.state\r\n  );\r\n\r\n  const emp = Messages.UnFilter(Messages.getEmp_id());\r\n  useEffect(() => {\r\n    setState((s) => ({ employees: emp }));\r\n  }, [userLoading, empLoading]);\r\n  /**search name elements with search index provide */\r\n  const handleSearch = (index) =>\r\n    setState((s) => ({\r\n      employees: index ? Messages.searchEmployee(index, emp) : emp,\r\n    }));\r\n  /***online users */\r\n\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\"></div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"search-wrapper active\">\r\n              <div className=\"input-holder\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"type name,department,id\"\r\n                  onChange={(e) => handleSearch(e.target.value)}\r\n                />\r\n                <button className=\"search-icon\">\r\n                  <span></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-card mb-3 min-height card\">\r\n        {Employees.length ? (\r\n          state.employees.length ? (\r\n            <div className=\"col-lg-12\">\r\n              <h4 className=\"contact-header text-center\">Employees</h4>\r\n              <MDBTable bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th className=\"text-center\"># employee id</th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                      name\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faObjectGroup}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                      Department\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faComment}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                    </th>\r\n                    <th className=\"text-center\">status</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {state.employees.map((f) => {\r\n                    return (\r\n                      <tr key={f._id}>\r\n                        <td className=\"text-center\">{f.emp_id}</td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.Name(f.emp_id)}\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.dpName(f.department)}\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          <Link to={\"message/\" + f.emp_id}>\r\n                            {Messages.isOnline(f.emp_id) ? (\r\n                              <button className=\"btn btn-success\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faComment}\r\n                                  className=\"fa-1x mx-2\"\r\n                                />\r\n                                contact\r\n                              </button>\r\n                            ) : (\r\n                              <button className=\"btn\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faComment}\r\n                                  className=\"fa-1x mx-2\"\r\n                                />\r\n                                contact\r\n                              </button>\r\n                            )}\r\n                          </Link>\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.isOnline(f.emp_id) ? (\r\n                            <p>\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"fa-1x text-success mx-2\"\r\n                              />\r\n                              online\r\n                            </p>\r\n                          ) : (\r\n                            <p>\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"fa-1x mx-2\"\r\n                              />\r\n                              offline\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )\r\n        ) : (\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <h2 className=\"text-center\">No Employees registered</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport {\r\n  faEnvelopeOpen,\r\n  faComment,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n  faBell,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Contacts from \"../letters/Contacts\";\r\nimport { Message } from \"../../controllers/Message\";\r\n\r\nconst ContactEmployee = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { employees } = useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = employees;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigations */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/contact\">\r\n                        <FontAwesomeIcon\r\n                          icon={faUser}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Employees to contact\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {empLoading ? (\r\n                <DataLoading />\r\n              ) : empError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <Contacts />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactEmployee;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport Chat from \"../letters/Chat\";\r\n\r\nfunction ChatRoom() {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, users, employees, messages, department } =\r\n    useContext(StoreContext);\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  ); //importing message class\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n\r\n              {/** */}\r\n              <Chat />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n","export const messageState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const messageReducer = (state = messageState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MESSAGES':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_MESSAGES':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","export const connState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const connReducer = (state = connState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CONNECTIONS':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_CONNECTIONS':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","import {\r\n  faCalendar,\r\n  faChartLine,\r\n  faCog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Progress from \"reactstrap/lib/Progress\";\r\nimport { localTime, TellDay } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\n\r\nconst OutboxLetters = () => {\r\n  const [state, setState] = useState({\r\n    Letters: [],\r\n    found: false,\r\n  });\r\n\r\n  const { employees, users, messages, letters, socket, department } =\r\n    useContext(StoreContext);\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  useEffect(() => {\r\n    setState({ ...state, Letters: message.outBox() });\r\n  }, [letters]);\r\n\r\n  const Letters = message.outBox();\r\n  const handleSearch = (index) =>\r\n    setState({\r\n      ...state,\r\n      Letters: index === \"\" ? Letters : message.searchLetters(index),\r\n      found: index === \"\" ? false : true,\r\n    });\r\n  const emitter = () => {\r\n    socket.emit(\"chat\", \"\");\r\n    socket.emit(\"letters\", \"\");\r\n    socket.on(\"chat\", (data) => {\r\n      let Mess = new Message(\r\n        data,\r\n        letters.state,\r\n        users.state,\r\n        employees.state,\r\n        department.state\r\n      );\r\n      setState((s) => ({ ...s, Letters: Mess.outBox() }));\r\n    });\r\n  };\r\n\r\n  const typing_letter = () =>\r\n    socket.emit(\"typing_letter\", { emp_id: messages.getEmp_id() });\r\n  const stop_typing = () => socket.emit(\"typing_letter\", { emp_id: \"\" }); //for creating letter\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 my-auto\">\r\n          <ModalLetter\r\n            type=\"Create_letter\"\r\n            typing={typing_letter}\r\n            stop_typing={stop_typing}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-5 my-auto\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Type letter id,title and type\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 my-auto\">\r\n          <div className=\"card mb-3 widget-content bg-grow-early\">\r\n            <div className=\"widget-content-wrapper text-white\">\r\n              <div className=\"widget-content-left\">\r\n                <div className=\"widget-heading\">Letters</div>\r\n                <div className=\"widget-subheading\">Totall Made</div>\r\n              </div>\r\n              <div className=\"widget-content-right\">\r\n                <div className=\"widget-numbers text-white\">\r\n                  <span>{Letters.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/** */}\r\n        <div className=\"container mt-3 main-card mb-3 card min-height\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              {state.found ? (\r\n                <h5 className=\"text-center\">\r\n                  Letters found -{state.Letters.length}\r\n                </h5>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n              <MDBTable hover bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th># Letter id</th>\r\n                    <th>Title</th>\r\n\r\n                    <th>Type</th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCalendar} className=\"mx-2\" />\r\n                      created\r\n                    </th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                      Progress\r\n                    </th>\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCog} className=\"mx-2\" />\r\n                      Options\r\n                    </th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {state.Letters.length ? (\r\n                    state.Letters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center\">{l.id}</td>\r\n                          <td className=\"text-center\">{l.title}</td>\r\n                          <td className=\"text-center\">{l.type}</td>\r\n                          <td className=\"text-center\">\r\n                            <p className=\"font-italic\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          {message.approval_managers(l._id).length ? (\r\n                            <td>\r\n                              {message.totallProgress(l._id) === 100 ? (\r\n                                <p className=\"font-weight-bold text-center text-success font-italic\">\r\n                                  Approval stage is completed\r\n                                </p>\r\n                              ) : (\r\n                                <div className=\"\">\r\n                                  <Progress\r\n                                    color=\"info\"\r\n                                    value={message.totallProgress(l._id)}\r\n                                  />\r\n                                  {\"\" + message.totallProgress(l._id) + \"%\"}\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          ) : (\r\n                            <td>\r\n                              <p className=\"font-italic text-danger\">\r\n                                The letter has no approval stage\r\n                              </p>\r\n                            </td>\r\n                          )}\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n                            <ModalLetter type=\"progress\" l_id={l._id} />\r\n                            {message.isModifiable(l._id) ? (\r\n                              <ModalLetter type=\"edit_letter\" l_id={l._id} />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.isModifiable(l._id) ? (\r\n                              <ModalLetter\r\n                                type=\"delete_letter\"\r\n                                l_id={l._id}\r\n                                emitter={emitter}\r\n                              />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6}>\r\n                        <p className=\"text-center font-weight-bold text-danger\">\r\n                          No letters are created\r\n                        </p>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboxLetters;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport OutboxLetters from \"../letters/OutboxLetters\";\r\n\r\nconst OutBoxLetters = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, employees, messages, users, department } =\r\n    useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = letters;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    department.state\r\n  ); //importing message class\r\n  const notify = !messages.loading ? Messages.newInboxLetters().length : 0;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/inbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpen}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Inbox letters\r\n                        {notify ? (\r\n                          <h4 className=\"mx-1 text-info font-weight-bold\">\r\n                            <FontAwesomeIcon\r\n                              icon={faBell}\r\n                              className=\"text-info mx-1\"\r\n                            />\r\n                            {notify}\r\n                          </h4>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/outbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpenText}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        outbox letters\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/** */}\r\n              {empLoading ? (\r\n                <DataLoading />\r\n              ) : empError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <OutboxLetters />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutBoxLetters;\r\n","import {\r\n  faCalendar,\r\n  faChartLine,\r\n  faCheck,\r\n  faCog,\r\n  faEdit,\r\n  faUserAlt,\r\n  faUserAltSlash,\r\n  faUserCheck,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { localTime, TellDay } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\n\r\nconst InboxLetters = () => {\r\n  const [state, setState] = useState({\r\n    newLetters: [],\r\n    seenLetters: [],\r\n    found: false,\r\n  });\r\n  const { socket, messages, letters, users, employees, department } =\r\n    useContext(StoreContext);\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letters = message.InboxLetters();\r\n\r\n  useEffect(() => {\r\n    setState((s) => ({\r\n      ...s,\r\n      newLetters: message.newInboxLetters(),\r\n      seenLetters: message.seenInboxLetters(),\r\n    }));\r\n  }, [messages.state, letters.state]);\r\n\r\n  const handleSearch = (index) =>\r\n    setState({\r\n      ...state,\r\n      newLetters:\r\n        index === \"\"\r\n          ? message.newInboxLetters()\r\n          : message.SearchLetters(index).newLetters,\r\n      seenLetters:\r\n        index === \"\"\r\n          ? message.seenInboxLetters()\r\n          : message.SearchLetters(index).seenLetters,\r\n      found: index === \"\" ? false : true,\r\n    });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 my-auto\"></div>\r\n        <div className=\"col-lg-5 my-auto\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Type letter id,title and type\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 my-auto\">\r\n          <div className=\"card mb-3 widget-content bg-grow-early\">\r\n            <div className=\"widget-content-wrapper text-white\">\r\n              <div className=\"widget-content-left\">\r\n                <div className=\"widget-heading\">Letters</div>\r\n                <div className=\"widget-subheading\">Totall Recieved</div>\r\n              </div>\r\n              <div className=\"widget-content-right\">\r\n                <div className=\"widget-numbers text-white\">\r\n                  <span>{Letters.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/** */}\r\n        <div className=\"container mt-3 main-card mb-3 card min-height\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              {state.found ? (\r\n                <h5 className=\"text-center\">\r\n                  Letters found -\r\n                  {state.newLetters.length + state.seenLetters.length}\r\n                </h5>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n              <MDBTable hover bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th># Letter id</th>\r\n                    <th>Title</th>\r\n\r\n                    <th>Type</th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCalendar} className=\"mx-2\" />\r\n                      created\r\n                    </th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                      Decision made/Recieved\r\n                    </th>\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCog} className=\"mx-2\" />\r\n                      Options\r\n                    </th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {Letters.length ? (\r\n                    state.newLetters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center text-info\">{l.id}</td>\r\n                          <td className=\"text-center text-info\">{l.title}</td>\r\n                          <td className=\"text-center text-info\">{l.type}</td>\r\n                          <td className=\"text-center text-info\">\r\n                            <p className=\"font-italic text-info\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            {message.manager_info(l._id) ? (\r\n                              message.manager_info(l._id).status ===\r\n                              \"Approved\" ? (\r\n                                <p className=\"text-center text-success font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"unApproved\" ? (\r\n                                <p className=\"text-center text-danger font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faWindowClose}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  DisApproved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}{\" \"}\r\n                                  <br />\r\n                                  comment-\r\n                                  {message.manager_info(l._id)\r\n                                    ? message.manager_info(l._id).comment\r\n                                    : \"\"}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"waiting\" ? (\r\n                                <p className=\"text-center font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approval letter waiting for your decision\r\n                                </p>\r\n                              ) : (\r\n                                <p></p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.particpant_info(l._id) ? (\r\n                              message.particpant_info(l._id).seen ? (\r\n                                <p className=\"text-center font-italic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserCheck}\r\n                                    className=\"mx-2 fa-2x text-success\"\r\n                                  />\r\n                                  letter seen\r\n                                </p>\r\n                              ) : (\r\n                                <p className=\"text-center font-italic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserAlt}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  waiting to review\r\n                                </p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr></tr>\r\n                  )}\r\n                  {Letters.length ? (\r\n                    state.seenLetters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center\">{l.id}</td>\r\n                          <td className=\"text-center\">{l.title}</td>\r\n                          <td className=\"text-center\">{l.type}</td>\r\n                          <td className=\"text-center\">\r\n                            <p className=\"font-italic\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            {message.manager_info(l._id) ? (\r\n                              message.manager_info(l._id).status ===\r\n                              \"Approved\" ? (\r\n                                <p className=\"text-center text-success font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"unApproved\" ? (\r\n                                <p className=\"text-center text-danger font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faWindowClose}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  DisApproved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}{\" \"}\r\n                                  <br />\r\n                                  comment-\r\n                                  {message.manager_info(l._id)\r\n                                    ? message.manager_info(l._id).comment\r\n                                    : \"\"}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"waiting\" ? (\r\n                                <p className=\"text-center font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approval letter waiting for your decision\r\n                                </p>\r\n                              ) : (\r\n                                <p></p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.particpant_info(l._id) ? (\r\n                              message.particpant_info(l._id).seen ? (\r\n                                <p className=\"text-center font-italic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserCheck}\r\n                                    className=\"mx-2 fa-2x text-success\"\r\n                                  />\r\n                                  letter seen\r\n                                </p>\r\n                              ) : (\r\n                                <p className=\"text-center font-italic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserAltSlash}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  waiting to review\r\n                                </p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n\r\n                            {message.isApprovable(l._id) ? (\r\n                              <ModalLetter type=\"approve\" l_id={l._id} />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6}>\r\n                        <p className=\"text-center text-danger font-weight-bold my-2\">\r\n                          No Letters ar recieved\r\n                        </p>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboxLetters;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport InboxLetters from \"../letters/InboxLetters\";\r\n\r\nconst InBoxLetters = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, employees, messages, users, connections } = useContext(\r\n    StoreContext\r\n  );\r\n  const { loading: letterLoading, error: letterError } = letters;\r\n  const { loading: messageLoading, error: messageError } = messages;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    connections.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state\r\n  ); //importing message class\r\n  const notify = !messages.loading ? Messages.newInboxLetters().length : 0;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/inbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpen}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Inbox letters\r\n                        {notify ? (\r\n                          <h4 className=\"mx-1 text-info font-weight-bold\">\r\n                            <FontAwesomeIcon\r\n                              icon={faBell}\r\n                              className=\"text-info mx-1\"\r\n                            />\r\n                            {notify}\r\n                          </h4>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/outbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpenText}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        outbox letters\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/** */}\r\n              {messageLoading || letterLoading ? (\r\n                <DataLoading />\r\n              ) : letterError || messageError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <InboxLetters />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InBoxLetters;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport \"./css/Main.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { StoreContext } from \"./components/contexts/contexts\";\r\nimport { empState, employeeReducer } from \"./store/Reducers/employeeReducers\";\r\nimport {\r\n  departmentReducer,\r\n  depState,\r\n} from \"./store/Reducers/departmentReducer\";\r\nimport { placeState, placeReducer } from \"./store/Reducers/placReducers\";\r\nimport { UserReducer, UserState } from \"./store/Reducers/usersReducer\";\r\nimport {\r\n  fieldAllowanceReducer,\r\n  fieldAllowanceState,\r\n} from \"./store/Reducers/FieldAllowance\";\r\nimport ScripTag from \"react-script-tag\";\r\nimport { configReducer, configState } from \"./store/Reducers/configReducer\";\r\nimport { CompanyReducer, companyState } from \"./store/Reducers/companyReducer\";\r\nimport Home from \"./components/routes/Home\";\r\nimport Letter from \"./components/routes/Letter\";\r\nimport { lettersReducer, letterState } from \"./store/Reducers/lettersReducer\";\r\nimport {\r\n  allowanceReducer,\r\n  allowanceState,\r\n} from \"./store/Reducers/allowanceReducer\";\r\nimport {\r\n  climatePlacesReducer,\r\n  climatePlaceState,\r\n} from \"./store/Reducers/climatePlacesReducer\";\r\nimport {\r\n  deductionReducer,\r\n  deductionState,\r\n} from \"./store/Reducers/deductionReducer\";\r\nimport ContactEmployee from \"./components/routes/ContactEmployee\";\r\nimport ChatRoom from \"./components/routes/ChatRoom\";\r\nimport { messageReducer, messageState } from \"./store/Reducers/MessageReducer\";\r\nimport { connReducer, connState } from \"./store/Reducers/connectionReducer\";\r\nimport OutBoxLetters from \"./components/routes/OutBoxLetters\";\r\nimport InBoxLetters from \"./components/routes/InBoxLetters\";\r\n\r\nconst App = () => {\r\n  const [typing, setTyping] = useState(\"\"); //chat typing\r\n  const [Ltyping, setLTyping] = useState(\"\"); //letter creating typing\r\n  const [socket, setSocket] = useState(\"\");\r\n  const [employees, dispatchEmployees] = useReducer(employeeReducer, empState);\r\n  const [department, dispatchDepartment] = useReducer(\r\n    departmentReducer,\r\n    depState\r\n  );\r\n  const [place, dispatchPlaces] = useReducer(placeReducer, placeState);\r\n  const [users, dispatchUsers] = useReducer(UserReducer, UserState);\r\n  const [fieldEmployees, dispatchFieldEmplooyees] = useReducer(\r\n    fieldAllowanceReducer,\r\n    fieldAllowanceState\r\n  );\r\n  const [config, dispatchConfig] = useReducer(configReducer, configState);\r\n  const [company, dispatchCompany] = useReducer(CompanyReducer, companyState);\r\n  const [letters, dispatchLetters] = useReducer(lettersReducer, letterState);\r\n  const [allowances, dispatchAllowances] = useReducer(\r\n    allowanceReducer,\r\n    allowanceState\r\n  );\r\n  const [climatePlaces, dispatchClimatePlaces] = useReducer(\r\n    climatePlacesReducer,\r\n    climatePlaceState\r\n  );\r\n  const [deductions, dispatchDeductions] = useReducer(\r\n    deductionReducer,\r\n    deductionState\r\n  );\r\n  const [messages, dispatchMessages] = useReducer(messageReducer, messageState);\r\n  const [connections, dispatchConnections] = useReducer(connReducer, connState);\r\n  return (\r\n    <StoreContext.Provider\r\n      value={{\r\n        socket,\r\n        setSocket,\r\n        messages,\r\n        dispatchMessages,\r\n        typing,\r\n        setTyping,\r\n        Ltyping,\r\n        setLTyping, //user interaction when typing\r\n        connections,\r\n        dispatchConnections,\r\n        allowances,\r\n        dispatchAllowances,\r\n        employees,\r\n        dispatchEmployees,\r\n        department,\r\n        dispatchDepartment,\r\n        place,\r\n        dispatchPlaces,\r\n        users,\r\n        dispatchUsers,\r\n        fieldEmployees,\r\n        dispatchFieldEmplooyees,\r\n        config,\r\n        dispatchConfig,\r\n        company,\r\n        dispatchCompany,\r\n        letters,\r\n        dispatchLetters,\r\n        climatePlaces,\r\n        dispatchClimatePlaces,\r\n        deductions,\r\n        dispatchDeductions,\r\n      }}\r\n    >\r\n      <ScripTag\r\n        isHydrating={true}\r\n        type=\"text/javascript\"\r\n        src=\"./css/assets/scripts/main.js\"\r\n      />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/message/:id\">\r\n            <ChatRoom />\r\n          </Route>\r\n          <Route path=\"/message\">\r\n            <Letter />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <ContactEmployee />\r\n          </Route>\r\n          <Route path=\"/outbox\">\r\n            <OutBoxLetters />\r\n          </Route>\r\n          <Route path=\"/inbox\">\r\n            <InBoxLetters />\r\n          </Route>\r\n          {/* <Route path=\"/reports\">\r\n            <Reports />\r\n          </Route> */}\r\n\r\n          {/**system configuration route */}\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport JavascriptTimeAgo from 'javascript-time-ago'\r\n \r\nimport en from 'javascript-time-ago/locale/en'\r\nimport ru from 'javascript-time-ago/locale/ru'\r\n \r\n\r\nJavascriptTimeAgo.addLocale(en)\r\nJavascriptTimeAgo.addLocale(ru)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}