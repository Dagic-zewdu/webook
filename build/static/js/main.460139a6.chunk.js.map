{"version":3,"sources":["components/auth/encrypt.js","components/config/config.js","components/auth/tokenEncryption.js","components/contexts/contexts.js","store/Reducers/employeeReducers.js","store/Reducers/departmentReducer.js","store/Reducers/placReducers.js","store/Reducers/usersReducer.js","store/Reducers/FieldAllowance.js","store/Reducers/configReducer.js","store/Reducers/companyReducer.js","controllers/removeRedudant.js","controllers/Employees.js","controllers/Department.js","controllers/Users.js","components/layout/Navbar/Navbar.js","components/users/Logout.js","components/users/userInfo.js","store/Actions/employeeAction.js","components/fetchers/employeeFetchers.js","store/Actions/userActions.js","store/Actions/companyActions.js","components/fetchers/CompanyFetcher.js","controllers/saveProcess.js","socket.js","store/Actions/letterActions.js","components/fetchers/MessageFetchers.js","store/Actions/messageActions.js","store/Actions/departmentActions.js","components/fetchers/departmentFetch.js","components/layout/SideNav/SideNav.js","components/layout/Loading.js","components/routes/Home.js","controllers/Date.js","controllers/Letters.js","controllers/Message.js","components/layout/DataLoading.js","components/layout/ErrorLoading.js","components/letters/LetterTypes.js","components/letters/WriteLetter.js","components/letters/Approval.js","components/fetchers/Emmitters.js","components/letters/AddParticipants.js","components/letters/CreateLetters.js","components/letters/DeleteLetter.js","components/letters/EditLetter/EditLetter.js","components/letters/LetterProgress.js","components/letters/TakeActions.js","components/letters/PrintLetter.js","components/letters/ViewLetters.js","components/layout/ModalLetter.js","components/letters/Chat.js","components/routes/Letter.js","store/Reducers/lettersReducer.js","store/Reducers/allowanceReducer.js","store/Reducers/climatePlacesReducer.js","store/Reducers/deductionReducer.js","components/letters/Contacts.js","components/routes/ContactEmployee.js","components/routes/ChatRoom.js","store/Reducers/MessageReducer.js","store/Reducers/connectionReducer.js","components/letters/OutboxLetters.js","components/routes/OutBoxLetters.js","components/letters/InboxLetters.js","components/routes/InBoxLetters.js","App.js","serviceWorker.js","index.js"],"names":["password","require","CryptoJS","module","exports","encryptObject","object","AES","encrypt","JSON","stringify","toString","decrptObject","bytes","decrypt","parse","enc","Utf8","server","host","files_url","encryptToken","decryptToken","LayoutContext","React","createContext","StoreContext","LetterContext","empState","state","loading","error","employeeReducer","action","type","payload","depState","departmentReducer","placeState","placeReducer","UserState","UserReducer","fieldAllowanceState","fieldAllowanceReducer","configState","configReducer","companyState","CompanyReducer","removeDuplicates","originalArray","prop","newArray","lookupObject","i","push","EmployeeClass","employees","department","Filter","id","filter","e","emp_id","UnFilter","Find","find","getUserInfo","_id","Name","first_name","middle_name","last_name","Emp_id","Department","dpName","UserRole","findUser","length","Salary","salary","position","isOfficial","messageName","split","firstLetters","slice","toUpperCase","searchEmployee","Index","Employees","index","toLowerCase","includes","name","n","d","this","UsersClass","users","getId","Id","localStorage","user","u","User","employee","getEmp_id","canApprove","employeeSearch","ContactSearch","directors","f_director","team_leaders","sector_leaders","f_sector_leader","commisioner","withRouter","props","useState","search","toggleButton","title","screen","acivateProfile","profileOpener","setState","setToggler","useContext","togglers","uiContents","collapse","headertheme","user_type","token","socket","allowance","useEffect","history","width","window","toggler","className","icon","faBook","data-classname","onClick","op","po","openProfile","to","faPhone","data-toggle","aria-haspopup","aria-expanded","tabIndex","role","aria-hidden","removeItem","emit","Logout","data-letters","userInfo","Token","fetchEmployees","a","async","axios","get","headers","data","addEmployees","EmployeeFetcher","dispatchEmployees","console","log","getEmployees","addUsers","Users","fetchCompany","Company","company","CompanyFetcher","dispatchCompany","getCompany","saveProcess","message","success","process","disable","Donothing","Round","num","Math","round","webSocket","socketIOClient","reconnection","loadLetters","Axios","L","l","MessageFetchers","dispatchMessages","dispatchUsers","dispatchLetters","setTyping","setLTyping","setSocket","empLoading","on","err","fetchDepartment","DepartmentFetch","dispatchDepartment","departments","getDepartment","SideNav","sidetheme","faPaperclip","faUsers","DotLoading","Home","COMPANY","Provider","value","getDate","Time","DATE","Date","date","toISOString","durationDays","initial_date","destination_date","i_date","getTime","TellDay","day","toUTCString","convertToEuropean","dd","mm","yyyy","hr","min","sec","Hr","Min","Sec","eth","ethDateTime","converterDateTime","toEuropean","ToEthiopianDateSting","parseInt","getUTCDay","ken","Month","toEthiopian","month","year","toEthiopianDate","localTime","t","toLocaleTimeString","local","simpleDate","LettersClass","letters","find_letter","description","editorState","EditorState","createWithContent","convertFromRaw","createEmpty","description_text","blocks","text","approval_managers","approval_manager","manager_info","m","participants","particpant_info","p","need_approval","status","first_manager","apply","map","step","isApproval","isParticipant","approvalStep","needsApproval","approvedManagers","sameStage","proceedStage","nextEmployee","remove","outBox","creater","searchLetters","rank","progress","seen","totallProgress","isModifiable","isApprovable","unApproved","Message","findConnected","onlineUsers","isOnline","lastSeen","disconnected_time","myMessage","sender","reciever","contactedUsers","contact","Set","searchContacted","c","chatRoom","newMessages","last_message","file_name","letter_id","created_date","notifiaction","InboxLetters","SearchLetters","newLetters","seenLetters","newInboxLetters","seenInboxLetters","allowanceLetter","DataLoading","ErrorLoading","faWindowClose","values","setValues","faEnvelopeOpen","tab","faForward","WriteLetter","derror","useRef","handleSubmit","preventDefault","current","focus","initial","idate","imonth","iyear","Return","rdate","rmonth","ryear","onSubmit","placeholder","required","onChange","target","toolbarClassName","editorStyle","marginLeft","minHeight","border","borderColor","wrapperClassName","editorClassName","onEditorStateChange","convertToRaw","getCurrentContent","ref","faDraftingCompass","objective","faBarcode","project_name","faProjectDiagram","program","faTruck","initial_place","faCar","destination_place","faCalendar","max","faBackward","Approval","approvalMax","faUser","faObjectGroup","faUserAlt","faPlus","key","s","colSpan","faLevelUpAlt","faTrash","ev","MsetLevel","removeManager","emitter","AddParticipants","managers","letter","rid","random","usage","createMessage","Letter","Data","_doc","part","post","messages","req","res","created","faInfo","addParticipant","removeParticpant","disabled","return_date","put","deleted","saveLetter","match","setSize","params","setTab","faLayerGroup","faEdit","faUserCheck","Progress","animated","multi","bar","color","DeleteLetter","close","faCheck","del","Delete","l_id","apm","fdirector","fd","LetterProgress","ap","striped","hover","faChartLine","faCheckCircle","faEye","aria-valuenow","aria-valuemin","aria-valuemax","style","comment","TakeActions","approved","check","Approved","Mess","sendToParticipant","Letters","M","Participants","participant","Part","approved_date","updated","nextManager","Req","checked","faComment","cols","rows","PrintLetter","readOnly","toolbarHidden","Component","ViewLetters","componentRef","trigger","faPrint","content","ModalLetter","typing","stop_typing","modal","setModal","size","sethover","toggle","onMouseEnter","onMouseLeave","faEnvelope","display","isOpen","faPencilAlt","faHammer","connections","Ltyping","empError","userLoading","userError","contacted","box","Messages","Scroller","document","getElementById","scrollIntoView","behavior","faSearch","faCircle","faPlusCircle","reverse","faCheckDouble","faCommentDots","autoComplete","onKeyUp","setTimeout","letterState","lettersReducer","allowanceState","allowanceReducer","climatePlaceState","climatePlacesReducer","deductionState","deductionReducer","Contacts","emp","bordered","f","ContactEmployee","ChatRoom","messageState","messageReducer","connState","connReducer","OutboxLetters","found","faCog","OutBoxLetters","notify","faBell","faEnvelopeOpenText","faUserAltSlash","InBoxLetters","letterLoading","letterError","messageLoading","messageError","App","useReducer","place","dispatchPlaces","fieldEmployees","dispatchFieldEmplooyees","config","dispatchConfig","allowances","dispatchAllowances","climatePlaces","dispatchClimatePlaces","deductions","dispatchDeductions","dispatchConnections","isHydrating","src","exact","path","Boolean","location","hostname","JavascriptTimeAgo","addLocale","en","ru","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.460139a6.chunk.js","sourcesContent":["const {password} =require('../config/config')\r\nconst CryptoJS=require('crypto-js')\r\n\r\nconst encryptObject = (object)=>{\r\nvar encrptedObject = CryptoJS.AES.encrypt(JSON.stringify(object), password).toString();\r\nreturn encrptedObject\r\n}\r\nconst decrptObject = (object)=>{\r\n    var bytes  = CryptoJS.AES.decrypt(object,password);\r\nvar decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\nreturn decryptedData\r\n}\r\nmodule.exports={encryptObject,decrptObject}","const config = {\r\n  server: \"http://192.168.8.101:9090\",\r\n  host: \"http://192.168.8.101:9090/api\",\r\n  files_url: \"http://192.168.8.101:9090/static/\",\r\n  password: \"fLf3450asrxvae_zx_3q343543Xxsdkvdsl_zczxm\",\r\n};\r\nmodule.exports = config;\r\n","const { password } = require(\"../config/config\");\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nconst encryptToken = (object) => {\r\n  var encrptedObject = CryptoJS.AES.encrypt(object, password).toString();\r\n  return encrptedObject;\r\n};\r\nconst decryptToken = (object) => {\r\n  var bytes = CryptoJS.AES.decrypt(object, password);\r\n  var decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n  return decryptedData;\r\n};\r\nmodule.exports = { encryptToken, decryptToken };\r\n","import React from 'react'\r\n\r\nexport const LayoutContext=React.createContext()\r\nexport const StoreContext= React.createContext()\r\nexport const Anotification=React.createContext()\r\nexport const DeductionDnd=React.createContext()\r\nexport const Notification=React.createContext()\r\nexport const LetterContext=React.createContext()"," export const empState={\r\n     state:[],\r\n     loading:true,\r\n     error:false\r\n }\r\n  \r\n export const employeeReducer =(state=empState,action)=>{\r\n  switch(action.type){\r\n      case 'ADD_EMPLOYEES':\r\n      return {state:action.payload,loading:false,error:false}\r\n      case 'LOADING_EMPLOYEES':\r\n    return {...state,loading:true}\r\n    default:\r\n        return {...state,loading:false,error:true}\r\n  }   \r\n }","export const depState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const departmentReducer =(state=depState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_DEPARTMENT':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_DEPARTMENT':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const placeState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const placeReducer =(state=placeState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_PLACES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_PLACES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const UserState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const UserReducer = (state = UserState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_USERS':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_USERS':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","export const fieldAllowanceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const fieldAllowanceReducer =(state=fieldAllowanceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_FIELDALLOWANCE':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_FIELDALLOWANCE':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const configState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const configReducer =(state=configState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_CONFIG':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_CONFIG':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const companyState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const CompanyReducer =(state=companyState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_COMPANY':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_COMPANY':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","\r\nexport const removeDuplicates=(originalArray, prop)=> {\r\n    var newArray = [];\r\n    var lookupObject  = {};\r\n\r\n    for(var i in originalArray) {\r\n       lookupObject[originalArray[i][prop]] = originalArray[i];\r\n    }\r\n\r\n    for(i in lookupObject) {\r\n        newArray.push(lookupObject[i]);\r\n    }\r\n     return newArray;\r\n}","import { departmentClass } from \"./Department\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\n\r\nexport class EmployeeClass extends departmentClass {\r\n  constructor(employees, department) {\r\n    super(department);\r\n    this.employees = employees;\r\n  }\r\n  Filter = (id) => this.employees.filter((e) => e.emp_id === id);\r\n\r\n  UnFilter = (id) => {\r\n    let employee = this.employees.filter((e) => {\r\n      return e.emp_id !== id;\r\n    });\r\n    return employee;\r\n  };\r\n  /**accepts emp_id and return employee object */\r\n  Find = (id) => this.employees.find((e) => e.emp_id === id);\r\n  /**return's object of employee info\r\n   * @param {*} id -employee _id not emp_id\r\n   */\r\n  getUserInfo = (id) => this.employees.find((e) => e._id === id);\r\n\r\n  Name = (id) => {\r\n    let first_name = this.Find(id) ? this.Find(id).first_name : \"\";\r\n    let middle_name = this.Find(id) ? this.Find(id).middle_name : \"\";\r\n    let last_name = this.Find(id) ? this.Find(id).last_name : \"\";\r\n    return first_name + \" \" + middle_name + \" \" + last_name;\r\n  };\r\n\r\n  Emp_id = (id) => {\r\n    let emp_id = this.Find(id) ? this.Find(id).emp_id : \"\";\r\n    return emp_id;\r\n  };\r\n  Department = (id) =>\r\n    this.Find(id) ? this.dpName(this.Find(id).department) : \"\";\r\n  UserRole = (id) => {\r\n    let userole = this.Find(id) ? this.Find(id).type : \"\";\r\n    return userole;\r\n  };\r\n  findUser = (id) => {\r\n    let found = this.Filter(id).length ? true : false;\r\n    return found;\r\n  };\r\n\r\n  Salary = (id) => (this.Find(id) ? this.Find(id).salary : 0);\r\n\r\n  /**Accepts emp_id and returns position of  the official if it is official\r\n   * employee.... returns empty string if the user is not found and\r\n   * not official employee\r\n   */\r\n  position = (id) => (this.isOfficial(id) ? this.Find(id).position : \"\");\r\n  /** returns first name and last Name only\r\n     @param {*} emp_id =>string of emp_id\r\n     */\r\n  messageName = (emp_id) =>\r\n    this.Name(emp_id).split(\" \")[0] + \" \" + this.Name(emp_id).split(\" \")[1];\r\n  /**return's two first letter string of one letter from first name one letter from last name\r\n   * @param {*} emp_id =>emp_id of the user\r\n   */\r\n  firstLetters = (emp_id) =>\r\n    (\r\n      this.messageName(emp_id).split(\" \")[0].slice(0, 1) +\r\n      this.messageName(emp_id).split(\" \")[1].slice(0, 1)\r\n    ).toUpperCase();\r\n  /**return's an array of user resulted from searched\r\n   * @param {*} Index - String to search\r\n   */\r\n  searchEmployee = (Index, Employees) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let employees = Employees ? Employees : this.employees;\r\n    //search by emp_id\r\n    let emp_id = employees.filter((e) =>\r\n      e.emp_id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    //search by name\r\n    let name = employees.filter((n) =>\r\n      this.Name(n.emp_id).toString().toLowerCase().includes(index, 0)\r\n    );\r\n    //search department\r\n    let department = this.department.filter((e) =>\r\n      e.name.toString().toLowerCase().includes(index, 0)\r\n    );\r\n\r\n    let position = employees.filter((e) =>\r\n      e.position.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    return removeDuplicates(\r\n      [...name, ...department, ...emp_id, ...position],\r\n      \"_id\"\r\n    );\r\n  };\r\n}\r\n","export class departmentClass {\r\n  constructor(department) {\r\n    this.department = department;\r\n  }\r\n  find = (id) => this.department.find((d) => d._id === id);\r\n  dpName = (id) => (this.find(id) ? this.find(id).name : \"\");\r\n}\r\n","import { EmployeeClass } from \"./Employees\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\n\r\nexport class UsersClass extends EmployeeClass {\r\n  constructor(users, employees, department) {\r\n    super(employees, department);\r\n    this.users = users;\r\n  }\r\n  //get _id from employee with emp_id\r\n  getId = (Id) => {\r\n    let id = Id ? Id : localStorage.id;\r\n    let user = this.users.find((u) => {\r\n      return u._id === id;\r\n    });\r\n    let User = user ? user : { emp_id: \"\" };\r\n    let employee = this.Find(User.emp_id);\r\n    return employee ? employee._id : \"\";\r\n  };\r\n  getEmp_id = (Id) => {\r\n    let id = Id ? Id : localStorage.id;\r\n    let user = this.users.find((u) => {\r\n      return u._id === id;\r\n    });\r\n    let User = user ? user : { emp_id: \"\" };\r\n    return User.emp_id;\r\n  };\r\n  /**return's array of employee with filtered employee type\r\n       @param {*} type =>String which used filter 'director' ,'sector leader'...\r\n      */\r\n  position = (type) =>\r\n    this.employees.filter(\r\n      (e) => e.position === type && this.getEmp_id() !== e.emp_id\r\n    );\r\n  canApprove = (emp_id) =>\r\n    this.Find(emp_id ? emp_id : this.getEmp_id())\r\n      ? this.Find(emp_id ? emp_id : this.getEmp_id()).type === \"Manager\"\r\n        ? true\r\n        : false\r\n      : false;\r\n  /**\r\n   * retun's an array of employee based on given array and employee type\r\n   * @param {*} employees =>array of employees to search \r\n   @param {*} type =>String which used filter 'director' ,'sector leader'...\r\n   */\r\n  employeeSearch = (employees, type) =>\r\n    employees.filter((e) => e.type === type && this.getEmp_id() !== e.emp_id);\r\n  /**\r\n   * return's array of contacts searched\r\n   * @param {*} Index=>string to search\r\n   */\r\n  ContactSearch = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let emp_id = this.employees.filter((e) =>\r\n      e.emp_id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let name = this.employees.filter((e) =>\r\n      this.Name(e.emp_id).toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let department = this.employees.filter((e) =>\r\n      e.department.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let users = removeDuplicates([...emp_id, ...name, ...department], \"_id\");\r\n    return {\r\n      employees: removeDuplicates(\r\n        [\r\n          ...this.employeeSearch(users, \"employee\"),\r\n          ...this.employeeSearch(users, \"f_employee\"),\r\n        ],\r\n        \"_id\"\r\n      ),\r\n      directors: this.employeeSearch(users, \"director\"),\r\n      f_director: this.employeeSearch(users, \"f_director\"),\r\n      team_leaders: removeDuplicates(\r\n        [\r\n          ...this.employeeSearch(users, \"f_team_leader\"),\r\n          ...this.employeeSearch(users, \"team_leader\"),\r\n        ],\r\n        \"_id\"\r\n      ),\r\n      sector_leaders: this.employeeSearch(users, \"sector_leader\"),\r\n      f_sector_leader: this.employeeSearch(users, \"f_sector_leader\"),\r\n      commisioner: this.employeeSearch(users, \"senior_officer\"),\r\n    };\r\n  };\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { withRouter } from \"react-router\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faInfo,\r\n  faPhone,\r\n  faCalculator,\r\n  faBook,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { AllowanceClass } from \"../../../controllers/Allowance\";\r\nimport { Logout } from \"../../users/Logout\";\r\nimport { UsersClass } from \"../../../controllers/Users\";\r\n\r\nconst Navbar = (props) => {\r\n  const [state, setState] = useState({\r\n    search: \"\",\r\n    toggleButton: \"\",\r\n    title: \"Shemsu Medebir\",\r\n    screen: 0,\r\n    acivateProfile: \"\",\r\n    profileOpener: \"\",\r\n  });\r\n  const setToggler = useContext(LayoutContext);\r\n  const { togglers, uiContents } = setToggler;\r\n  const { collapse, headertheme } = setToggler.uiContents;\r\n  const { user_type, token } = localStorage;\r\n\r\n  /**profiler */\r\n  const { socket, department, employees, users } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading } = employees;\r\n  const { state: Users, loading: userLoading } = users;\r\n  const allowance = new UsersClass(\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n\r\n  useEffect(() => {\r\n    var x = 0;\r\n    //if the user is not authenticated push to login\r\n    user_type !== \"system_admin\" && token\r\n      ? (x = 1)\r\n      : props.history.push(\"/login.html\");\r\n    let { width } = window.screen;\r\n    setState({ ...state, screen: width });\r\n    if (width <= 892) {\r\n      togglers({\r\n        ...uiContents,\r\n        collapse: \"closed-sidebar-mobile closed-sidebar\",\r\n      });\r\n    }\r\n  }, [user_type, token]);\r\n  const openSearch = () => {\r\n    setState({ ...state, search: \"active\" });\r\n  };\r\n  const closeSearch = () => {\r\n    setState({ ...state, search: \"\" });\r\n  };\r\n  const openProfile = () => {\r\n    let { acivateProfile: op, profileOpener: po } = state;\r\n    let { width } = window.screen;\r\n    let acivateProfile = width <= 892 ? (op === \"\" ? \"active\" : \"\") : \"\";\r\n    let profileOpener =\r\n      width <= 892 ? (po === \"\" ? \"header-mobile-open\" : \"\") : \"\";\r\n    setState({ ...state, acivateProfile, profileOpener });\r\n  };\r\n  const toggler = () => {\r\n    let { toggleButton: button } = state;\r\n    let toggleButton = button === \"\" ? \"is-active\" : \"\";\r\n    let { width } = window.screen;\r\n    let toggler =\r\n      width <= 892\r\n        ? collapse === \"closed-sidebar-mobile closed-sidebar\"\r\n          ? \"closed-sidebar-mobile closed-sidebar sidebar-mobile-open\"\r\n          : \"closed-sidebar-mobile closed-sidebar\"\r\n        : collapse === \"\"\r\n          ? \"closed-sidebar\"\r\n          : \"\";\r\n    togglers({ ...uiContents, collapse: toggler });\r\n    setState({ ...state, toggleButton });\r\n  };\r\n\r\n  return (\r\n    <div className={\"app-header header-shadow \" + headertheme}>\r\n      <div className=\"app-header__logo\">\r\n        <h2 className=\"font-weight-bold show\">\r\n          Webook\r\n          <FontAwesomeIcon icon={faBook} className=\"mx-2\" />\r\n        </h2>\r\n        <div className=\"header__pane ml-auto\">\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className={\r\n                \"hamburger close-sidebar-btn hamburger--elastic \" +\r\n                state.toggleButton\r\n              }\r\n              data-classname=\"closed-sidebar\"\r\n              onClick={() => toggler()}\r\n            >\r\n              <span className=\"hamburger-box\">\r\n                <span className=\"hamburger-inner\"></span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__mobile-menu\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n            onClick={() => toggler()}\r\n          >\r\n            <span className=\"hamburger-box\">\r\n              <span className=\"hamburger-inner\"></span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu\">\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            className={\r\n              \"btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav \" +\r\n              state.acivateProfile\r\n            }\r\n            onClick={() => openProfile()}\r\n          >\r\n            <span className=\"btn-icon-wrapper\">\r\n              <i className=\"fa fa-ellipsis-v fa-w-6\"></i>\r\n            </span>\r\n          </button>\r\n        </span>\r\n      </div>\r\n      <div className={\"app-header__content \" + state.profileOpener}>\r\n        <div className=\"app-header-left\">\r\n          <ul className=\"header-menu nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/contacts\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faPhone} className=\"nav-link-icon\" />\r\n                Contact\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"app-header-right\">\r\n          <div className=\"header-btn-lg pr-0\">\r\n            <div className=\"widget-content p-0\">\r\n              <div className=\"widget-content-wrapper\">\r\n                <div className=\"widget-content-left\">\r\n                  <div className=\"btn-group\">\r\n                    <div\r\n                      data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"p-0 btn\"\r\n                    >\r\n                      <h4 className=\"font-weight-bold\">\r\n                        [W]\r\n                        <i className=\"fa fa-angle-down ml-2 opacity-8\"></i>\r\n                      </h4>\r\n                    </div>\r\n                    <div\r\n                      tabIndex=\"-1\"\r\n                      role=\"menu\"\r\n                      aria-hidden=\"true\"\r\n                      className=\"dropdown-menu dropdown-menu-right\"\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => Logout(props, socket, allowance.getEmp_id)}\r\n                        tabIndex=\"0\"\r\n                        className=\"dropdown-item\"\r\n                      >\r\n                        Logout\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"widget-content-left  ml-3 header-user-info\">\r\n                  <div className=\"widget-heading\">\r\n                    {allowance.Name(allowance.getEmp_id())}\r\n                  </div>\r\n                  <div className=\"widget-subheading\">\r\n                    {allowance.Department(allowance.getEmp_id())}{\" \"}\r\n                    {allowance.UserRole(allowance.getEmp_id())}\r\n                  </div>\r\n                </div>\r\n                <div className=\"widget-content-right header-user-info ml-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-shadow p-1 btn  btn-sm show-toastr-example\"\r\n                  >\r\n                    <p\r\n                      data-letters={allowance.firstLetters(\r\n                        allowance.getEmp_id()\r\n                      )}\r\n                    ></p>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import { Socket } from \"socket.io-client\";\r\n\r\nexport const Logout = (props, socket, emp_id) => {\r\n  localStorage.removeItem(\"id\");\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"auth\");\r\n  localStorage.removeItem(\"user_type\");\r\n  localStorage.removeItem(\"emp_id\");\r\n  socket.emit(\"disConnect\", { emp_id });\r\n  props.history.push(\"/login.html\");\r\n};\r\n","import { decryptToken } from \"../auth/tokenEncryption\";\r\n\r\nexport const userInfo = () => {\r\n  let { user_type, token: Token } = localStorage;\r\n  let token = decryptToken(Token);\r\n  return { token, user_type };\r\n};\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchEmployees = async () => {\r\n  const employees = await axios.get(host + \"/employee\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const Employees = decrptObject(employees.data);\r\n  return Employees;\r\n};\r\nexport const addEmployees = (employees) => {\r\n  return {\r\n    type: \"ADD_EMPLOYEES\",\r\n    payload: employees,\r\n  };\r\n};\r\nexport const loadingEmployees = () => {\r\n  return {\r\n    type: \"LOADING_EMPLOYEES\",\r\n  };\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport {\r\n  loadingEmployees,\r\n  fetchEmployees,\r\n  addEmployees,\r\n} from \"../../store/Actions/employeeAction\";\r\n\r\nconst EmployeeFetcher = () => {\r\n  const { dispatchEmployees } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    const getEmployees = async () => {\r\n      try {\r\n        dispatchEmployees(loadingEmployees());\r\n        const employees = await fetchEmployees();\r\n        dispatchEmployees(addEmployees(employees));\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatchEmployees({ type: \"ERROR\" });\r\n      }\r\n    };\r\n    getEmployees();\r\n  }, [dispatchEmployees]);\r\n  return <p></p>;\r\n};\r\n\r\nexport default EmployeeFetcher;\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchUsers = async () => {\r\n  const Users = await axios.get(host + \"/users\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const users = decrptObject(Users.data);\r\n  return users;\r\n};\r\nexport const addUsers = (Users) => {\r\n  return {\r\n    type: \"ADD_USERS\",\r\n    payload: Users,\r\n  };\r\n};\r\nexport const loadingUsers = () => {\r\n  return {\r\n    type: \"LOADING_USERS\",\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchCompany = async () => {\r\n  const Company = await axios.get(host + \"/company\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const company = decrptObject(Company.data);\r\n  return company;\r\n};\r\nexport const addCompany = (Company) => {\r\n  return {\r\n    type: \"ADD_COMPANY\",\r\n    payload: Company,\r\n  };\r\n};\r\nexport const loadingCompany = () => {\r\n  return {\r\n    type: \"LOADING_COMPANY\",\r\n  };\r\n};\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { loadingCompany, fetchCompany, addCompany } from '../../store/Actions/companyActions'\r\n\r\n  const CompanyFetcher=()=> {\r\n      const {dispatchCompany}=useContext(StoreContext)\r\n    \r\n      useEffect(()=>{\r\n        const getCompany=async ()=>{\r\n         dispatchCompany(loadingCompany())\r\n            try{\r\n          const company=await fetchCompany()\r\n          dispatchCompany(addCompany(company))\r\n         }   \r\n         catch(err){\r\n        dispatchCompany({type:'ERROR'})\r\n         }\r\n        }\r\n   getCompany()\r\n      },[dispatchCompany])\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default CompanyFetcher\r\n","/**Accepts type of what to do and message return an object of speld  */\r\nexport const saveProcess=(type,message)=>{\r\n   switch(type){\r\n       case 'initial':\r\n        return {error:'',success:'',process:message,\r\n              disable:true,loading:true}   \r\n        case 'error':\r\n       return {error:message,success:'',process:'',\r\n       disable:false,loading:false} \r\n       case 'success':\r\n      return{error:'',success:message,process:'',\r\n      disable:false,loading:false}\r\n      default:\r\n       return {error:'',success:'',process:'',disable:false,loading:false}   \r\n      }\r\n}\r\n/**generates random id */\r\nexport const randomId=()=>Math.round(Math.random(0,100000000)*100000000)\r\nexport const Donothing=()=>{}\r\nexport const Round=num=>Math.round(num*100)/100","import socketIOClient from \"socket.io-client\";\r\nimport { server } from \"./components/config/config\";\r\n\r\nexport const webSocket = socketIOClient(server,{reconnection:true}) ","import Axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\n\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const addLetters = (letters) => {\r\n  return {\r\n    type: \"ADD_LETTERS\",\r\n    payload: letters,\r\n  };\r\n};\r\nexport const loadingLetters = () => {\r\n  return {\r\n    type: \"LOADING_LETTERS\",\r\n  };\r\n};\r\nexport const loadLetters = async () => {\r\n  const L = await Axios.get(host + \"/letters\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const l = decrptObject(L.data);\r\n  return l;\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { UsersClass } from \"../../controllers/Users\";\r\nimport { webSocket } from \"../../socket\";\r\nimport { addConn } from \"../../store/Actions/connectionAction\";\r\nimport { addLetters } from \"../../store/Actions/letterActions\";\r\nimport { addMessages } from \"../../store/Actions/messageActions\";\r\nimport { addUsers } from \"../../store/Actions/userActions\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\n\r\nconst MessageFetchers = () => {\r\n  const {\r\n    socket,\r\n    dispatchMessages,\r\n    dispatchUsers,\r\n    dispatchLetters,\r\n    setTyping,\r\n    setLTyping,\r\n    setSocket,\r\n    department, employees, users\r\n  } = useContext(StoreContext);\r\n  setSocket(webSocket);\r\n  const { } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading } = employees;\r\n  const { state: Users, loading: userLoading } = users;\r\n  const allowance = new UsersClass(\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  useEffect(() => {\r\n    try {\r\n      socket\r\n        ? socket.emit(\"onConnect\", { emp_id: allowance.getEmp_id() })\r\n        : Donothing();\r\n      socket ? socket.emit(\"users\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"users\", (data) => {\r\n          dispatchUsers(addUsers(data))\r\n        })\r\n        : Donothing();\r\n      socket ? socket.emit(\"chat\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"chat\", (data) => dispatchMessages(addMessages(data)))\r\n        : Donothing();\r\n      socket\r\n        ? socket.on(\"typing\", (data) => setTyping(data.emp_id))\r\n        : Donothing(); //chat typing\r\n      socket\r\n        ? socket.on(\"typing_letter\", (data) => setLTyping(data.emp_id))\r\n        : Donothing(); //letter typing\r\n      socket ? socket.emit(\"letters\", \"\") : Donothing();\r\n      socket\r\n        ? socket.on(\"letters\", (data) => dispatchLetters(addLetters(data)))\r\n        : Donothing();\r\n    } catch (err) {\r\n      dispatchUsers({ type: \"Error\" });\r\n      dispatchMessages({ type: \"Error\" });\r\n    }\r\n  }, [socket, empLoading]);\r\n  return <div></div>;\r\n};\r\n\r\nexport default MessageFetchers;\r\n","\r\nexport const addMessages = (Messages) => {\r\n    return {\r\n        type: 'ADD_MESSAGES', payload: Messages\r\n    }\r\n}\r\nexport const loadingMessages = () => {\r\n    return {\r\n        type: 'LOADING_MESSAGES'\r\n    }\r\n}","import axios from \"axios\";\r\nimport { host } from \"../../components/config/config\";\r\nimport { decrptObject, encryptObject } from \"../../components/auth/encrypt\";\r\nimport { userInfo } from \"../../components/users/userInfo\";\r\nexport const fetchDepartment = async () => {\r\n  const Department = await axios.get(host + \"/department\", {\r\n    headers: { data: encryptObject(userInfo()) },\r\n  });\r\n  const department = decrptObject(Department.data);\r\n  return department;\r\n};\r\nexport const addDepartment = (Department) => {\r\n  return {\r\n    type: \"ADD_DEPARTMENT\",\r\n    payload: Department,\r\n  };\r\n};\r\nexport const loadingDepartment = () => {\r\n  return {\r\n    type: \"LOADING_DEPARTMENT\",\r\n  };\r\n};\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { loadingDepartment, fetchDepartment, addDepartment } from '../../store/Actions/departmentActions'\r\n\r\n  const DepartmentFetch=()=> {\r\n      const {dispatchDepartment}=useContext(StoreContext)\r\n    const getDepartment=async ()=>{\r\n        dispatchDepartment(loadingDepartment())\r\n     try{\r\n      const departments=await fetchDepartment()\r\n      dispatchDepartment(addDepartment(departments))\r\n     }   \r\n     catch(err){\r\n    dispatchDepartment({type:'ERROR'})\r\n     }\r\n    }\r\n      useEffect(()=>{\r\n   getDepartment()\r\n      },[dispatchDepartment])\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepartmentFetch\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperclip,\r\n  faStamp,\r\n  faCalculator,\r\n  faMapMarker,\r\n  faChartBar,\r\n  faInfo,\r\n  faUsers,\r\n  faEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport EmployeeFetcher from \"../../fetchers/employeeFetchers\";\r\nimport UsersFetcher from \"../../fetchers/UsersFetcher\";\r\nimport CompanyFetcher from \"../../fetchers/CompanyFetcher\";\r\n\r\nimport MessageFetchers from \"../../fetchers/MessageFetchers\";\r\nimport { UsersClass } from \"../../../controllers/Users\";\r\nimport DepartmentFetch from \"../../fetchers/departmentFetch\";\r\nconst SideNav = () => {\r\n  const setToggler = useContext(LayoutContext);\r\n  const { sidetheme } = setToggler.uiContents;\r\n\r\n  return (\r\n    <div className={\"app-sidebar sidebar-shadow \" + sidetheme}>\r\n      <div className=\"app-header__logo\">\r\n        <DepartmentFetch />\r\n        <EmployeeFetcher />\r\n        <CompanyFetcher />\r\n        <MessageFetchers />\r\n        <div className=\"header__pane ml-auto\">\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"hamburger close-sidebar-btn hamburger--elastic\"\r\n              data-classname=\"closed-sidebar\"\r\n            >\r\n              <span className=\"hamburger-box\">\r\n                <span className=\"hamburger-inner\"></span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__mobile-menu\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n          >\r\n            <span className=\"hamburger-box\">\r\n              <span className=\"hamburger-inner\"></span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-header__menu\">\r\n        <span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav\"\r\n          >\r\n            <span className=\"btn-icon-wrapper\">\r\n              <i className=\"fa fa-ellipsis-v fa-w-6\"></i>\r\n            </span>\r\n          </button>\r\n        </span>\r\n      </div>{\" \"}\r\n      <div className=\"scrollbar-sidebar\">\r\n        <div className=\"app-sidebar__inner\">\r\n          <ul className=\"vertical-nav-menu\">\r\n            <li className=\"app-sidebar__heading\">Webook</li>\r\n\r\n            <li className=\"app-sidebar__heading\">\r\n              <FontAwesomeIcon\r\n                icon={faPaperclip}\r\n                className=\"metismenu-icon pe-7s-diamond fa-2x text-info mx-2\"\r\n              />\r\n              Document\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/inbox\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">Letter</p>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/message\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">message</p>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"app-sidebar__heading\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className=\"metismenu-icon pe-7s-diamond fa-2x text-info mx-2\"\r\n              />\r\n              Employess\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/contact\">\r\n                <i className=\"metismenu-icon pe-7s-display2\"></i>\r\n                <p className=\"font-weight-bold\">contact</p>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from 'react'\r\nimport  '../../css/Layout.css'\r\nexport const DotLoading=()=> {\r\n    return (\r\n        <div className=\"spinner\">\r\n  <div className=\"bounce1\"></div>\r\n  <div className=\"bounce2\"></div>\r\n  <div className=\"bounce3\"></div>\r\n     </div>\r\n    )\r\n}\r\nexport const SpinnerLoading=()=>{\r\n  return(\r\n    <div className=\"col-lg-12 text-center\">\r\n           <div className=\"spinner-border text-dark text-center\" role=\"status\">\r\n<span className=\"sr-only text-center text-dark\">Loading...</span>\r\n</div>\r\n</div>\r\n  )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport { SpinnerLoading, DotLoading } from \"../layout/Loading\";\r\nimport { files_url } from \"../config/config\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBook, faCalculator, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { company } = useContext(StoreContext);\r\n  const { state: COMPANY, loading, error } = company;\r\n  const Company = COMPANY[0];\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <h1 className='text-center'>WEBOOK <FontAwesomeIcon icon={faBook} /></h1>\r\n                    <h4 className=\"text-center\">\r\n                      <p className=\"text-center\">\r\n                        The word communication is a process of interaction with people and their environment. Through such types of interactions, two or more individuals influence the ideas, beliefs, and attitudes of each other.\r\n                        Many methods of communication take place in both large and small business settings. Understanding the availability, benefits, and drawbacks of the various options can help business people choose the communication tools most likely to resonate with audiences. Today communication can occur in a variety of ways – in person, through print documents (letters and reports), through broadcast messages and meetings.\r\n                        improving communication in an organization will make better work performance, effective time management, can reduce cost, and can save a lot of paperwork. Good communication in a task can have an impact on what will be executed in quality, quantity, and effectiveness.\r\n\r\n                        Webook is our brand. This project is designed and developed for communication at the organizational level. It describes how communication is done in an organization and tries to automate custom communication.\r\n\r\n                      </p>\r\n                    </h4>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\"\r\nimport { decrptObject } from \"../components/auth/encrypt\"\r\nimport { host } from \"../components/config/config\"\r\nimport {ethDateTime,converterDateTime,converterString} from 'ethiopian-calendar-date-converter'\r\nvar etdate=require('ethiopic-date')\r\n/**get Date from the server */\r\nexport const getDate=async ()=>{\r\nconst Time=await axios.get(host+'/date')\r\nconst DATE=new Date(Time.data.date)\r\nreturn DATE.toISOString()\r\n}\r\n\r\nexport const DateFormat=(DATE)=>{\r\n    const date=new Date(DATE)\r\n    const year=date.getFullYear()\r\n    const Month=date.getMonth()\r\n    let month=parseInt(Month)<10?'0'+Month:Month\r\n    let day=date.getDate()\r\n    let Day=parseInt(day)<10?'0'+day:day\r\n    return year+'-'+month+'-'+Day\r\n}\r\n\r\n /**returns duration of day btn to isoString dates */\r\n export const durationDays=(initial_date,destination_date)=>{\r\n    let i_date=new Date(initial_date) \r\n    let d_date=new Date(destination_date)\r\n    let duration=d_date.getTime()-i_date.getTime()\r\n      return duration/(1000*3600*24)\r\n }  \r\n/**accepts initial date and destination date and check duration is valid */\r\nexport const checkDate=(initial_date,destination_date)=>\r\n durationDays(initial_date,destination_date)<0? false:true\r\n       \r\n export const FullDay=(Day)=>{\r\n     let date=new Date(Day)\r\n     return date.toUTCString()\r\n }\r\n /**returns utc date representation string removing the time */\r\n export const TellDay=(day)=>{\r\n     let date=new Date(day)\r\n     return date.toUTCString().slice(0,16) \r\n }\r\n export const tellTime=(day)=>{\r\n    let date=new Date(day)\r\n    let hour=date.getHours()\r\n    let minute=date.getMinutes()\r\n    return hour+':'+minute\r\n }\r\n /**converts  ethiopian date to gregorian calander in iso format */   \r\n export const convertToEuropean=(dd,mm,yyyy,hr,min,sec)=>{\r\n     let Hr=hr?hr:1\r\n     let Min=min?min:0\r\n     let Sec=sec?sec:0\r\n    const eth=new ethDateTime(dd,mm,yyyy,Hr,Min,Sec)\r\n    const gr=new Date( converterDateTime.toEuropean(eth))\r\n    return gr.toISOString()\r\n }\r\n /**converts gregorian calander to ethiopian date string */\r\n export const ToEthiopianDateSting=(DATE)=>{\r\n     const date=new Date(DATE)\r\n     const day=parseInt(date.getUTCDay())\r\n     const ken=day===1?'ሰኞ':day===2?'ማክሰኞ':day===3?'ረቡዕ':day===4?'ሐሙስ':\r\n         day===5?'አርብ':day===6?'ቅዳሜ':day===7?'እሁድ':''\r\n     const Month=parseInt(converterDateTime.toEthiopian(date).month)\r\n     const DAte=parseInt(converterDateTime.toEthiopian(date).date) \r\n     const {year}=converterDateTime.toEthiopian(date)\r\n     const month=Month===1?'መስከረም':Month===2?'ጥቅምት':Month===3?'ህዳር':Month===4?'ታህሳስ':\r\n    Month===5?'ጥር':Month===6?'የካቲት':Month===7?'መጋቢት':Month===8?'ሚያዝያ':Month===9?'ግንቦት':\r\n    Month===10?'ሰኔ':Month===11?'ሐምሌ':Month===12?'ነሐሴ':Month===13?'ጳጉሜ':''   \r\n   return ken+' '+DAte+' '+month+' '+year  \r\n}\r\n/**returns object of date,month,year with gc calander as parameter\r\n * @param DATE-accepts date value of gc isostring\r\n */\r\nexport const toEthiopianDate=(DATE)=>{\r\n    const date=new Date(DATE)\r\n    return converterDateTime.toEthiopian(date)\r\n}\r\n/**accepts month number and returns month string */\r\nexport const toEthiopianMonth=Month=>Month===1?'መስከረም':Month===2?'ጥቅምት':Month===3?\r\n'ህዳር':Month===4?'ታህሳስ':Month===5?'ጥር':Month===6?'የካቲት':Month===7?\r\n'መጋቢት':Month===8?'ሚያዝያ':Month===9?'ግንቦት':Month===10?'ሰኔ':Month===11?\r\n'ሐምሌ':Month===12?'ነሐሴ':Month===13?'ጳጉሜ':''\r\n/**accepts initial month number and return month.\r\n *  returns array of months object {number:1,month:String}\r\n * that is duration btn initial and return month to Ethiopian string\r\n * @param imonth=>is the initial month\r\n * @param rmonth=>is the return month \r\n */\r\nexport const durationMonth=(imonth,rmonth)=>{\r\n    let duration=rmonth-imonth<0?(13-imonth)+rmonth:rmonth-imonth\r\n    var months=[],x,j=0\r\n      for(var i=0;i<=duration;i++){\r\n     i+imonth>13?months.push({\r\n         number:rmonth-j ,\r\n        month:toEthiopianMonth(rmonth-j)}):x=0\r\n     i+imonth<=13?months.push({\r\n        number:i+imonth, \r\n        month:toEthiopianMonth(i+imonth)}):j++      \r\n      }\r\n      return months\r\n}\r\n/**return array of years btn two years */\r\nexport const durationYears=(initial_year,final_year)=>{\r\n   let duration=final_year-initial_year\r\n   var years=[]\r\n   for(var i=0;i<=duration;i++){\r\n      years.push(i+initial_year)\r\n   }\r\n   return years\r\n}\r\n/**returns a string of local time formatted like this (11:00 am)  */\r\nexport const localTime=DATE=>{\r\n   const date=new Date(DATE)\r\n   const time=date.toLocaleTimeString()\r\n   const t=time.split(':')\r\n  const local= t[2].split(' ')\r\n  return t[0]+':'+t[1]+' '+(local[1]?local[1]:'')\r\n}\r\n/**return astring of month contactenated like (dec 2 2020) */\r\nexport const simpleDate=DATE=>{\r\n    const date=TellDay(DATE)\r\n    const d=date.split(',')\r\n    return d[1]\r\n}","import { UsersClass } from \"./Users\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\nimport { Donothing, Round } from \"./saveProcess\";\r\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\r\n\r\nexport class LettersClass extends UsersClass {\r\n  constructor(letters, users, employees, department) {\r\n    super(users, employees, department);\r\n    this.letters = letters;\r\n  }\r\n  /**find letter based on given _id\r\n   * @param {*} id - string of letter of letter id\r\n   */\r\n  find_letter = (id) => this.letters.find((l) => l._id === id);\r\n  /**return's object of editorState for react-wywisgy description of the letter\r\n   * @param {*} id - string of letter of letter id\r\n   */\r\n  description = (id) =>\r\n    this.find_letter(id) ? JSON.parse(this.find_letter(id).description) : \"\";\r\n  /**retun's an object for react-wyiswgy editor\r\n   * @param {*} id - string of letter id\r\n   */\r\n  editorState = (id) =>\r\n    this.description(id)\r\n      ? EditorState.createWithContent(convertFromRaw(this.description(id)))\r\n      : EditorState.createEmpty();\r\n  /**retun's string description text of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  description_text = (id) =>\r\n    this.description(id)\r\n      ? this.description(id).blocks[0]\r\n        ? this.description(id).blocks[0].text\r\n        : \"\" + \"<br/>\" + this.description(id).blocks[1]\r\n          ? this.description(id).blocks[1].text\r\n          : \"\"\r\n      : \"\";\r\n  /**returns title of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  title = (id) => (this.find_letter(id) ? this.find_letter(id).title : \"\");\r\n  /**return's array of approval managers of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  approval_managers = (id) =>\r\n    this.find_letter(id) ? this.find_letter(id).approval_manager : [];\r\n  /**return's of object about the information of the approval manager\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id - string of employee id\r\n   */\r\n  manager_info = (id, emp_id) =>\r\n    this.approval_managers(id).find((m) => {\r\n      let Emp_id = emp_id ? emp_id : this.getEmp_id();\r\n      return m.emp_id === Emp_id;\r\n    });\r\n  /**return's participants of the letter\r\n   * @param {*} id - string of letter id\r\n   */\r\n  participants = (id) =>\r\n    this.find_letter(id) ? this.find_letter(id).participants : [];\r\n  /**return's object information about the letter participant\r\n   * @param {*} id - string of letter id\r\n   * @param {*} emp_id - string of employee id\r\n   */\r\n  particpant_info = (id, emp_id) =>\r\n    this.participants(id).find((p) => {\r\n      let Emp_id = emp_id ? emp_id : this.getEmp_id();\r\n      return p.emp_id === Emp_id;\r\n    });\r\n  /**return's array of approval managers that their status is waiting\r\n   * @param {*} id - string of letter id\r\n   */\r\n  need_approval = (id) =>\r\n    this.approval_managers(id).filter((l) => l.status === \"waiting\");\r\n  /**return's array of least approval manager's that approve first\r\n   * @param {*} id - string of letter id\r\n   */\r\n  first_manager = (id) => {\r\n    let min = Math.min.apply(\r\n      null,\r\n      this.approval_managers(id).map((a) => a.step)\r\n    );\r\n    return this.approval_managers(id).filter((m) => m.step === min);\r\n  };\r\n  /**retun's true if the current user is on the approval manager false if the user is npt\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isApproval = (id, emp_id) => (this.manager_info(id, emp_id) ? true : false);\r\n  /** retun's true if the current user is on the participants list false if it is not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isParticipant = (id, emp_id) =>\r\n    this.particpant_info(id, emp_id) ? true : false;\r\n\r\n  /**return's number approval step of the current user\r\n   * @param {*} id - string of letter _id\r\n   * * @param {*} emp_id- string of emp_id\r\n   */\r\n  approvalStep = (id, emp_id) =>\r\n    this.manager_info(id, emp_id) ? this.manager_info(id, emp_id).step : null;\r\n  /** return's if the true if the letter status is waiting false if it is not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  needsApproval = (id, emp_id) =>\r\n    this.need_approval(id).find((m) =>\r\n      m.emp_id === emp_id ? emp_id : this.getEmp_id()\r\n    )\r\n      ? true\r\n      : false;\r\n  /**return's an object array of managers which approved the letter\r\n   * @param {*} id - string of letter _id\r\n   */\r\n  approvedManagers = (id) =>\r\n    this.approval_managers(id).filter((m) => m.status === \"Approved\");\r\n  /** retun's an array of managers that have the same approval stages with the current employee or given emp_id\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  sameStage = (id, emp_id) =>\r\n    this.approval_managers(id).filter(\r\n      (m) =>\r\n        m.step === this.approvalStep(id, emp_id) &&\r\n        m.emp_id !== this.getEmp_id()\r\n    );\r\n  /**retun's true if the rest manager in the same step approved the letter and\r\n   * false if the the rest manager in the same step has not approved yet\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  proceedStage = (id, emp_id) =>\r\n    this.sameStage(id, emp_id).find(\r\n      (m) => m.status === \"waiting\" || m.status === \"unApproved\"\r\n    )\r\n      ? false\r\n      : true;\r\n  /**return's array of employee to approve next\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  nextEmployee = (id, emp_id) => {\r\n    //remove current step employees\r\n    let remove = this.approval_managers(id).filter(\r\n      (m) => m.step !== this.approvalStep(id, emp_id) && m.status !== \"Approved\"\r\n    );\r\n    //determine the minimum step of employee\r\n    let min = Math.min.apply(\r\n      null,\r\n      remove.map((a) => a.step)\r\n    );\r\n    //return the managers\r\n    return this.approval_managers(id).filter((m) => m.step === min);\r\n  };\r\n  /**retun's an array of outbox letters of the user*/\r\n  outBox = () => this.letters.filter((l) => l.creater === this.getEmp_id());\r\n  /**return's array of objects that included on the index search string\r\n   * for Outbox letters\r\n   * @param {*} Index-search string\r\n   */\r\n  searchLetters = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let id = this.outBox().filter((l) =>\r\n      l.id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let title = this.outBox().filter((l) =>\r\n      l.title.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let type = this.outBox().filter((l) =>\r\n      l.type.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    return removeDuplicates([...id, ...title, ...type], \"_id\");\r\n  };\r\n  /**retuns's number of rank approval\r\n   * @param {*} status- string of status\r\n   */\r\n  rank = (status) =>\r\n    status === \"Approved\" ? 1 : status === \"waiting\" ? 0.5 : 0;\r\n  /**return's number of progress of approval manager\r\n   * @param {*} id - string letter id\r\n   */\r\n  progress = (id, i = 0) => {\r\n    this.approval_managers(id).map((m) => {\r\n      m.seen && m.status === \"waiting\"\r\n        ? (i = i + this.rank(m.status))\r\n        : m.status === \"waiting\"\r\n          ? Donothing()\r\n          : (i = i + this.rank(m.status));\r\n    });\r\n    return i;\r\n  };\r\n  /**return's number of totall progress\r\n   * @param {*} id-string of letter id\r\n   */\r\n  totallProgress = (id) =>\r\n    Round((this.progress(id) / this.approval_managers(id).length) * 100);\r\n  /** return's true if the letter can be edited or deleled. false for\r\n   * the letter can approve or deleted\r\n   * @param {*} id-string letter id\r\n   */\r\n  isModifiable = (id) =>\r\n    this.approval_managers(id).find((m) => m.status === \"unApproved\")\r\n      ? true\r\n      : this.progress(id) === 0\r\n        ? true\r\n        : false;\r\n  /**return's true if the approval mananager can approve the letter false if it can not\r\n   * @param {*} id - string of letter _id\r\n   * @param {*} emp_id- string of emp_id\r\n   */\r\n  isApprovable = (id, emp_id) => {\r\n    console.log(this.participants(id).find((l) => l.seen))\r\n    return (this.approval_managers(id).find(\r\n      (m) => m.status === \"unApproved\" && m.emp_id !== this.getEmp_id()\r\n    )\r\n      ? false\r\n      : this.approval_managers(id).find(\r\n        (m) =>\r\n          m.step > this.approvalStep(id, emp_id) && m.status === \"Approved\"\r\n      )\r\n        ? false\r\n        : this.participants(id).find((l) => l.seen)\r\n          ? true\r\n          : true);\r\n  }\r\n  /** return's array of object about unApproved managers list\r\n   * @param {*} id- String letter id\r\n   */\r\n  unApproved = (id) =>\r\n    this.approval_managers(id).filter((m) => m.status === \"unApproved\");\r\n}\r\n","import { tellTime } from \"./Date\";\r\nimport { LettersClass } from \"./Letters\";\r\nimport { removeDuplicates } from \"./removeRedudant\";\r\nimport { Donothing } from \"./saveProcess\";\r\n\r\nexport class Message extends LettersClass {\r\n  /**\r\n   * @param {*} users=>list of users in the system\r\n   * @param {*} Users => array of objects connected and disconnected users\r\n   */\r\n  constructor(message, letters, users, employees, department) {\r\n    super(letters, users, employees, department);\r\n    this.message = message;\r\n  }\r\n  /** return an object of active or inactive users \r\n     @param {*} emp_id => emp_id of the users\r\n    */\r\n  findConnected = (emp_id) => {\r\n    console.log(this.users, this.employees)\r\n    return (this.users.find((a) => a.emp_id === emp_id))\r\n  }\r\n  /**returns an array of online users */\r\n  onlineUsers = () => this.users.filter((a) => a.status === \"connected\");\r\n  /** returns true if the user connected to the system  false if it is disconnected\r\n      @param {*} emp_id =>emp_id of the user\r\n     */\r\n  isOnline = (emp_id) =>\r\n    this.onlineUsers().find((a) => a.emp_id === emp_id) ? true : false;\r\n  /**retuns time of disconnected user if the user is new don't use the system before returns\r\n   * empty string\r\n   * @param {*} emp_id => employee id of the user\r\n   */\r\n  lastSeen = (emp_id) =>\r\n    this.findConnected(emp_id)\r\n      ? this.findConnected(emp_id).disconnected_time\r\n      : \"\";\r\n  /**return's array of messages of the current user */\r\n  myMessage = () =>\r\n    this.message.filter(\r\n      (m) => m.sender === this.getEmp_id() || m.reciever === this.getEmp_id()\r\n    );\r\n  /* return's array of employee contacted recently*/\r\n  contactedUsers = () => {\r\n    var u = [];\r\n    this.myMessage().map((m) => {\r\n      m.sender !== this.getEmp_id()\r\n        ? u.push(m.sender)\r\n        : m.reciever !== this.getEmp_id()\r\n          ? u.push(m.reciever)\r\n          : Donothing();\r\n    });\r\n    let contact = new Set(u);\r\n    return [...contact];\r\n  };\r\n  /**retun's array of contacted user emp_id that is searched using search string\r\n   * @param {*} index string - String to search\r\n   */\r\n  searchContacted = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    return this.contactedUsers().filter((c) =>\r\n      this.messageName(c).toString().toLowerCase().includes(index, 0)\r\n    );\r\n  };\r\n  /**return's array of messages of the current user and provided emp_id\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  chatRoom = (emp_id) =>\r\n    this.myMessage().filter(\r\n      (m) => m.sender === emp_id || m.reciever === emp_id\r\n    );\r\n  /**returns new message of the the current user and the provided id\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  newMessages = (emp_id) =>\r\n    this.chatRoom(emp_id).filter(\r\n      (m) => !m.seen && m.reciever === this.getEmp_id()\r\n    );\r\n  /**return's object of last chat contacted with the current user\r\n   * @param {*} emp_id => emp_id of the the user that contact the current user\r\n   */\r\n  last_message = (emp_id) =>\r\n    this.chatRoom(emp_id).length\r\n      ? this.chatRoom(emp_id)[0]\r\n      : { message: \"\", file_name: \"\", letter_id: \"\", created_date: \"\" };\r\n  /* return's number of all new messages recieved */\r\n  notifiaction = () => {\r\n    var i = 0;\r\n    this.contactedUsers().map((m) => {\r\n      i = i + this.newMessages(m).length;\r\n    });\r\n    return i;\r\n  };\r\n  /** return's an array of inbox letters that the user recieves*/\r\n  InboxLetters = () => {\r\n    //inbox messages with letter\r\n    let inbox = this.message.filter(\r\n      (m) => m.reciever === this.getEmp_id() && m.letter_id !== \"\"\r\n    );\r\n    return inbox.map((m) => this.find_letter(m.letter_id));\r\n  };\r\n  /**return's array of objects that included on the index search string\r\n   * for Inbox letters\r\n   * @param {*} Index-search string\r\n   */\r\n  SearchLetters = (Index) => {\r\n    let index = Index.toString().toLowerCase();\r\n    let id = this.InboxLetters().filter((l) =>\r\n      l.id.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let title = this.InboxLetters().filter((l) =>\r\n      l.title.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let type = this.InboxLetters().filter((l) =>\r\n      l.type.toString().toLowerCase().includes(index, 0)\r\n    );\r\n    let letters = removeDuplicates([...id, ...title, ...type], \"_id\");\r\n    return {\r\n      newLetters: letters.filter((m) =>\r\n        this.manager_info(m ? m._id : \"\")\r\n          ? !this.manager_info(m._id).seen\r\n          : false || this.particpant_info(m ? m._id : \"\")\r\n            ? !this.particpant_info(m._id).seen\r\n            : false\r\n      ),\r\n      seenLetters: letters.filter((m) =>\r\n        this.manager_info(m ? m._id : \"\")\r\n          ? this.manager_info(m._id).seen\r\n          : false || this.particpant_info(m ? m._id : \"\")\r\n            ? this.particpant_info(m._id).seen\r\n            : false\r\n      ),\r\n    };\r\n  };\r\n  newInboxLetters = () =>\r\n    this.InboxLetters().filter((m) =>\r\n      this.manager_info(m ? m._id : \"\")\r\n        ? !this.manager_info(m ? m._id : \"\").seen\r\n        : false || this.particpant_info(m ? m._id : \"\")\r\n          ? !this.particpant_info(m ? m._id : \"\").seen\r\n          : false\r\n    );\r\n  seenInboxLetters = () =>\r\n    this.InboxLetters().filter((m) =>\r\n      this.manager_info(m ? m._id : \"\")\r\n        ? this.manager_info(m ? m._id : \"\").seen\r\n        : false || this.particpant_info(m ? m._id : \"\")\r\n          ? this.particpant_info(m ? m._id : \"\").seen\r\n          : false\r\n    );\r\n  /**return's allowance letter of the user*/\r\n  allowanceLetter = () =>\r\n    this.InboxLetters().filter((a) => a.type === \"allowance\");\r\n}\r\n","import React from 'react'\r\nimport { DotLoading } from './Loading'\r\n\r\n   const DataLoading=()=> {\r\n    return (\r\n        <div className=\"col-lg-12\">\r\n            <div className=\"main-card mb-3 min-height card\">\r\n             <h3 className=\"text-center\">Loading...</h3> \r\n              <DotLoading className='mt-5'/>  \r\n                </div>    \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DataLoading\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\n  const ErrorLoading=()=> {\r\n    return (\r\n        <div className=\"col-lg-12 \">\r\n\r\n<div className=\"main-card mb-3 min-height card\">\r\n  <h3 className='mt-5 text-center text-danger'>\r\n    <FontAwesomeIcon icon={faWindowClose} className='fa-2x'/>\r\n    <br/>  \r\n  ...oops loading failed the server is down or not active\r\n  contact admin\r\n  </h3>  \r\n    </div>    \r\n</div>\r\n    )\r\n}\r\n\r\nexport default ErrorLoading\r\n","import { faEnvelopeOpen, faForward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext } from \"../contexts/contexts\";\r\n\r\nconst LetterTypes = () => {\r\n  const { values, setValues } = useContext(LetterContext);\r\n  const { type, step } = values;\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <div className=\"row card\">\r\n        <div className=\"col-lg-12 mb-2\">\r\n          <h2 className=\"text-center\">Please select letter type</h2>\r\n          <hr />\r\n        </div>\r\n        <div\r\n          className=\"col-lg-12 text-center my-2\"\r\n          onClick={() => setValues({ ...values, type: \"allowance\" })}\r\n        ></div>\r\n        <div\r\n          className=\"col-lg-12 text-center my-2\"\r\n          onClick={() => setValues({ ...values, type: \"normal\" })}\r\n        >\r\n          {type === \"normal\" ? (\r\n            <button className=\"btn btn-info\">\r\n              <h3>\r\n                <FontAwesomeIcon icon={faEnvelopeOpen} className=\"mx-2\" />\r\n                Normal letter\r\n              </h3>\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn\">\r\n              <h3>\r\n                <FontAwesomeIcon icon={faEnvelopeOpen} className=\"mx-2\" />\r\n                Normal letter\r\n              </h3>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-4\">\r\n          {type ? (\r\n            <button\r\n              className=\"btn btn-info float-right text-white\"\r\n              onClick={() =>\r\n                setValues({\r\n                  ...values,\r\n                  step:\r\n                    values.type === \"allowance\"\r\n                      ? 2\r\n                      : step <= 2\r\n                      ? 2\r\n                      : values.step,\r\n                  tab:\r\n                    values.type === \"allowance\"\r\n                      ? \"create\"\r\n                      : step <= 2\r\n                      ? \"create\"\r\n                      : step === 3\r\n                      ? \"approval\"\r\n                      : step === 4\r\n                      ? \"parcticpant\"\r\n                      : \"\",\r\n                })\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faForward} className=\"mx-2\" />\r\n              Next\r\n            </button>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LetterTypes);\r\n","import { faBackward, faBarcode, faCalendar, faCar, faDraftingCompass, faForward, faProjectDiagram, faTruck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { LetterContext } from '../contexts/contexts'\r\nimport { convertToRaw,EditorState,convertFromRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToMarkdown,{} from 'draftjs-to-markdown'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { checkDate, convertToEuropean } from '../../controllers/Date';\r\nimport { Donothing } from '../../controllers/saveProcess';\r\n const WriteLetter=()=> {\r\n   const {values,setValues}=useContext(LetterContext)\r\n   const {type,editorState,step}=values\r\n   const [state,setState]=useState({\r\n       error:false,\r\n       derror:false,\r\n       description:''\r\n   })\r\n   const text=useRef(null)\r\n   const date=useRef(null)\r\n   const onEditorStateChange=editorState=>{\r\nsetValues({...values,editorState,description:JSON.stringify(convertToRaw(editorState.getCurrentContent()))})\r\n       setState({...values,error:false,derror:false})\r\n    }\r\n \r\n //setValues({...values,editorState:JSON.stringify(convertToRaw(editorState.getCurrentContent()))})\r\n// const content=editorState?\r\n//             EditorState.createWithContent(convertFromRaw(JSON.parse(editorState))):\r\n//             EditorState.createEmpty() \r\n\r\nconst handleSubmit=e=>{\r\n   e.preventDefault()\r\n   let err=!editorState?true:false\r\n   if(err){\r\n      setState({...values,error:true})\r\n      try{\r\n        text.current.focus()\r\n      }\r\n      catch(err){\r\n        console.log(err)\r\n      }\r\n   }\r\n   else{\r\n     if(type==='allowance'){\r\n\r\n      try{\r\n  let initial=convertToEuropean(values.idate,values.imonth,values.iyear) \r\n  let Return=convertToEuropean(values.rdate,values.rmonth,values.ryear)  \r\n  if(!checkDate(initial,Return)){\r\n      setState({...state,derror:true})\r\n      date.current.focus()\r\n     } \r\n          else{\r\nsetValues({...values,step:step<=2?3:step, tab:step<=3?'approval':step===4?'parcticpant':''})\r\n          }\r\n        }\r\n          catch(err){\r\n           setState({...state,derror:true})\r\n        date.current.focus()\r\n          }\r\n     }\r\n     else{\r\nsetValues({...values,step:step<=2?3:step,tab:step<=3?'approval':step===4?'parcticpant':''})    \r\n     }\r\n}}\r\nreturn (\r\n    <form onSubmit={e=>handleSubmit(e)}>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n         <div className=\"col-lg-12 text-center\">\r\n    <div className=\"signup-form\">\r\n    <p className=\"font-weight-bold text-center\">Title</p>\r\n    <div className=\"form-group\">\r\n\t\t\t<div className=\"input-group input-container\">\r\n\t\t\t\t<span className=\"input-group-addon\">\r\n    <h3>T</h3>\r\n                    </span>\r\n    <input type=\"text\" className=\"input-field form-control\" \r\n        placeholder=\"Title\" required={true} value={values.title}\r\n        onChange={e=>setValues({...values,title:e.target.value})}\r\n        />\r\n            </div>\r\n        </div>  \r\n    </div>\r\n</div>\r\n<div className=\"col-lg-12\">\r\n<p className=\"font-weight-bold text-center\">Description</p>\r\n<Editor  toolbarClassName=\"toolbarClassName\" \r\neditorStyle={{marginLeft:100,width:'212mm',minHeight:450, border: \"1px solid\",borderColor:values.error?'red':'' }}\r\nwrapperClassName=\"wrapperClassName\"\r\n  editorClassName=\"editorClassName\"\r\n   onEditorStateChange={onEditorStateChange}\r\n   editorState={editorState}\r\n   ref={text}\r\n   />\r\n   {\r\n    state.error?\r\n    <p className=\"text-center text-danger font-weight-bold\">\r\n      Please enter description\r\n      </p>:\r\n      <p></p>\r\n   }\r\n   \r\n</div>\r\n<div>\r\n     \r\n      </div>\r\n         </div>\r\n         {\r\n        type==='allowance'?\r\n       <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n          <p className=\"font-weight-bold text-center\">Objective</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faDraftingCompass} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\" value={values.objective}\r\n placeholder=\"Objective\" onChange={e=>setValues({...values,objective:e.target.value})}\r\n required={true} value={values.objective}\r\n    />\r\n</div>\r\n<p className=\"font-weight-bold text-center\">Project name and code</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faBarcode} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n  value={values.project_name}\r\n placeholder=\"Project name and code\" onChange={e=>setValues({...values,project_name:e.target.value})} \r\n   />\r\n</div>\r\n<p className=\"font-weight-bold text-center\">program name</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faProjectDiagram} \r\n    className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\nvalue={values.program}\r\n placeholder=\"Program name\" onChange={e=>setValues({...values,program:e.target.value})} \r\n   />\r\n</div>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n\r\n<p className=\"font-weight-bold text-center\">Initial Place</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faTruck} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n placeholder=\"Initial place\" onChange={e=>setValues({...values,initial_place:e.target.value})} \r\n   values={values.initial_place} required={true}/>\r\n</div>\r\n<p className=\"font-weight-bold text-center\">Destination Place</p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCar} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"text\"\r\n placeholder=\"Destination place\" onChange={e=>setValues({...values,destination_place:e.target.value})} \r\n   value={values.destination_place} required={true}/>\r\n</div>\r\n<p className=\"font-weight-bold text-center\">\r\n     Initial Date\r\n     </p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCalendar} className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"dd\" min={1} max={30} value={values.idate}  onChange={e=>{\r\n     setValues({...values,idate:parseInt(e.target.value)\r\n})}} required={true} />\r\n  <select  className=\"input-field form-control my-auto\"\r\n      onChange={e=>setValues({...values,imonth:parseInt(e.target.value)\r\n        ,process:'',error:'',success:''})} value={values.imonth} required={true}>\r\n        <option value=\"\">mm</option>\r\n      <option value={1}>መስከረም</option>\r\n      <option value={2}>ጥቅምት</option>\r\n      <option value={3}>ህዳር</option>\r\n      <option value={4}>ታህሳስ</option>\r\n      <option value={5}>ጥር</option>\r\n      <option value={6}>የካቲት</option>\r\n      <option value={7}>መጋቢት</option>\r\n      <option value={8}>ሚያዝያ</option>\r\n      <option value={9}>ግንቦት</option>\r\n      <option value={10}>ሰኔ</option>\r\n      <option value={11}>ሐምሌ</option>\r\n      <option value={12}>ነሐሴ</option>\r\n      <option value={13}>ጳጉሜ</option>\r\n      </select> \r\n      <input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"YYYY\"  min={2013} onChange={e=>{\r\n     setValues({...values,iyear:parseInt(e.target.value)})}} required={true} \r\n     value={values.iyear}/>\r\n     <p className=\"my-auto font-weight-bold\">\r\n         E.C\r\n         </p>    \r\n </div> \r\n <p className=\"font-weight-bold text-center\">\r\n     Return Date\r\n     </p>\r\n <div className=\"input-container\">\r\n <FontAwesomeIcon icon={faCalendar} \r\n    className='text-info fa-2x mx-2 my-auto '/>\r\n<input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"dd\" min={1} max={30} value={values.rdate}  \r\n      onChange={e=>{\r\n  setValues({...values,rdate:parseInt(e.target.value)})}} \r\n     required={true} ref={date}/>\r\n  <select  className=\"input-field form-control my-auto\" value={values.rmonth}\r\n      onChange={e=>setValues({...values,rmonth:parseInt(e.target.value)\r\n        ,process:'',error:'',success:''})} required={true}>\r\n        <option value=\"\">mm</option>\r\n      <option value={1}>መስከረም</option>\r\n      <option value={2}>ጥቅምት</option>\r\n      <option value={3}>ህዳር</option>\r\n      <option value={4}>ታህሳስ</option>\r\n      <option value={5}>ጥር</option>\r\n      <option value={6}>የካቲት</option>\r\n      <option value={7}>መጋቢት</option>\r\n      <option value={8}>ሚያዝያ</option>\r\n      <option value={9}>ግንቦት</option>\r\n      <option value={10}>ሰኔ</option>\r\n      <option value={11}>ሐምሌ</option>\r\n      <option value={12}>ነሐሴ</option>\r\n      <option value={13}>ጳጉሜ</option>\r\n      </select> \r\n      <input className=\"input-field form-control my-auto\" type=\"number\"\r\n placeholder=\"YYYY\"  min={2013} onChange={e=>{\r\n     setValues({...values,ryear:parseInt(e.target.value),process:'',\r\n     error:'',success:''\r\n     })}} required={true} value={values.ryear}/>\r\n     <p className=\"my-auto font-weight-bold\">\r\n         E.C\r\n         </p>\r\n </div> \r\n              </div>\r\n\r\n           </div>:\r\n           <p></p>      \r\n         } \r\n         <div className=\"row\">\r\n     <div className=\"col-lg-12\">\r\n   {\r\n     state.derror?\r\n     <p className=\"text-center text-danger font-weight-bold\">\r\n       Invalid date entered please check initial day and return day\r\n       </p>:\r\n     <p></p>\r\n   }    \r\n       </div>      \r\n             <div className=\"col-lg-6\">\r\n           <div className=\"btn-danger btn\" onClick={()=>setValues({...values,tab:'type'})}>\r\n          <FontAwesomeIcon icon={faBackward}  className='text-white'/>\r\n          Back    \r\n               </div>      \r\n             </div>\r\n             <div className=\"col-lg-6\">\r\n        <button type=\"submit\" className=\"btn btn-info mt-3 float-right\">\r\n            <FontAwesomeIcon icon={faForward} className='text-white' />\r\n            Next\r\n            </button>        \r\n             </div>\r\n         </div>  \r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WriteLetter\r\n","import {\r\n  faBackward,\r\n  faForward,\r\n  faLevelUpAlt,\r\n  faObjectGroup,\r\n  faPlus,\r\n  faTrash,\r\n  faUser,\r\n  faUserAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, usevalues, useEffect } from \"react\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { UsersClass } from \"../../controllers/Users\";\r\nimport { LetterContext, StoreContext } from \"../contexts/contexts\";\r\n\r\nconst Approval = () => {\r\n  const { values, setValues, emp_id } = useContext(LetterContext);\r\n  const { employees, users, department } = useContext(StoreContext);\r\n  const { state: Employees, loading: empLoading, error: empError } = employees;\r\n  const { state: Users, loading: usersLoading, error: usersError } = users;\r\n  const user = new UsersClass(Users, Employees, department.state);\r\n  const { type } = values;\r\n\r\n  /**retun's a number of maximum step of approval*/\r\n  const approvalMax = () => {\r\n    let i = 0;\r\n    values.approval_manager.map((e) =>\r\n      e.step > i ? (i = e.step) : Donothing()\r\n    );\r\n    values.f_director.map((e) => (e.step > i ? (i = e.step) : Donothing()));\r\n    return i;\r\n  };\r\n  /** set the values value of approval managaer if it is not finance director if finance director\r\n   * set f_director\r\n   * @param {*} id=>String of emp_id\r\n   * @param {*} type => string manager if the employee is different from finance director and fd if the user is finance director\r\n   *\r\n   */\r\n  const addManager = (id) => {\r\n    values.approval_manager.find((e) => e.emp_id === id)\r\n      ? Donothing()\r\n      : setValues((s) => ({\r\n          ...s,\r\n          approval_manager: [\r\n            ...s.approval_manager,\r\n            { emp_id: id, step: approvalMax() + 1 },\r\n          ],\r\n        }));\r\n\r\n    // managerSort()\r\n    //  FD_Sort()\r\n  };\r\n  /** set level for approval for approval manager\r\n   * @param {*} emp_id String of emp_id\r\n   * @param {*} step number step to set\r\n   */\r\n  const MsetLevel = (emp_id, step) => {\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: step\r\n        ? [\r\n            ...s.approval_manager.filter((e) => e.emp_id !== emp_id),\r\n            { emp_id, step },\r\n          ]\r\n        : s.approval_manager,\r\n    }));\r\n  };\r\n\r\n  const removeManager = (emp_id) =>\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: s.approval_manager.filter((e) => e.emp_id !== emp_id),\r\n    }));\r\n\r\n  const handleSearch = (index) =>\r\n    setValues({\r\n      ...values,\r\n      employees: index !== \"\" ? user.searchEmployee(index) : [],\r\n    });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Search employee name,department,userole\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"col-lg-12 mt-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  Select\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {values.employees.length ? (\r\n                values.employees.map((e) => {\r\n                  return (\r\n                    <tr key={e._id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.department)}</td>\r\n                      <td>{e.type}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => addManager(e.emp_id)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                          select\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={5}\r\n                    className=\"text-center text-danger font-weight-bold\"\r\n                  >\r\n                    No Employees found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <h3 className=\"text-center\">Approval Managers</h3>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faLevelUpAlt} className=\"mx-2\" />\r\n                  step to approve\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  set approval step\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faTrash} className=\"mx-2\" />\r\n                  Remove\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {!values.approval_manager.length && !values.f_director.length ? (\r\n                <tr>\r\n                  <td colSpan={6} className=\"text-center font-weight-bold\">\r\n                    No Employess added for approval\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                values.approval_manager.map((e) => {\r\n                  return (\r\n                    <tr key={e.emp_id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.emp_id)}</td>\r\n                      <td>{user.UserRole(e.emp_id)}</td>\r\n                      <td>{e.step}</td>\r\n                      <td className=\"text-center input-container\">\r\n                        <p className=\"mx-2\">set Level</p>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"input-field\"\r\n                          onChange={(ev) =>\r\n                            MsetLevel(e.emp_id, parseInt(ev.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                      <td\r\n                        className=\"text-center\"\r\n                        onClick={() => removeManager(e.emp_id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} className=\"fa-1x\" />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-6 mt-3\">\r\n          <div\r\n            className=\"btn-danger btn\"\r\n            onClick={() => setValues({ ...values, tab: \"create\" })}\r\n          >\r\n            <FontAwesomeIcon icon={faBackward} className=\"text-white\" />\r\n            Back\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 mt-3\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-info float-right\"\r\n            onClick={() =>\r\n              setValues({ ...values, tab: \"participant\", step: 4 })\r\n            }\r\n          >\r\n            <FontAwesomeIcon icon={faForward} className=\"text-white\" />\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Approval;\r\n","export const emitter=socket=>{\r\n    socket.emit('letters','')\r\n    socket.emit('chat','')\r\n}","import {\r\n  faInfo,\r\n  faObjectGroup,\r\n  faPlus,\r\n  faTrash,\r\n  faUser,\r\n  faUserAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { convertToEuropean } from \"../../controllers/Date\";\r\nimport { LettersClass } from \"../../controllers/Letters\";\r\nimport {\r\n  Donothing,\r\n  randomId,\r\n  saveProcess,\r\n} from \"../../controllers/saveProcess\";\r\nimport { addMessages } from \"../../store/Actions/messageActions\";\r\nimport { decrptObject, encryptObject } from \"../auth/encrypt\";\r\nimport { host } from \"../config/config\";\r\nimport { LetterContext, StoreContext } from \"../contexts/contexts\";\r\nimport { DotLoading } from \"../layout/Loading\";\r\nimport { userInfo } from \"../users/userInfo\";\r\nimport { emitter } from \"../fetchers/Emmitters\";\r\nconst AddParticipants = () => {\r\n  const { emp_id, setValues, values, id: _id } = useContext(LetterContext);\r\n  const { approval_manager, f_director } = values;\r\n  const managers = [\r\n    ...(approval_manager ? approval_manager : []),\r\n    ...(f_director ? f_director : []),\r\n  ];\r\n  const { employees, users, socket, letters, department } =\r\n    useContext(StoreContext);\r\n  const { state: Employees } = employees;\r\n  const { state: Users } = users;\r\n  const user = new LettersClass(\r\n    letters.state,\r\n    Users,\r\n    Employees,\r\n    department.state\r\n  );\r\n  const letter = user.find_letter(_id);\r\n  const rid = randomId() + socket ? socket.id : \"\";\r\n  const [state, setState] = useState({ i: 0, ...saveProcess(\"default\") });\r\n\r\n  useEffect(() => {\r\n    //if the user is not on approval manager list add to partcipants list *\r\n    values.usage === \"create\" && emp_id\r\n      ? managers.find((m) => m.emp_id === emp_id)\r\n        ? Donothing()\r\n        : setValues((s) => ({\r\n            ...s,\r\n            participants: [...s.participants, { emp_id }],\r\n          }))\r\n      : Donothing();\r\n  }, []);\r\n\r\n  /** search\r\n   * @param {*} index-string value to search from\r\n   */\r\n  const handleSearch = (index) =>\r\n    setValues({\r\n      ...values,\r\n      employees: index !== \"\" ? user.searchEmployee(index) : [],\r\n    });\r\n  /**add the employee id participants array list\r\n   * @param {*} emp_id-string of employee id\r\n   */\r\n  const addParticipant = (emp_id) =>\r\n    values.participants.find((p) => p.emp_id === emp_id)\r\n      ? Donothing()\r\n      : setValues((s) => ({\r\n          ...s,\r\n          participants: [...s.participants, { emp_id }],\r\n        }));\r\n  /**removes the employee from participants array\r\n   * @param {*} emp_id-string of employee id\r\n   */\r\n  const removeParticpant = (emp_id) =>\r\n    setValues((s) => ({\r\n      ...s,\r\n      participants: s.participants.filter((p) => p.emp_id !== emp_id),\r\n    }));\r\n  /**complete all process and send to the server */\r\n  const saveLetter = async () => {\r\n    try {\r\n      const {\r\n        type,\r\n        title,\r\n        objective,\r\n        initial_place,\r\n        destination_place,\r\n        idate,\r\n        imonth,\r\n        iyear,\r\n        rdate,\r\n        rmonth,\r\n        ryear,\r\n        participants,\r\n        description,\r\n        project_name,\r\n        program,\r\n      } = values;\r\n\r\n      let initial_date =\r\n        type === \"allowance\" ? convertToEuropean(idate, imonth, iyear) : \"\";\r\n      let return_date =\r\n        type === \"allowance\" ? convertToEuropean(rdate, rmonth, ryear) : \"\";\r\n\r\n      if (values.usage === \"create\") {\r\n        /**telling user is saving process */\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\"initial\", \"saving please wait...\"),\r\n        }));\r\n        /**sending to the server using socket connection */\r\n        socket.emit(\"create_letter\", {\r\n          creater: user.getEmp_id(),\r\n          type,\r\n          title,\r\n          description,\r\n          objective,\r\n          initial_place,\r\n          project_name,\r\n          program,\r\n          destination_place,\r\n          initial_date,\r\n          return_date,\r\n          participants,\r\n          approval_manager: managers,\r\n          rid,\r\n        });\r\n\r\n        /**retrieving the response */\r\n        socket.on(\"create_letter\", (data) => {\r\n          if (data.rid === rid) {\r\n            createMessage(data);\r\n          } else {\r\n            setState((s) => ({\r\n              ...s,\r\n              ...saveProcess(\"error\", \"Saving error please try again letter\"),\r\n            }));\r\n          }\r\n        });\r\n      } else if (values.usage === \"edit\") {\r\n        /**edit process */\r\n        var i = 0;\r\n        /**telling user is saving process */\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\"initial\", \"updating please wait...\"),\r\n        }));\r\n        /**sending to the server using socket connection */\r\n        socket.emit(\"update_letter\", {\r\n          _id,\r\n          ...letter,\r\n          type,\r\n          title,\r\n          description,\r\n          objective,\r\n          initial_place,\r\n          project_name,\r\n          program,\r\n          destination_place,\r\n          initial_date,\r\n          return_date,\r\n          participants,\r\n          approval_manager: managers,\r\n          rid,\r\n        });\r\n        const req = await axios.put(host + \"/delMessages\", {\r\n          data: encryptObject({ _id, ...userInfo() }),\r\n        });\r\n        const res = decrptObject(req.data);\r\n        if (res.deleted) {\r\n          createMessage({ _doc: { title, _id } });\r\n        }\r\n      } else {\r\n        setState((s) => ({\r\n          ...s,\r\n          ...saveProcess(\r\n            \"error\",\r\n            \"unable to update message of the letter please try again letter\"\r\n          ),\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setState((s) => ({\r\n        ...s,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"unable to update letter please try again letter\"\r\n        ),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const createMessage = async (data) => {\r\n    const L = await axios.get(host + \"/letters\", {\r\n      headers: { data: encryptObject(userInfo()) },\r\n    });\r\n    const l = decrptObject(L.data);\r\n    console.log(l);\r\n    /**after saving create message that says about the letter */\r\n    let Letter = new LettersClass(l, Users, Employees, department.state);\r\n\r\n    const Data = Letter.first_manager(data._doc._id).map((m) => {\r\n      return {\r\n        message: data._doc.title,\r\n        letter_id: data._doc._id,\r\n        sender: user.getEmp_id(),\r\n        reciever: m.emp_id,\r\n      };\r\n    });\r\n\r\n    /*if their is no approval manager give it to particiapants */\r\n    const part = Letter.first_manager(data._doc._id).length\r\n      ? []\r\n      : Letter.participants(data._doc._id).map((p) => {\r\n          return {\r\n            message: data._doc.title,\r\n            letter_id: data._doc._id,\r\n            sender: user.getEmp_id(),\r\n            reciever: p.emp_id,\r\n          };\r\n        });\r\n\r\n    let req = await axios.post(host + \"/messages\", {\r\n      data: encryptObject({ messages: [...part, ...Data], ...userInfo() }),\r\n    });\r\n    let res = decrptObject(req.data);\r\n    console.log(res);\r\n    if (res.created) {\r\n      /**saved sucessfully*/\r\n      setState((s) => ({\r\n        ...s,\r\n        ...(values.usage === \"create\"\r\n          ? saveProcess(\"success\", \"saving letter success\")\r\n          : saveProcess(\"success\", \"updating letter success\")),\r\n      }));\r\n    } else {\r\n      setState((s) => ({\r\n        ...s,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"Error in creating message please try again later...\"\r\n        ),\r\n      }));\r\n    }\r\n    emitter(socket);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <h4 className=\"text-center my-3\">Add Recievers</h4>\r\n          <p className=\"text-small font-weight-bold font-italic text-center\">\r\n            <FontAwesomeIcon icon={faInfo} className=\"text-info mx-2\" />\r\n            what are Recievers ?- are employees which don't need to approve\r\n            ,simply they are the employees that are include in the letter\r\n          </p>\r\n        </div>\r\n        <div className=\"col-lg-4\"></div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Search employee name,department,userole\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"col-lg-12 mt-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                  Select\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {values.employees.length ? (\r\n                values.employees.map((e) => {\r\n                  return (\r\n                    <tr key={e._id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.dpName(e.department)}</td>\r\n                      <td>{e.position}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => addParticipant(e.emp_id)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faPlus} className=\"mx-2\" />\r\n                          Add\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={5}\r\n                    className=\"text-center text-danger font-weight-bold\"\r\n                  >\r\n                    No Employees found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12 my-2\">\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th># Employee id</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                  Employee name\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faObjectGroup} className=\"mx-2\" />\r\n                  Department\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\"mx-2\" />\r\n                  User role\r\n                </th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faTrash} className=\"mx-2\" />\r\n                  Remove\r\n                </th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {!values.participants.length ? (\r\n                <tr>\r\n                  <td colSpan={5} className=\"text-center font-weight-bold\">\r\n                    No particpants added\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                values.participants.map((e) => {\r\n                  return (\r\n                    <tr key={e.emp_id}>\r\n                      <td className=\"text-center font-weight-bold\">\r\n                        {e.emp_id}\r\n                      </td>\r\n                      <td>{user.Name(e.emp_id)}</td>\r\n                      <td>{user.Department(e.emp_id)}</td>\r\n                      <td>{user.UserRole(e.emp_id)}</td>\r\n\r\n                      <td\r\n                        className=\"text-center\"\r\n                        onClick={() => removeParticpant(e.emp_id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} className=\"fa-1x\" />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-danger text-center font-weight-bold\">\r\n              {state.error}\r\n            </p>\r\n            <p className=\"text-success text-center font-weight-bold\">\r\n              {state.success}\r\n            </p>\r\n            <p className=\"text-info text-center font-weight-bold\">\r\n              {state.process}\r\n            </p>\r\n            {state.loading ? <DotLoading /> : <p></p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 my-2\"></div>\r\n        <div className=\"col-lg-6 my-2\">\r\n          <button\r\n            disabled={state.disable}\r\n            className=\"btn float-right btn-info\"\r\n            onClick={() => saveLetter()}\r\n          >\r\n            save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddParticipants;\r\n","import {\r\n  faEdit,\r\n  faLayerGroup,\r\n  faUserCheck,\r\n  faUserEdit,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext } from \"../contexts/contexts\";\r\nimport { Progress } from \"reactstrap\";\r\nimport LetterTypes from \"./LetterTypes\";\r\nimport WriteLetter from \"./WriteLetter\";\r\nimport Approval from \"./Approval\";\r\nimport AddParticipants from \"./AddParticipants\";\r\nconst CreateLetters = ({ match, setSize }) => {\r\n  const emp_id = match.params.id;\r\n  const [values, setValues] = useState({\r\n    step: 1,\r\n    type: \"\",\r\n    tab: \"type\",\r\n    employees: [],\r\n    approval_manager: [],\r\n    f_director: [],\r\n    participants: [],\r\n    usage: \"create\",\r\n  });\r\n  useEffect(() => {\r\n    setSize(\"xl\");\r\n  }, []);\r\n  /**return's a string of 4 types\r\n   * @param {*} tab clicked tab\r\n   */\r\n  const setTab = (tab) => {\r\n    if (tab === \"type\") {\r\n      return \"type\";\r\n    } else if (tab === \"create\") {\r\n      return values.step >= 2 ? \"create\" : \"type\";\r\n    } else if (tab === \"approval\") {\r\n      return values.step >= 3\r\n        ? \"approval\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : \"\";\r\n    } else if (tab === \"participant\") {\r\n      return values.step >= 4\r\n        ? \"participant\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : values.step == 3\r\n        ? \"approval\"\r\n        : \"\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <LetterContext.Provider value={{ setValues, values, setSize, emp_id }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"type\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon icon={faLayerGroup} className=\"text-info\" />\r\n              select type\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"create\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faEdit}\r\n                className={values.step >= 2 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Write aletter\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"approval\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUserCheck}\r\n                className={values.step >= 3 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Select approval stages\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"participant\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className={values.step >= 4 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Add Recievers\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12 my-3\">\r\n          <h4 className=\"text-center\">\r\n            <Progress animated multi>\r\n              <Progress animated bar value={25}>\r\n                select type\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"warning\"\r\n                value={values.step >= 2 ? 25 : 0}\r\n              >\r\n                Write aletter\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"info\"\r\n                value={values.step >= 3 ? 25 : 0}\r\n              >\r\n                Select approval stages\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"success\"\r\n                value={values.step >= 4 ? 25 : 0}\r\n              >\r\n                Add participants\r\n              </Progress>\r\n            </Progress>\r\n          </h4>\r\n        </div>\r\n        {values.tab === \"type\" ? (\r\n          <LetterTypes />\r\n        ) : values.tab === \"create\" ? (\r\n          <WriteLetter />\r\n        ) : values.tab === \"approval\" ? (\r\n          <Approval />\r\n        ) : values.tab === \"participant\" ? (\r\n          <AddParticipants />\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </LetterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateLetters);\r\n","import { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport React,{useContext, useState} from 'react'\r\nimport { saveProcess } from '../../controllers/saveProcess'\r\nimport { decrptObject, encryptObject } from '../auth/encrypt'\r\nimport { host } from '../config/config'\r\nimport { StoreContext } from '../contexts/contexts'\r\nimport { DotLoading } from '../layout/Loading'\r\nimport { userInfo } from '../users/userInfo'\r\n\r\nconst DeleteLetter=({_id,close})=> {\r\n    const [state,setState]=useState({\r\n        deleted:false,\r\n        ...saveProcess('default')\r\n    })\r\n    const {socket}=useContext(StoreContext)\r\n const Delete=async ()=>{\r\n  try{\r\nsetState({...state,...saveProcess('initial','Deleting...')})\r\n    const req=await axios.put(host+'/letters',\r\n    {data:encryptObject({_id,...userInfo()})}) \r\n  const res=decrptObject(req.data)\r\n  if(res.deleted){\r\n   const del=await axios.put(host+'/delMessages',\r\n   {data:encryptObject({_id,...userInfo()})})\r\n   const rdel=decrptObject(del.data)\r\nif(rdel.deleted){\r\n    setState(s=>({...s,\r\n        ...saveProcess('success','Deleted successfully'),\r\n        deleted:true\r\n    }))\r\n    \r\n}\r\nelse{\r\n    setState(s=>({...s,...saveProcess('error','unable to delete messages of the letter please contact admin')}))\r\n}\r\n      \r\n   \r\n  }\r\n  else{\r\n    setState(s=>({...s,...saveProcess('error','unable to delete letter please try again letter')}))   \r\n  } \r\n  }\r\n  catch(err){\r\n    setState(s=>({...s,...saveProcess('error','unable to letter internal server error')}))\r\n  }\r\n\r\n}   \r\n    return (\r\n       <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    \r\n                        {state.deleted?\r\n                            <h5 className=\"text-center text-success\">\r\n    <FontAwesomeIcon icon={faCheck} /> Deleted\r\n    </h5>:\r\n    <h5 className=\"text-center text-info\">\r\n        {state.progress}\r\n        </h5> \r\n                        }\r\n                   <p className=\"text-center\">\r\n    { state.loading?<DotLoading/>:<p></p>   }  \r\n                   </p>\r\n                </div>\r\n            </div>\r\n        <div className=\"row float-right\">\r\n       {\r\n           //if deleted populate with new data else close with out populating\r\n           state.deleted?\r\n        <button className=\"btn btn-info float-right mx-2\"\r\n         disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faWindowClose} className='mx-2 fx-2'/>\r\n        Close\r\n        </button>:\r\n        <button className=\"btn btn-info float-right\"\r\n         onClick={()=>close()} disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faWindowClose} className='mx-2 fx-2'/>\r\n        Cancel\r\n        </button>\r\n       }     \r\n        \r\n       {\r\n           !state.deleted?\r\n        <button className=\"btn btn-primary float-right mx-2\" onClick={()=>Delete()}\r\n             disabled={state.disable}>\r\n        <FontAwesomeIcon icon={faCheck} className='mx-2 fx-2'/>\r\n        Yes\r\n        </button>:\r\n        <p></p> \r\n       } \r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteLetter\r\n","import {\r\n  faEdit,\r\n  faLayerGroup,\r\n  faUserCheck,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LetterContext, StoreContext } from \"../../contexts/contexts\";\r\nimport { LettersClass } from \"../../../controllers/Letters\";\r\nimport { Progress } from \"reactstrap\";\r\nimport { toEthiopianDate } from \"../../../controllers/Date\";\r\nimport Approval from \"../Approval\";\r\nimport LetterTypes from \"../LetterTypes\";\r\nimport WriteLetter from \"../WriteLetter\";\r\nimport AddParticipants from \"../AddParticipants\";\r\nimport { Donothing } from \"../../../controllers/saveProcess\";\r\n\r\nconst EditLetter = ({ match, l_id: id }) => {\r\n  const emp_id = match.params.id;\r\n\r\n  const { letters, users, employees } = useContext(StoreContext);\r\n  const Letter = new LettersClass(letters.state, users.state, employees.state);\r\n  const letter = Letter.find_letter(id);\r\n  const [values, setValues] = useState({\r\n    step: 1,\r\n    type: \"\",\r\n    tab: \"type\",\r\n    employees: [],\r\n    approval_manager: [],\r\n    f_director: [],\r\n    participants: [],\r\n    usage: \"edit\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let apm = Letter.approval_managers(id).filter(\r\n      (e) => Letter.UserRole(e.emp_id) !== \"f_director\"\r\n    );\r\n    let fdirector = Letter.approval_managers(id).filter(\r\n      (e) => Letter.UserRole(e.emp_id) === \"f_director\"\r\n    );\r\n    setValues((s) => ({\r\n      ...s,\r\n      approval_manager: apm.map((m) => {\r\n        return { emp_id: m.emp_id, step: m.step };\r\n      }),\r\n      f_director: fdirector.map((fd) => {\r\n        return { emp_id: fd.emp_id, step: fd.step };\r\n      }),\r\n      participants: Letter.participants(id).map((p) => {\r\n        return p ? { emp_id: p.emp_id } : Donothing();\r\n      }),\r\n      type: letter.type,\r\n      editorState: Letter.editorState(id),\r\n      description: JSON.stringify(Letter.description(id)),\r\n      title: letter.title,\r\n      /**for allowance letter type */\r\n      objective: letter.objective,\r\n      project_name: letter.project_name,\r\n      program: letter.program,\r\n      initial_place: letter.initial_place,\r\n      destination_place: letter.destination_place,\r\n      idate:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).date\r\n          : \"\",\r\n      imonth:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).month\r\n          : \"\",\r\n      iyear:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.initial_date).year\r\n          : \"\",\r\n      rdate:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).date\r\n          : \"\",\r\n      rmonth:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).month\r\n          : \"\",\r\n      ryear:\r\n        letter.type === \"allowance\"\r\n          ? toEthiopianDate(letter.return_date).year\r\n          : \"\",\r\n    }));\r\n  }, []);\r\n\r\n  const setTab = (tab) => {\r\n    if (tab === \"type\") {\r\n      return \"type\";\r\n    } else if (tab === \"create\") {\r\n      return values.step >= 2 ? \"create\" : \"type\";\r\n    } else if (tab === \"approval\") {\r\n      return values.step >= 3\r\n        ? \"approval\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : \"\";\r\n    } else if (tab === \"participant\") {\r\n      return values.step >= 4\r\n        ? \"participant\"\r\n        : values.step === 1\r\n        ? \"type\"\r\n        : values.step === 2\r\n        ? \"create\"\r\n        : values.step == 3\r\n        ? \"approval\"\r\n        : \"\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <LetterContext.Provider value={{ setValues, values, id, letter }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"type\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon icon={faLayerGroup} className=\"text-info\" />\r\n              select type\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"create\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faEdit}\r\n                className={values.step >= 2 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Write aletter\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"approval\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUserCheck}\r\n                className={values.step >= 3 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Select approval stages\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className=\"col-lg-3\"\r\n            onClick={() => setValues({ ...values, tab: setTab(\"participant\") })}\r\n          >\r\n            <h4 className=\"text-center\">\r\n              <FontAwesomeIcon\r\n                icon={faUsers}\r\n                className={values.step >= 4 ? \"text-info mx-2\" : \"\"}\r\n              />\r\n              Add Recievers\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12 my-3\">\r\n          <h4 className=\"text-center\">\r\n            <Progress animated multi>\r\n              <Progress animated bar value={25}>\r\n                select type\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"warning\"\r\n                value={values.step >= 2 ? 25 : 0}\r\n              >\r\n                Write aletter\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"info\"\r\n                value={values.step >= 3 ? 25 : 0}\r\n              >\r\n                Select approval stages\r\n              </Progress>\r\n              <Progress\r\n                animated\r\n                bar\r\n                color=\"success\"\r\n                value={values.step >= 4 ? 25 : 0}\r\n              >\r\n                Add participants\r\n              </Progress>\r\n            </Progress>\r\n          </h4>\r\n        </div>\r\n        {values.tab === \"type\" ? (\r\n          <LetterTypes />\r\n        ) : values.tab === \"create\" ? (\r\n          <WriteLetter />\r\n        ) : values.tab === \"approval\" ? (\r\n          <Approval />\r\n        ) : values.tab === \"participant\" ? (\r\n          <AddParticipants />\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </LetterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditLetter);\r\n","import {\r\n  faChartLine,\r\n  faCheckCircle,\r\n  faEye,\r\n  faUser,\r\n  faUserCheck,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext } from \"react\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\n\r\nconst LetterProgress = ({ l_id: id }) => {\r\n  const { socket, messages, department, employees, users, letters } =\r\n    useContext(StoreContext);\r\n\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n\r\n  const tprogress = message.totallProgress(id);\r\n  const color = message\r\n    .approval_managers(id)\r\n    .find((ap) => ap.status === \"unApproved\")\r\n    ? \"red\"\r\n    : \"info\";\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 my-2\">\r\n          {message.approval_managers(id).length ? (\r\n            <h4 className=\"text-center\">Approval managers</h4>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          {message.approval_managers(id).length ? (\r\n            <MDBTable striped hover>\r\n              <MDBTableHead>\r\n                <tr>\r\n                  <th>#Employee id</th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                    Employee name\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                    Approval stage\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUserCheck} className=\"mx-2\" />\r\n                    Seen\r\n                  </th>\r\n                  <th className=\"text-center\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mx-2\" />\r\n                    Approval status\r\n                  </th>\r\n                </tr>\r\n              </MDBTableHead>\r\n              <MDBTableBody>\r\n                {message.approval_managers(id).map((m) => {\r\n                  return (\r\n                    <tr key={m._id}>\r\n                      <td>{m.emp_id}</td>\r\n                      <td>{message.Name(m.emp_id)}</td>\r\n                      <td>{m.step}</td>\r\n                      <td>{m.seen ? \"Seen\" : \"not Seen\"}</td>\r\n                      <td>\r\n                        {m.status === \"Approved\" ? (\r\n                          <p className=\"text-center text-success\">\r\n                            <FontAwesomeIcon\r\n                              icon={faCheckCircle}\r\n                              className=\"fa-2x mx-2 text-success\"\r\n                            />\r\n                            Approved\r\n                          </p>\r\n                        ) : m.status === \"unApproved\" ? (\r\n                          <p className=\"text-center\">\r\n                            <FontAwesomeIcon\r\n                              icon={faWindowClose}\r\n                              className=\"fa-2x mx-2 text-danger\"\r\n                            />\r\n                            unApproved\r\n                          </p>\r\n                        ) : m.status === \"waiting\" && m.seen ? (\r\n                          <p className=\"text-center\">\r\n                            <FontAwesomeIcon\r\n                              icon={faEye}\r\n                              className=\"fa-2x mx-2 text-info\"\r\n                            />\r\n                            Reviewing\r\n                          </p>\r\n                        ) : m.status === \"waiting\" ? (\r\n                          <p className=\"text-center font-weight-bold\">\r\n                            waiting\r\n                          </p>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </MDBTableBody>\r\n            </MDBTable>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        <div className=\"col-lg-12 my-2\">\r\n          {message.participants(id).length ? (\r\n            <h4 className=\"text-center\">participants</h4>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          {message.participants(id).length ? (\r\n            <MDBTable striped hover>\r\n              <MDBTableHead>\r\n                <tr>\r\n                  <th className=\"text-center\"># Employee id</th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUser} className=\"mx-2\" />\r\n                    Employee name\r\n                  </th>\r\n                  <th>\r\n                    <FontAwesomeIcon icon={faUserCheck} className=\"mx-2\" />\r\n                    Seen\r\n                  </th>\r\n                </tr>\r\n              </MDBTableHead>\r\n              <MDBTableBody>\r\n                {message.participants(id).map((p) => {\r\n                  return (\r\n                    <tr key={p._id}>\r\n                      <td className=\"text-center\">{p.emp_id}</td>\r\n                      <td>{message.Name(p.emp_id)}</td>\r\n                      <td>{p.seen ? \"Seen\" : \"not Seen\"}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </MDBTableBody>\r\n            </MDBTable>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        {message.totallProgress(id) ? (\r\n          <div className=\"col-lg-12\">\r\n            <div\r\n              className={\r\n                \"mb-3 widget-chart widget-chart2 text-left card card-shadow-\" +\r\n                color\r\n              }\r\n            >\r\n              <div className=\"widget-content\">\r\n                <div className=\"widget-content-outer\">\r\n                  <div className=\"widget-content-wrapper\">\r\n                    <div className=\"widget-content-left pr-2 fsize-1\">\r\n                      <div\r\n                        className={\"widget-numbers mt-0 fsize-3 text-\" + color}\r\n                      >\r\n                        {message.totallProgress(id)}%\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"widget-content-right w-100\">\r\n                      <div className=\"progress-bar-xs progress\">\r\n                        <div\r\n                          className={\"progress-bar bg-\" + color}\r\n                          role=\"progressbar\"\r\n                          aria-valuenow={message.totallProgress(id)}\r\n                          aria-valuemin={0}\r\n                          aria-valuemax={100}\r\n                          style={{ width: message.totallProgress(id) + \"%\" }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"widget-content-left fsize-1\">\r\n                    <div className=\"text-muted opacity-6\">\r\n                      Approval Totall progress made\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        {message.unApproved(id).length ? (\r\n          <div className=\"col-lg-12\">\r\n            <h4 className=\"text-center font-weight-bold text-danger\">\r\n              The following managers does not approve this letter because of\r\n            </h4>\r\n            {message.unApproved(id).map((m) => {\r\n              return (\r\n                <p className=\"text-danger font-italic font-weight-bold text-center\">\r\n                  {message.Name(m.emp_id)}-\r\n                  {message.manager_info(id, m.emp_id)\r\n                    ? message.manager_info(id, m.emp_id).comment\r\n                    : \"\"}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterProgress;\r\n","import {\r\n  faCheck,\r\n  faComment,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { getDate } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { saveProcess } from \"../../controllers/saveProcess\";\r\nimport { loadLetters } from \"../../store/Actions/letterActions\";\r\nimport { encryptObject, decrptObject } from \"../auth/encrypt\";\r\nimport { host } from \"../config/config\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport { emitter } from \"../fetchers/Emmitters\";\r\nimport { DotLoading } from \"../layout/Loading\";\r\nimport { userInfo } from \"../users/userInfo\";\r\n\r\nconst TakeActions = ({ l_id: id }) => {\r\n  const [state, setState] = useState({\r\n    approved: \"\",\r\n    unApproved: false,\r\n    comment: \"\",\r\n    check: { Approved: false, unApproved: false },\r\n    ...saveProcess(\"default\"),\r\n  });\r\n  const {\r\n    socket,\r\n    letters,\r\n    employees,\r\n    messages,\r\n    users,\r\n    department\r\n  } = useContext(StoreContext);\r\n  const Mess = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letter = Mess.find_letter(id);\r\n  const emp_id = Mess.getEmp_id();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setState({\r\n        ...state,\r\n        ...saveProcess(\"initial\", \"Taking decision please wait ...\"),\r\n      });\r\n      const date = await getDate();\r\n      const letter = {\r\n        ...Letter,\r\n        approval_manager: [\r\n          ...Mess.approval_managers(id).filter((m) => m.emp_id !== emp_id),\r\n          {\r\n            ...Mess.manager_info(id),\r\n            status: state.approved,\r\n            comment: state.comment,\r\n            approved_date: date,\r\n          },\r\n        ],\r\n      };\r\n      //update the letter\r\n      const req = await axios.put(host + \"/letter\", {\r\n        data: encryptObject({ ...letter, ...userInfo() }),\r\n      });\r\n      const res = decrptObject(req.data);\r\n      if (res.updated) {\r\n        let proceed = Mess.proceedStage(id); //checks wheter to proceed this stage\r\n        if (proceed) {\r\n          //procedd to the next stage\r\n          let nextManager = Mess.nextEmployee(id); //select next manager\r\n          let next = nextManager.length ? true : false; //check approval manager are there\r\n          if (next) {\r\n            let Data = nextManager.map((m) => {\r\n              return {\r\n                message: Letter.title,\r\n                letter_id: id,\r\n                file_name: \"\",\r\n                sender: Letter.creater,\r\n                reciever: m.emp_id,\r\n              };\r\n            }); //send message to the next employee\r\n\r\n            let Req = await axios.post(host + \"/messages\", {\r\n              data: encryptObject({\r\n                messages: [\r\n                  ...Data,\r\n                  {\r\n                    message:\r\n                      state.approved === \"Approved\"\r\n                        ? \"System Notification \" +\r\n                        Mess.Name(emp_id) +\r\n                        \" has approved your letter \" +\r\n                        Letter.id\r\n                        : state.approved === \"unApproved\"\r\n                          ? \"System notification \" +\r\n                          Mess.Name(emp_id) +\r\n                          \" un approved your letter because \" +\r\n                          state.comment\r\n                          : \"\",\r\n                    letter_id: \"\",\r\n                    file_name: \"\",\r\n                    sender: emp_id,\r\n                    reciever: Letter.creater,\r\n                  },\r\n                ],\r\n                ...userInfo(),\r\n              }),\r\n            }); //sending message with system notification\r\n            let Res = decrptObject(Req.data); //decrypting response\r\n            if (Res.created) {\r\n              sendToParticipant();\r\n            } else {\r\n              sendToParticipant();\r\n            }\r\n          } else {\r\n            sendToParticipant();\r\n          }\r\n        } else {\r\n          setState({\r\n            ...state,\r\n            ...saveProcess(\"success\", \"Decison made succesfully\"),\r\n          });\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          ...saveProcess(\r\n            \"error\",\r\n            \"Error made while taking decision making please try again letter\"\r\n          ),\r\n        });\r\n      }\r\n      emitter(socket);\r\n    } catch (err) {\r\n      setState({\r\n        ...state,\r\n        ...saveProcess(\r\n          \"error\",\r\n          \"Error made while taking decision making please try again letter\"\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendToParticipant = async () => {\r\n    const Letters = await loadLetters();\r\n    const M = new Message(\r\n      messages.state,\r\n      Letters,\r\n      users.state,\r\n      employees.state,\r\n      department.state\r\n    );\r\n    let progress = M.totallProgress(id) === 100 ? true : false;\r\n    let Participants = M.participants(id).length ? true : false;\r\n    if (progress && Participants) {\r\n      //if no approval manager are found send to participant\r\n      let participant = Mess.participants(id);\r\n      let Part = participant.map((p) => {\r\n        return {\r\n          message: Letter.title,\r\n          letter_id: id,\r\n          sender: Letter.creater,\r\n          reciever: p.emp_id,\r\n        };\r\n      });\r\n      let req = await axios.post(host + \"/messages\", {\r\n        data: encryptObject({\r\n          messages: [\r\n            ...Part,\r\n            {\r\n              message:\r\n                \"System Notification- Letter \" +\r\n                Letter.id +\r\n                \" has completed approval stages and given to all participants\",\r\n              sender: emp_id,\r\n              reciever: Letter.creater,\r\n            },\r\n          ],\r\n          ...userInfo(),\r\n        }),\r\n      });\r\n      let res = decrptObject(req.data);\r\n    }\r\n    setState({\r\n      ...state,\r\n      ...saveProcess(\"success\", \"Decison made succesfully\"),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"container\">\r\n        <div className=\"col-lg-12\">\r\n          {/* Approve */}\r\n          <div className=\"input-container\">\r\n            <FontAwesomeIcon\r\n              icon={faCheck}\r\n              className=\"text-info fa-2x mx-2 my-auto \"\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"approval\"\r\n              value=\"male\"\r\n              checked={state.check.Approved}\r\n              className=\"my-auto mx-3\"\r\n              onChange={(e) =>\r\n                setState((s) => ({\r\n                  ...state,\r\n                  approved: s.approved === \"Approved\" ? \"\" : \"Approved\",\r\n                  check: { Approved: !s.check.Approved, unApproved: false },\r\n                }))\r\n              }\r\n            />\r\n            Approve\r\n          </div>\r\n          {/* UnApprove */}\r\n          <div className=\"input-container\">\r\n            <FontAwesomeIcon\r\n              icon={faWindowClose}\r\n              className=\"text-danger fa-2x mx-2 my-auto \"\r\n            />\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"approval\"\r\n              value=\"male\"\r\n              checked={state.check.unApproved}\r\n              className=\"my-auto mx-3\"\r\n              onChange={(e) =>\r\n                setState((s) => ({\r\n                  ...state,\r\n                  approved: s.approved === \"unApproved\" ? \"\" : \"unApproved\",\r\n                  check: { Approved: false, unApproved: !s.check.unApproved },\r\n                }))\r\n              }\r\n            />\r\n            un Approve\r\n          </div>\r\n          {state.check.unApproved && state.approved === \"unApproved\" ? (\r\n            <p className=\"font-weight-bold text-center\">\r\n              please write a comment why you unApprove this message\r\n            </p>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          {state.check.unApproved && state.approved === \"unApproved\" ? (\r\n            <div className=\"input-container\">\r\n              <FontAwesomeIcon\r\n                icon={faComment}\r\n                className=\"text-warning fa-2x mx-2 my-auto \"\r\n              />\r\n              <textarea\r\n                className=\"input-field form-control my-auto\"\r\n                type=\"text\"\r\n                placeholder=\"write comment\"\r\n                onChange={(e) => {\r\n                  setState({ ...state, comment: e.target.value });\r\n                }}\r\n                required={true}\r\n                cols=\"20\"\r\n                rows=\"5\"\r\n              ></textarea>\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          <div className=\"text-center\">\r\n            <p className=\"text-danger text-center font-weight-bold\">\r\n              {state.error}\r\n            </p>\r\n            <p className=\"text-success text-center font-weight-bold\">\r\n              {state.success}\r\n            </p>\r\n            <p className=\"text-info text-center font-weight-bold\">\r\n              {state.process}\r\n            </p>\r\n            {state.loading ? <DotLoading /> : <p></p>}\r\n          </div>\r\n          {state.check.Approved || state.check.unApproved ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"float-right btn btn-info\"\r\n              disabled={state.disable}\r\n            >\r\n              Done\r\n            </button>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TakeActions;\r\n","import { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { durationDays, ToEthiopianDateSting, TellDay } from \"../../controllers/Date\";\r\n\r\nclass PrintLetter extends Component {\r\n  render() {\r\n    let { company, Mess, Letter, id } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 my-2\">\r\n            <h3 className=\"text-center font-weight-bold\">\r\n              {company.state[0].name}\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-lg-6 my-2\">\r\n            <h6 className=\"text-center font-weight-bold\">\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"To- \" + Mess.Name(Mess.getEmp_id())\r\n                : \"\"}\r\n            </h6>\r\n            <h6 className=\"text-center font-weight-bold\">\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"From - \" + Mess.Name(Letter.creater)\r\n                : \"\"}{\" \"}\r\n              <br />\r\n              {Letter\r\n                ? Letter.creater === Mess.getEmp_id()\r\n                  ? \"\"\r\n                  : \"Department- \" + Mess.Department(Letter.creater)\r\n                : \"\"}\r\n            </h6>\r\n          </div>\r\n          <div className=\"col-lg-6 my-2\">\r\n            <h6 className=\"text-center font-italic float-right\">\r\n              Letter id- {Letter.id} <br />\r\n              Date -{Letter ? TellDay(Letter.created_date) : \"\"}\r\n            </h6>\r\n          </div>\r\n          {Letter ? (\r\n            Letter.type === \"allowance\" ? (\r\n              <div className=\"col-lg-6\">\r\n                <p className=\"text-center font-italic\">\r\n                  Project name -{Letter.project_name} <br />\r\n                  program- {Letter.program} <br />\r\n                  objective- {Letter.objective} <br />\r\n                  duration days-{\" \"}\r\n                  {parseInt(\r\n                    durationDays(Letter.initial_date, Letter.return_date)\r\n                  ) + 1}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p></p>\r\n            )\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          {Letter ? (\r\n            Letter.type === \"allowance\" ? (\r\n              <div className=\"col-lg-6\">\r\n                <p className=\"text-center font-italic font-weight-bold\">\r\n                  መነሻ ቀን - {ToEthiopianDateSting(Letter.initial_date)} <br />\r\n                  መመለሻ ቀን-{ToEthiopianDateSting(Letter.return_date)} <br />\r\n                  መነሻ ቦታ- {Letter.initial_place} <br />\r\n                  መድረሻ ቦታ-{Letter.destination_place} <br />\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p></p>\r\n            )\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          <div className=\"col-lg-12 my-2\">\r\n            <h4 className=\"text-center font-weight-bold\">\r\n              ጉዳዩ-{Letter ? Letter.title : \"\"}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-12 my-2\">\r\n            <Editor\r\n              toolbarClassName=\"toolbarClassName\"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              editorClassName=\"editorClassName\"\r\n              readOnly={true}\r\n              toolbarHidden={true}\r\n              editorState={Mess.editorState(id)}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6 y-2\">\r\n            {Mess.isApproval(id) ? (\r\n              Mess.approvedManagers().map((l) => {\r\n                return (\r\n                  <p className=\"text-center font-weight-bold\">\r\n                    <FontAwesomeIcon\r\n                      icon={faCheckCircle}\r\n                      className=\"text-success fa-2x mx-2\"\r\n                    />\r\n                    {Mess.Name(l.emp_id)}\r\n                  </p>\r\n                );\r\n              })\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrintLetter;\r\n","import { faPrint } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport PrintLetter from \"./PrintLetter\";\r\n\r\nconst ViewLetters = ({ l_id: id, setSize }) => {\r\n  const { socket, company, letters, employees, messages, users, department } =\r\n    useContext(StoreContext);\r\n\r\n  const Mess = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letter = Mess.find_letter(id);\r\n  const emp_id = Mess.getEmp_id();\r\n\r\n  useEffect(() => {\r\n    setSize ? setSize(\"xl\") : Donothing();\r\n    Mess.manager_info(id)\r\n      ? socket.emit(\"update_letter\", {\r\n        ...Letter,\r\n        approval_manager: [\r\n          ...Mess.approval_managers(id).filter((m) => m.emp_id !== emp_id),\r\n          { ...Mess.manager_info(id, emp_id), seen: true },\r\n        ],\r\n      })\r\n      : Donothing();\r\n\r\n    Mess.participants(id).find((m) => m.emp_id === emp_id)\r\n      ? !(Mess.participants(id).find((m) => m.emp_id === emp_id)).seen ?\r\n        socket.emit(\"update_letter\", {\r\n          ...Letter,\r\n          participants: [\r\n            ...Mess.participants(id).filter((m) => m.emp_id !== emp_id),\r\n            { ...Mess.particpant_info(id, emp_id), seen: true },\r\n          ],\r\n        })\r\n        : Donothing() : Donothing();\r\n  }, []);\r\n  const componentRef = useRef();\r\n  return (\r\n    <div>\r\n      <ReactToPrint\r\n        trigger={() => (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\"></div>\r\n              <div className=\"col-lg-3\">\r\n                <button className=\"btn btn-outline-info\">\r\n                  <FontAwesomeIcon icon={faPrint} className=\"mx-2\" />\r\n                  Print\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        content={() => componentRef.current}\r\n      />\r\n      <PrintLetter\r\n        ref={componentRef}\r\n        company={company}\r\n        Mess={Mess}\r\n        Letter={Letter}\r\n        id={id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewLetters;\r\n","import { faChartLine, faEnvelope, faEye, faHammer, faPencilAlt, faPlus, faProcedures, faProjectDiagram, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'reactstrap/lib/Modal';\r\nimport ModalBody from 'reactstrap/lib/ModalBody';\r\nimport ModalHeader from 'reactstrap/lib/ModalHeader';\r\nimport { Donothing } from '../../controllers/saveProcess';\r\nimport CreateLetters from '../letters/CreateLetters'\r\nimport DeleteLetter from '../letters/DeleteLetter';\r\nimport EditLetter from '../letters/EditLetter/EditLetter';\r\nimport LetterProgress from '../letters/LetterProgress';\r\nimport TakeActions from '../letters/TakeActions';\r\nimport ViewLetters from '../letters/ViewLetters';\r\n\r\nconst ModalLetter=({className,type,typing,stop_typing,l_id,emitter})=> {\r\n\r\n    \r\n    const [modal, setModal] = useState(false);\r\n    const [size,setSize]=useState('xl')\r\n    const [hover,sethover]=useState(false)\r\n    const toggle = () =>{\r\n        setModal(!modal);\r\n      type==='create_letter'?!modal?typing():stop_typing():Donothing()\r\n      type==='delete_letter'?!modal?Donothing():emitter():Donothing()\r\n    }\r\n    if(type==='create_letter')\r\n    {\r\n    return (\r\n        <div>\r\n        <div className=\"btn\" onClick={toggle}\r\n        onMouseEnter={() => sethover(true)} onMouseLeave={() => sethover(false)} \r\n        >\r\n        <FontAwesomeIcon icon={faEnvelope} className='text-danger fa-2x' />\r\n<p style={{display:hover?'':'none'}} className='font-italic font-weight-bold text-white'>\r\n            Create a letter\r\n        </p>\r\n           </div>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            New Letter\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <CreateLetters setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n} \r\nelse if(type==='Create_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faPlus} className='mx-2'/>\r\n        Create Letter\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n                <CreateLetters setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='view_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faEye} className='mx-2'/>\r\n        View\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='lg'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <ViewLetters l_id={l_id /**letter id */} setSize={setSize}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='edit_letter')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faPencilAlt} className='mx-2'/>\r\n        Edit\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size={size}\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faEnvelope} className='mx-2' />\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <EditLetter l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='delete_letter'){\r\n    return(\r\n        <div>\r\n        <div onClick={toggle} color=\"primary\"\r\n            className=' btn btn-outline-success mx-2 my-2 '\r\n            >\r\n                <FontAwesomeIcon icon={faTrash} className='mx-2 fa-1x' />\r\n   Delete\r\n        </div>\r\n            <Modal isOpen={modal} toggle={toggle}  className={className+' dialogue'}>\r\n                <ModalHeader toggle={toggle}>\r\n     <p className=\"text-danger\">\r\n     <FontAwesomeIcon icon={faTrash} className='mx-2 text-danger' />\r\n     Letter is flagged for deletion are you sure you want to delete    \r\n         </p>               \r\n        </ModalHeader>\r\n                <ModalBody>\r\n  <DeleteLetter _id={l_id} close={toggle}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nelse if(type==='progress')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faChartLine} className='mx-2'/>\r\n        Progress\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='lg'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faChartLine} className='mx-2' />\r\n           Progress\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <LetterProgress l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\nelse if(type==='approve')\r\n{\r\n    return(\r\n      <div>\r\n      <button className=\"btn btn-outline-success mx-2 my-2\" onClick={toggle}>\r\n        <FontAwesomeIcon icon={faHammer} className='mx-2'/>\r\n        Take Decision\r\n      </button>\r\n            <Modal isOpen={modal} toggle={toggle} size='md'\r\n               className={className}>\r\n                <ModalHeader toggle={toggle}>\r\n                    <FontAwesomeIcon icon={faHammer} className='mx-2' />\r\n           Take Decision\r\n            </ModalHeader>\r\n                <ModalBody>\r\n    <TakeActions l_id={l_id /**letter id */}/>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>   \r\n    )\r\n}\r\n}\r\n\r\nexport default ModalLetter\r\n","import {\r\n  faCheck,\r\n  faCheckDouble,\r\n  faCircle,\r\n  faCommentDots,\r\n  faEnvelopeOpen,\r\n  faEye,\r\n  faPaperPlane,\r\n  faPlus,\r\n  faPlusCircle,\r\n  faSearch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { localTime, simpleDate } from \"../../controllers/Date\";\r\n\r\nconst Chat = ({ match }) => {\r\n  const emp_id = match.params.id ? match.params.id : \"\";\r\n  const {\r\n    socket,\r\n    users,\r\n    employees,\r\n    messages,\r\n    letters,\r\n    connections,\r\n    typing,\r\n    Ltyping,\r\n    department,\r\n  } = useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = employees;\r\n  const { loading: userLoading, error: userError } = users;\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    contacted: [],\r\n  });\r\n  const box = useRef(null);\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  ); //importing message class\r\n\r\n  /** */\r\n  useEffect(() => {\r\n    Messages.newMessages(emp_id).map((m) => {\r\n      socket.emit(\"update\", { ...m, seen: true });\r\n    });\r\n    setState((s) => ({ ...s, contacted: Messages.contactedUsers() }));\r\n    Scroller();\r\n    box.current && emp_id ? box.current.focus() : Donothing();\r\n  }, [messages.state, emp_id, box]);\r\n\r\n  /**scroll */\r\n  const Scroller = () => {\r\n    try {\r\n      var scroll = document.getElementById(\r\n        Messages.last_message(emp_id)\r\n          ? Messages.last_message(emp_id)._id\r\n          : \"dsdc\"\r\n      );\r\n      scroll.scrollIntoView({ behavior: \"auto\" });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  /**emiiting message is typing*/\r\n  const typingFocus = () =>\r\n    socket.emit(\"typing\", { emp_id: Messages.getEmp_id() });\r\n  /**creating letter emit message that user is creating letter */\r\n  const typing_letter = () =>\r\n    socket.emit(\"typing_letter\", { emp_id: Messages.getEmp_id() });\r\n\r\n  /**stop typing */\r\n  const stopTyping = () =>\r\n    setTimeout(() => socket.emit(\"typing\", { emp_id: \"\" }), 1200); //for chat\r\n  const stop_typing = () => socket.emit(\"typing_letter\", { emp_id: \"\" }); //for creating letter\r\n\r\n  /**emmitter */\r\n\r\n  /**handling submit */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    state.message !== \"\"\r\n      ? socket.emit(\"submit\", {\r\n        sender: Messages.getEmp_id(),\r\n        reciever: emp_id,\r\n        message: state.message,\r\n      })\r\n      : Donothing();\r\n    setState({ ...state, message: \"\" });\r\n    Scroller();\r\n  };\r\n\r\n  const handleSearch = (index) =>\r\n    setState({ ...state, contacted: Messages.searchContacted(index) });\r\n  const emitter = () => {\r\n    socket.emit(\"chat\", \"\");\r\n    socket.emit(\"letters\", \"\");\r\n    socket.on(\"chat\", (data) => {\r\n      let Mess = new Message(\r\n        data,\r\n        connections.state,\r\n        letters.state,\r\n        users.state,\r\n        employees.state\r\n      );\r\n      setState((s) => ({ ...s, contacted: Mess.contactedUsers() }));\r\n    });\r\n  };\r\n  return empLoading || userLoading ? (\r\n    <DataLoading />\r\n  ) : empError || userError ? (\r\n    <ErrorLoading />\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"messaging mt-2 card bg-dark\">\r\n        <div className=\"inbox_msg \">\r\n          <div className=\"inbox_people\">\r\n            <div className=\"headind_srch\">\r\n              <div className=\"recent_heading\">\r\n                <h4 className=\"font-weight-bold\">Recent Messages</h4>\r\n              </div>\r\n              <div className=\"srch_bar\">\r\n                <div className=\"stylish-input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"search-bar\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                  />\r\n                  <span className=\"input-group-addon\">\r\n                    <button type=\"button\">\r\n                      <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"inbox_chat\">\r\n              {state.contacted.length ? (\r\n                state.contacted.map((m) => {\r\n                  return (\r\n                    <Link to={\"/message/\" + m} key={m}>\r\n                      <div className=\"chat_list active_chat\" key={m}>\r\n                        <div className=\"chat_people\">\r\n                          <div className=\"chat_img\">\r\n                            <p data-letters={Messages.firstLetters(m)}></p>\r\n                            {Messages.isOnline(m) ? (\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"text-success\"\r\n                              />\r\n                            ) : (\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"text-secondary\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"chat_ib\">\r\n                            <h5>\r\n                              {Messages.messageName(m)}{\" \"}\r\n                              <span className=\"chat_date\">\r\n                                {simpleDate(\r\n                                  Messages.last_message(m).created_date\r\n                                )}\r\n                              </span>\r\n                            </h5>\r\n                            <p>\r\n                              {Messages.last_message(m).message.length > 100\r\n                                ? Messages.last_message(m).message.slice(\r\n                                  0,\r\n                                  120\r\n                                ) + \"  ...\"\r\n                                : Messages.last_message(m).message}\r\n                            </p>\r\n                          </div>\r\n                          {Messages.newMessages(m).length ? (\r\n                            <div className=\"float-right rounded-circle\">\r\n                              <h4 className=\"text-small\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faPlusCircle}\r\n                                  className=\"text-info fa-1x\"\r\n                                />\r\n                                {Messages.newMessages(m).length}\r\n                              </h4>\r\n                            </div>\r\n                          ) : (\r\n                            <p></p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {!emp_id ? (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  <h2 className=\"text-white font-weight-bold text-center\">\r\n                    Please Select chat... <br />\r\n                    <FontAwesomeIcon\r\n                      icon={faEnvelopeOpen}\r\n                      className=\"text-white fa-3x\"\r\n                    />\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"row bg-light\">\r\n                    <div className=\"col-lg-2 float-right mt-2\">\r\n                      <p\r\n                        data-letters={Messages.firstLetters(emp_id)}\r\n                        className=\"ml-5\"\r\n                      >\r\n                        {\" \"}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"col-lg-6 mt-2 my-auto float-left\">\r\n                      <h4 className=\"\">{Messages.messageName(emp_id)}</h4>\r\n                      {Messages.isOnline(emp_id) ? (\r\n                        <p className=\"float-left\">\r\n                          <FontAwesomeIcon\r\n                            icon={faCircle}\r\n                            className=\"text-success ml-5\"\r\n                          />\r\n                          online\r\n                        </p>\r\n                      ) : Messages.lastSeen(emp_id) ? (\r\n                        <p className=\"float-left\">\r\n                          last seen at{\" \"}\r\n                          <ReactTimeAgo date={Messages.lastSeen(emp_id)} />{\" \"}\r\n                          {localTime(Messages.lastSeen(emp_id))}\r\n                        </p>\r\n                      ) : (\r\n                        <p></p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-4 float-right font-italic mt-2\">\r\n                      Department- {Messages.Department(emp_id)} <br />\r\n                      position-{Messages.UserRole(emp_id)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {!emp_id ? (\r\n            <p></p>\r\n          ) : (\r\n            <div className=\"mesgs\">\r\n              <div className=\"msg_history\">\r\n                {Messages.chatRoom(emp_id).reverse().length ? (\r\n                  Messages.chatRoom(emp_id)\r\n                    .reverse()\r\n                    .map((m) => {\r\n                      return m.sender === Messages.getEmp_id() ? (\r\n                        <div className=\"outgoing_msg\" key={m._id} id={m._id}>\r\n                          <div className=\"sent_msg\">\r\n                            {m.letter_id ? (\r\n                              <div className=\"card\" style={{ minHeight: 200 }}>\r\n                                <div className=\"card-header text-center font-weight-bold\">\r\n                                  {Messages.title(m.letter_id)}\r\n                                </div>\r\n                                <div className=\"card-body font-italic\">\r\n                                  {Messages.description_text(m.letter_id)\r\n                                    .length > 100\r\n                                    ? Messages.description_text(\r\n                                      m.letter_id\r\n                                    ).slice(0, 120) + \" ...\"\r\n                                    : Messages.description_text(m.letter_id)}\r\n                                  { } {/*letter class*/}\r\n                                </div>\r\n                                <div className=\"card-footer text-muted\">\r\n                                  <ModalLetter\r\n                                    type=\"view_letter\"\r\n                                    l_id={m.letter_id}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <p>{m.message}</p>\r\n                            )}\r\n                            <span className=\"time_date\">\r\n                              {localTime(m.created_date)} |{\" \"}\r\n                              {simpleDate(m.created_date)} |\r\n                              {m.seen ? \" seen\" : \" Delivered\"}\r\n                              {m.seen ? (\r\n                                <FontAwesomeIcon\r\n                                  icon={faCheckDouble}\r\n                                  className=\"text-info mx-2\"\r\n                                />\r\n                              ) : (\r\n                                <FontAwesomeIcon\r\n                                  icon={faCheck}\r\n                                  className=\"text-info mx-2\"\r\n                                />\r\n                              )}\r\n                            </span>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      ) : m.reciever === Messages.getEmp_id() ? (\r\n                        <div className=\"incoming_msg\" key={m._id} id={m._id}>\r\n                          <div className=\"incoming_msg_img\">\r\n                            <p\r\n                              data-letters={\r\n                                m.sender !== Messages.getEmp_id()\r\n                                  ? Messages.firstLetters(m.sender)\r\n                                  : m.reciever !== Messages.getEmp_id()\r\n                                    ? Messages.firstLetters(m.reciever)\r\n                                    : \"\"\r\n                              }\r\n                            ></p>\r\n                          </div>\r\n                          <div className=\"received_msg\">\r\n                            <div className=\"received_withd_msg\">\r\n                              {m.letter_id ? (\r\n                                <div\r\n                                  className=\"card\"\r\n                                  style={{ minHeight: 200 }}\r\n                                >\r\n                                  <div className=\"card-header text-center font-weight-bold\">\r\n                                    {Messages.title(m.letter_id)}\r\n                                  </div>\r\n                                  <div className=\"card-body font-italic\">\r\n                                    {Messages.description_text(m.letter_id)\r\n                                      .length > 100\r\n                                      ? Messages.description_text(\r\n                                        m.letter_id\r\n                                      ).slice(0, 100) + \" ...\"\r\n                                      : Messages.description_text(m.letter_id)}\r\n                                    { } {/*letter class*/}\r\n                                  </div>\r\n                                  <div className=\"card-footer text-muted\">\r\n                                    <ModalLetter\r\n                                      type=\"view_letter\"\r\n                                      l_id={m.letter_id}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                <p>{m.message}</p>\r\n                              )}\r\n                              <span className=\"time_date\">\r\n                                {\" \"}\r\n                                {localTime(m.created_date)} |\r\n                                {simpleDate(m.created_date)}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <p key={m._id}></p>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <h4 className=\"text-center text-white  mt-2 font-itlaic font-weight-bold \">\r\n                    <FontAwesomeIcon\r\n                      icon={faCommentDots}\r\n                      className=\"text-white fa-2x mx-2\"\r\n                    />\r\n                    No messages yet...\r\n                  </h4>\r\n                )}\r\n              </div>\r\n              <div className=\"incoming_msg mb-2\" id=\"type\">\r\n                <div className=\"incoming_msg_img\"></div>\r\n                {typing === emp_id ? (\r\n                  <div className=\"received_msg bg-light\">\r\n                    <div className=\"received_withd_msg\">\r\n                      <p>{Messages.messageName(emp_id) + \" \"} is typing ...</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <p></p>\r\n                )}\r\n                {Ltyping === emp_id ? (\r\n                  <div className=\"received_msg bg-light\">\r\n                    <div className=\"received_withd_msg\">\r\n                      <p>\r\n                        {Messages.messageName(emp_id) + \" \"} is creating letter\r\n                        ...\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <p></p>\r\n                )}\r\n              </div>\r\n              <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"input-container\">\r\n                  <input\r\n                    className=\"input-field form-control my-auto\"\r\n                    id=\"message\"\r\n                    type=\"text\"\r\n                    placeholder=\"type message\"\r\n                    autoComplete=\"off\"\r\n                    onKeyUp={() => stopTyping()}\r\n                    onChange={(e) => {\r\n                      setState({ ...state, message: e.target.value });\r\n                      typingFocus();\r\n                    }}\r\n                    ref={box}\r\n                    value={state.message}\r\n                  />\r\n\r\n                  <ModalLetter\r\n                    type=\"create_letter\"\r\n                    typing={typing_letter}\r\n                    stop_typing={stop_typing}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Chat);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport {\r\n  faEnvelopeOpen,\r\n  faComment,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n  faBell,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Chat from \"../letters/Chat\";\r\nimport { Message } from \"../../controllers/Message\";\r\n\r\nconst Letter = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/* title*/}\r\n\r\n              {/**chat */}\r\n              <Chat />\r\n              {/** */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Letter;\r\n","export const letterState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const lettersReducer =(state=letterState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_LETTERS':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_LETTERS':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const allowanceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const allowanceReducer =(state=allowanceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_ALLOWANCES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_ALLOWANCES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const climatePlaceState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const climatePlacesReducer =(state=climatePlaceState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_PLACES':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_PLACES':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","export const deductionState={\r\n    state:[],\r\n    loading:true,\r\n    error:false\r\n}\r\n \r\nexport const deductionReducer =(state=deductionState,action)=>{\r\n switch(action.type){\r\n     case 'ADD_DEDUCTIONS':\r\n     return {state:action.payload,loading:false,error:false}\r\n     case 'LOADING_DEDUCTIONS':\r\n   return {...state,loading:true}\r\n   default:\r\n       return {...state,loading:false,error:true}\r\n }   \r\n}","import {\r\n  faCircle,\r\n  faComment,\r\n  faObjectGroup,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { removeDuplicates } from \"../../controllers/removeRedudant\";\r\nimport { Donothing } from \"../../controllers/saveProcess\";\r\nimport { Notification, StoreContext } from \"../contexts/contexts\";\r\n\r\nconst Contacts = () => {\r\n  const [state, setState] = useState({\r\n    employees: [], // connected or discconnected users\r\n  });\r\n  const { users, employees, messages, department, letters } = useContext(StoreContext);\r\n\r\n  const { state: Users, loading: userLoading } = users;\r\n  const { state: Employees, loading: empLoading } = employees;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    Users,\r\n    Employees,\r\n    department.state\r\n  );\r\n  const emp = Messages.UnFilter(Messages.getEmp_id());\r\n  useEffect(() => {\r\n    setState((s) => ({ employees: emp }));\r\n  }, [userLoading, empLoading, Users]);\r\n  /**search name elements with search index provide */\r\n  const handleSearch = (index) =>\r\n    setState((s) => ({\r\n      employees: index ? Messages.searchEmployee(index, emp) : emp,\r\n    }));\r\n  /***online users */\r\n\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\"></div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"search-wrapper active\">\r\n              <div className=\"input-holder\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"type name,department,id\"\r\n                  onChange={(e) => handleSearch(e.target.value)}\r\n                />\r\n                <button className=\"search-icon\">\r\n                  <span></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-card mb-3 min-height card\">\r\n        {Employees.length ? (\r\n          state.employees.length ? (\r\n            <div className=\"col-lg-12\">\r\n              <h4 className=\"contact-header text-center\">Employees</h4>\r\n              <MDBTable bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th className=\"text-center\"># employee id</th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                      name\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faObjectGroup}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                      Department\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faComment}\r\n                        className=\"fa-1x text-danger mx-2\"\r\n                      />\r\n                    </th>\r\n                    <th className=\"text-center\">status</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {state.employees.map((f) => {\r\n                    return (\r\n                      <tr key={f._id}>\r\n                        <td className=\"text-center\">{f.emp_id}</td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.Name(f.emp_id)}\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.dpName(f.department)}\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          <Link to={\"message/\" + f.emp_id}>\r\n                            {Messages.isOnline(f.emp_id) ? (\r\n                              <button className=\"btn btn-success\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faComment}\r\n                                  className=\"fa-1x mx-2\"\r\n                                />\r\n                                contact\r\n                              </button>\r\n                            ) : (\r\n                              <button className=\"btn\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faComment}\r\n                                  className=\"fa-1x mx-2\"\r\n                                />\r\n                                contact\r\n                              </button>\r\n                            )}\r\n                          </Link>\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          {Messages.isOnline(f.emp_id) ? (\r\n                            <p>\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"fa-1x text-success mx-2\"\r\n                              />\r\n                              online\r\n                            </p>\r\n                          ) : (\r\n                            <p>\r\n                              <FontAwesomeIcon\r\n                                icon={faCircle}\r\n                                className=\"fa-1x mx-2\"\r\n                              />\r\n                              offline\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )\r\n        ) : (\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <h2 className=\"text-center\">No Employees registered</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport {\r\n  faEnvelopeOpen,\r\n  faComment,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n  faBell,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Contacts from \"../letters/Contacts\";\r\nimport { Message } from \"../../controllers/Message\";\r\n\r\nconst ContactEmployee = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { employees } = useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = employees;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigations */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/contact\">\r\n                        <FontAwesomeIcon\r\n                          icon={faUser}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Employees to contact\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {empLoading ? (\r\n                <DataLoading />\r\n              ) : empError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <Contacts />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactEmployee;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport Chat from \"../letters/Chat\";\r\n\r\nfunction ChatRoom() {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, users, employees, messages, department } =\r\n    useContext(StoreContext);\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  ); //importing message class\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n\r\n              {/** */}\r\n              <Chat />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n","export const messageState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const messageReducer = (state = messageState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MESSAGES':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_MESSAGES':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","export const connState = {\r\n    state: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const connReducer = (state = connState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CONNECTIONS':\r\n            return { state: action.payload, loading: false, error: false }\r\n        case 'LOADING_CONNECTIONS':\r\n            return { ...state, loading: true }\r\n        default:\r\n            return { ...state, loading: false, error: true }\r\n    }\r\n}","import {\r\n  faCalendar,\r\n  faChartLine,\r\n  faCog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Progress from \"reactstrap/lib/Progress\";\r\nimport { localTime, TellDay } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\n\r\nconst OutboxLetters = () => {\r\n  const [state, setState] = useState({\r\n    Letters: [],\r\n    found: false,\r\n  });\r\n\r\n  const { employees, users, messages, letters, socket, department } =\r\n    useContext(StoreContext);\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  useEffect(() => {\r\n    setState({ ...state, Letters: message.outBox() });\r\n  }, [letters]);\r\n\r\n  const Letters = message.outBox();\r\n  const handleSearch = (index) =>\r\n    setState({\r\n      ...state,\r\n      Letters: index === \"\" ? Letters : message.searchLetters(index),\r\n      found: index === \"\" ? false : true,\r\n    });\r\n  const emitter = () => {\r\n    socket.emit(\"chat\", \"\");\r\n    socket.emit(\"letters\", \"\");\r\n    socket.on(\"chat\", (data) => {\r\n      let Mess = new Message(\r\n        data,\r\n        letters.state,\r\n        users.state,\r\n        employees.state,\r\n        department.state\r\n      );\r\n      setState((s) => ({ ...s, Letters: Mess.outBox() }));\r\n    });\r\n  };\r\n\r\n  const typing_letter = () =>\r\n    socket.emit(\"typing_letter\", { emp_id: messages.getEmp_id() });\r\n  const stop_typing = () => socket.emit(\"typing_letter\", { emp_id: \"\" }); //for creating letter\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 my-auto\">\r\n          <ModalLetter\r\n            type=\"Create_letter\"\r\n            typing={typing_letter}\r\n            stop_typing={stop_typing}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-5 my-auto\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Type letter id,title and type\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 my-auto\">\r\n          <div className=\"card mb-3 widget-content bg-grow-early\">\r\n            <div className=\"widget-content-wrapper text-white\">\r\n              <div className=\"widget-content-left\">\r\n                <div className=\"widget-heading\">Letters</div>\r\n                <div className=\"widget-subheading\">Totall Made</div>\r\n              </div>\r\n              <div className=\"widget-content-right\">\r\n                <div className=\"widget-numbers text-white\">\r\n                  <span>{Letters.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/** */}\r\n        <div className=\"container mt-3 main-card mb-3 card min-height\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              {state.found ? (\r\n                <h5 className=\"text-center\">\r\n                  Letters found -{state.Letters.length}\r\n                </h5>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n              <MDBTable hover bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th># Letter id</th>\r\n                    <th>Title</th>\r\n\r\n                    <th>Type</th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCalendar} className=\"mx-2\" />\r\n                      created\r\n                    </th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                      Progress\r\n                    </th>\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCog} className=\"mx-2\" />\r\n                      Options\r\n                    </th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {state.Letters.length ? (\r\n                    state.Letters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center\">{l.id}</td>\r\n                          <td className=\"text-center\">{l.title}</td>\r\n                          <td className=\"text-center\">{l.type}</td>\r\n                          <td className=\"text-center\">\r\n                            <p className=\"font-italic\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          {message.approval_managers(l._id).length ? (\r\n                            <td>\r\n                              {message.totallProgress(l._id) === 100 ? (\r\n                                <p className=\"font-weight-bold text-center text-success font-italic\">\r\n                                  Approval stage is completed\r\n                                </p>\r\n                              ) : (\r\n                                <div className=\"\">\r\n                                  <Progress\r\n                                    color=\"info\"\r\n                                    value={message.totallProgress(l._id)}\r\n                                  />\r\n                                  {\"\" + message.totallProgress(l._id) + \"%\"}\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          ) : (\r\n                            <td>\r\n                              <p className=\"font-italic text-danger\">\r\n                                The letter has no approval stage\r\n                              </p>\r\n                            </td>\r\n                          )}\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n                            <ModalLetter type=\"progress\" l_id={l._id} />\r\n                            {message.isModifiable(l._id) ? (\r\n                              <ModalLetter type=\"edit_letter\" l_id={l._id} />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.isModifiable(l._id) ? (\r\n                              <ModalLetter\r\n                                type=\"delete_letter\"\r\n                                l_id={l._id}\r\n                                emitter={emitter}\r\n                              />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6}>\r\n                        <p className=\"text-center font-weight-bold text-danger\">\r\n                          No letters are created\r\n                        </p>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboxLetters;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport OutboxLetters from \"../letters/OutboxLetters\";\r\n\r\nconst OutBoxLetters = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, employees, messages, users, department } =\r\n    useContext(StoreContext);\r\n  const { loading: empLoading, error: empError } = letters;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    department.state\r\n  ); //importing message class\r\n  const notify = !messages.loading ? Messages.newInboxLetters().length : 0;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/inbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpen}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Inbox letters\r\n                        {notify ? (\r\n                          <h4 className=\"mx-1 text-info font-weight-bold\">\r\n                            <FontAwesomeIcon\r\n                              icon={faBell}\r\n                              className=\"text-info mx-1\"\r\n                            />\r\n                            {notify}\r\n                          </h4>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/outbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpenText}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        outbox letters\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/** */}\r\n              {empLoading ? (\r\n                <DataLoading />\r\n              ) : empError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <OutboxLetters />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutBoxLetters;\r\n","import {\r\n  faCalendar,\r\n  faChartLine,\r\n  faCheck,\r\n  faCog,\r\n  faEdit,\r\n  faUserAlt,\r\n  faUserAltSlash,\r\n  faUserCheck,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { localTime, TellDay } from \"../../controllers/Date\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { StoreContext } from \"../contexts/contexts\";\r\nimport ModalLetter from \"../layout/ModalLetter\";\r\n\r\nconst InboxLetters = () => {\r\n  const [state, setState] = useState({\r\n    newLetters: [],\r\n    seenLetters: [],\r\n    found: false,\r\n  });\r\n  const { socket, messages, letters, users, employees, department } =\r\n    useContext(StoreContext);\r\n  const message = new Message(\r\n    messages.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state,\r\n    department.state\r\n  );\r\n  const Letters = message.InboxLetters();\r\n\r\n  useEffect(() => {\r\n    setState((s) => ({\r\n      ...s,\r\n      newLetters: message.newInboxLetters(),\r\n      seenLetters: message.seenInboxLetters(),\r\n    }));\r\n  }, [messages.state, letters.state]);\r\n\r\n  const handleSearch = (index) =>\r\n    setState({\r\n      ...state,\r\n      newLetters:\r\n        index === \"\"\r\n          ? message.newInboxLetters()\r\n          : message.SearchLetters(index).newLetters,\r\n      seenLetters:\r\n        index === \"\"\r\n          ? message.seenInboxLetters()\r\n          : message.SearchLetters(index).seenLetters,\r\n      found: index === \"\" ? false : true,\r\n    });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 my-auto\"></div>\r\n        <div className=\"col-lg-5 my-auto\">\r\n          <div className=\"search-wrapper active\">\r\n            <div className=\"input-holder\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                placeholder=\"Type letter id,title and type\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n              <button className=\"search-icon\">\r\n                <span></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 my-auto\">\r\n          <div className=\"card mb-3 widget-content bg-grow-early\">\r\n            <div className=\"widget-content-wrapper text-white\">\r\n              <div className=\"widget-content-left\">\r\n                <div className=\"widget-heading\">Letters</div>\r\n                <div className=\"widget-subheading\">Totall Recieved</div>\r\n              </div>\r\n              <div className=\"widget-content-right\">\r\n                <div className=\"widget-numbers text-white\">\r\n                  <span>{Letters.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/** */}\r\n        <div className=\"container mt-3 main-card mb-3 card min-height\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              {state.found ? (\r\n                <h5 className=\"text-center\">\r\n                  Letters found -\r\n                  {state.newLetters.length + state.seenLetters.length}\r\n                </h5>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n              <MDBTable hover bordered striped>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th># Letter id</th>\r\n                    <th>Title</th>\r\n\r\n                    <th>Type</th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCalendar} className=\"mx-2\" />\r\n                      created\r\n                    </th>\r\n\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faChartLine} className=\"mx-2\" />\r\n                      Decision made/Recieved\r\n                    </th>\r\n                    <th>\r\n                      <FontAwesomeIcon icon={faCog} className=\"mx-2\" />\r\n                      Options\r\n                    </th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {Letters.length ? (\r\n                    state.newLetters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center text-info\">{l.id}</td>\r\n                          <td className=\"text-center text-info\">{l.title}</td>\r\n                          <td className=\"text-center text-info\">{l.type}</td>\r\n                          <td className=\"text-center text-info\">\r\n                            <p className=\"font-italic text-info\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            {message.manager_info(l._id) ? (\r\n                              message.manager_info(l._id).status ===\r\n                              \"Approved\" ? (\r\n                                <p className=\"text-center text-success font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"unApproved\" ? (\r\n                                <p className=\"text-center text-danger font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faWindowClose}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  DisApproved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}{\" \"}\r\n                                  <br />\r\n                                  comment-\r\n                                  {message.manager_info(l._id)\r\n                                    ? message.manager_info(l._id).comment\r\n                                    : \"\"}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"waiting\" ? (\r\n                                <p className=\"text-center font-iatalic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approval letter waiting for your decision\r\n                                </p>\r\n                              ) : (\r\n                                <p></p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.particpant_info(l._id) ? (\r\n                              message.particpant_info(l._id).seen ? (\r\n                                <p className=\"text-center font-italic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserCheck}\r\n                                    className=\"mx-2 fa-2x text-success\"\r\n                                  />\r\n                                  letter seen\r\n                                </p>\r\n                              ) : (\r\n                                <p className=\"text-center font-italic text-info\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserAlt}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  waiting to review\r\n                                </p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr></tr>\r\n                  )}\r\n                  {Letters.length ? (\r\n                    state.seenLetters.map((l) => {\r\n                      return (\r\n                        <tr key={l._id}>\r\n                          <td className=\"text-center\">{l.id}</td>\r\n                          <td className=\"text-center\">{l.title}</td>\r\n                          <td className=\"text-center\">{l.type}</td>\r\n                          <td className=\"text-center\">\r\n                            <p className=\"font-italic\">\r\n                              {TellDay(l.created_date)} <br />\r\n                              {localTime(l.created_date)}\r\n                            </p>\r\n                          </td>\r\n                          <td>\r\n                            {message.manager_info(l._id) ? (\r\n                              message.manager_info(l._id).status ===\r\n                              \"Approved\" ? (\r\n                                <p className=\"text-center text-success font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"unApproved\" ? (\r\n                                <p className=\"text-center text-danger font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faWindowClose}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  DisApproved{\" \"}\r\n                                  <ReactTimeAgo\r\n                                    date={\r\n                                      message.manager_info(l._id).approved_date\r\n                                    }\r\n                                  />{\" \"}\r\n                                  <br />\r\n                                  at{\" \"}\r\n                                  {localTime(\r\n                                    message.manager_info(l._id).approved_date\r\n                                  )}{\" \"}\r\n                                  <br />\r\n                                  comment-\r\n                                  {message.manager_info(l._id)\r\n                                    ? message.manager_info(l._id).comment\r\n                                    : \"\"}\r\n                                </p>\r\n                              ) : message.manager_info(l._id).status ===\r\n                                \"waiting\" ? (\r\n                                <p className=\"text-center font-iatalic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  Approval letter waiting for your decision\r\n                                </p>\r\n                              ) : (\r\n                                <p></p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                            {message.particpant_info(l._id) ? (\r\n                              message.particpant_info(l._id).seen ? (\r\n                                <p className=\"text-center font-italic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserCheck}\r\n                                    className=\"mx-2 fa-2x text-success\"\r\n                                  />\r\n                                  letter seen\r\n                                </p>\r\n                              ) : (\r\n                                <p className=\"text-center font-italic\">\r\n                                  <FontAwesomeIcon\r\n                                    icon={faUserAltSlash}\r\n                                    className=\"mx-2 fa-2x\"\r\n                                  />\r\n                                  waiting to review\r\n                                </p>\r\n                              )\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <ModalLetter type=\"view_letter\" l_id={l._id} />\r\n\r\n                            {message.isApprovable(l._id) ? (\r\n                              <ModalLetter type=\"approve\" l_id={l._id} />\r\n                            ) : (\r\n                              <p></p>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan={6}>\r\n                        <p className=\"text-center text-danger font-weight-bold my-2\">\r\n                          No Letters ar recieved\r\n                        </p>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboxLetters;\r\n","import {\r\n  faBell,\r\n  faComment,\r\n  faEnvelopeOpen,\r\n  faEnvelopeOpenText,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Message } from \"../../controllers/Message\";\r\nimport { LayoutContext, StoreContext } from \"../contexts/contexts\";\r\nimport DataLoading from \"../layout/DataLoading\";\r\nimport ErrorLoading from \"../layout/ErrorLoading\";\r\nimport Navbar from \"../layout/Navbar/Navbar\";\r\nimport SideNav from \"../layout/SideNav/SideNav\";\r\nimport InboxLetters from \"../letters/InboxLetters\";\r\n\r\nconst InBoxLetters = () => {\r\n  const [state, setState] = useState({\r\n    collapse: \"\",\r\n  });\r\n  const { letters, employees, messages, users, connections } = useContext(\r\n    StoreContext\r\n  );\r\n  const { loading: letterLoading, error: letterError } = letters;\r\n  const { loading: messageLoading, error: messageError } = messages;\r\n  const Messages = new Message(\r\n    messages.state,\r\n    connections.state,\r\n    letters.state,\r\n    users.state,\r\n    employees.state\r\n  ); //importing message class\r\n  const notify = !messages.loading ? Messages.newInboxLetters().length : 0;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header \" +\r\n        state.collapse\r\n      }\r\n    >\r\n      <LayoutContext.Provider value={{ uiContents: state, togglers: setState }}>\r\n        <Navbar />\r\n        <div className=\"app-main\">\r\n          <SideNav />\r\n          <div className=\"app-main__outer\">\r\n            <div className=\"app-main__inner\">\r\n              {/**Navigation */}\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/inbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpen}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        Inbox letters\r\n                        {notify ? (\r\n                          <h4 className=\"mx-1 text-info font-weight-bold\">\r\n                            <FontAwesomeIcon\r\n                              icon={faBell}\r\n                              className=\"text-info mx-1\"\r\n                            />\r\n                            {notify}\r\n                          </h4>\r\n                        ) : (\r\n                          <p></p>\r\n                        )}\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col-lg-3\">\r\n                    <h4 className=\"text-center\">\r\n                      <NavLink to=\"/outbox\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEnvelopeOpenText}\r\n                          className=\"fa-1x mx-2 text-danger\"\r\n                        />\r\n                        outbox letters\r\n                      </NavLink>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/** */}\r\n              {messageLoading || letterLoading ? (\r\n                <DataLoading />\r\n              ) : letterError || messageError ? (\r\n                <ErrorLoading />\r\n              ) : (\r\n                <InboxLetters />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InBoxLetters;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport \"./css/Main.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { StoreContext } from \"./components/contexts/contexts\";\r\nimport { empState, employeeReducer } from \"./store/Reducers/employeeReducers\";\r\nimport {\r\n  departmentReducer,\r\n  depState,\r\n} from \"./store/Reducers/departmentReducer\";\r\nimport { placeState, placeReducer } from \"./store/Reducers/placReducers\";\r\nimport { UserReducer, UserState } from \"./store/Reducers/usersReducer\";\r\nimport {\r\n  fieldAllowanceReducer,\r\n  fieldAllowanceState,\r\n} from \"./store/Reducers/FieldAllowance\";\r\nimport ScripTag from \"react-script-tag\";\r\nimport { configReducer, configState } from \"./store/Reducers/configReducer\";\r\nimport { CompanyReducer, companyState } from \"./store/Reducers/companyReducer\";\r\nimport Home from \"./components/routes/Home\";\r\nimport Letter from \"./components/routes/Letter\";\r\nimport { lettersReducer, letterState } from \"./store/Reducers/lettersReducer\";\r\nimport {\r\n  allowanceReducer,\r\n  allowanceState,\r\n} from \"./store/Reducers/allowanceReducer\";\r\nimport {\r\n  climatePlacesReducer,\r\n  climatePlaceState,\r\n} from \"./store/Reducers/climatePlacesReducer\";\r\nimport {\r\n  deductionReducer,\r\n  deductionState,\r\n} from \"./store/Reducers/deductionReducer\";\r\nimport ContactEmployee from \"./components/routes/ContactEmployee\";\r\nimport ChatRoom from \"./components/routes/ChatRoom\";\r\nimport { messageReducer, messageState } from \"./store/Reducers/MessageReducer\";\r\nimport { connReducer, connState } from \"./store/Reducers/connectionReducer\";\r\nimport OutBoxLetters from \"./components/routes/OutBoxLetters\";\r\nimport InBoxLetters from \"./components/routes/InBoxLetters\";\r\n\r\nconst App = () => {\r\n  const [typing, setTyping] = useState(\"\"); //chat typing\r\n  const [Ltyping, setLTyping] = useState(\"\"); //letter creating typing\r\n  const [socket, setSocket] = useState(\"\");\r\n  const [employees, dispatchEmployees] = useReducer(employeeReducer, empState);\r\n  const [department, dispatchDepartment] = useReducer(\r\n    departmentReducer,\r\n    depState\r\n  );\r\n  const [place, dispatchPlaces] = useReducer(placeReducer, placeState);\r\n  const [users, dispatchUsers] = useReducer(UserReducer, UserState);\r\n  const [fieldEmployees, dispatchFieldEmplooyees] = useReducer(\r\n    fieldAllowanceReducer,\r\n    fieldAllowanceState\r\n  );\r\n  const [config, dispatchConfig] = useReducer(configReducer, configState);\r\n  const [company, dispatchCompany] = useReducer(CompanyReducer, companyState);\r\n  const [letters, dispatchLetters] = useReducer(lettersReducer, letterState);\r\n  const [allowances, dispatchAllowances] = useReducer(\r\n    allowanceReducer,\r\n    allowanceState\r\n  );\r\n  const [climatePlaces, dispatchClimatePlaces] = useReducer(\r\n    climatePlacesReducer,\r\n    climatePlaceState\r\n  );\r\n  const [deductions, dispatchDeductions] = useReducer(\r\n    deductionReducer,\r\n    deductionState\r\n  );\r\n  const [messages, dispatchMessages] = useReducer(messageReducer, messageState);\r\n  const [connections, dispatchConnections] = useReducer(connReducer, connState);\r\n  return (\r\n    <StoreContext.Provider\r\n      value={{\r\n        socket,\r\n        setSocket,\r\n        messages,\r\n        dispatchMessages,\r\n        typing,\r\n        setTyping,\r\n        Ltyping,\r\n        setLTyping, //user interaction when typing\r\n        connections,\r\n        dispatchConnections,\r\n        allowances,\r\n        dispatchAllowances,\r\n        employees,\r\n        dispatchEmployees,\r\n        department,\r\n        dispatchDepartment,\r\n        place,\r\n        dispatchPlaces,\r\n        users,\r\n        dispatchUsers,\r\n        fieldEmployees,\r\n        dispatchFieldEmplooyees,\r\n        config,\r\n        dispatchConfig,\r\n        company,\r\n        dispatchCompany,\r\n        letters,\r\n        dispatchLetters,\r\n        climatePlaces,\r\n        dispatchClimatePlaces,\r\n        deductions,\r\n        dispatchDeductions,\r\n      }}\r\n    >\r\n      <ScripTag\r\n        isHydrating={true}\r\n        type=\"text/javascript\"\r\n        src=\"./css/assets/scripts/main.js\"\r\n      />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/message/:id\">\r\n            <ChatRoom />\r\n          </Route>\r\n          <Route path=\"/message\">\r\n            <Letter />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <ContactEmployee />\r\n          </Route>\r\n          <Route path=\"/outbox\">\r\n            <OutBoxLetters />\r\n          </Route>\r\n          <Route path=\"/inbox\">\r\n            <InBoxLetters />\r\n          </Route>\r\n          {/* <Route path=\"/reports\">\r\n            <Reports />\r\n          </Route> */}\r\n\r\n          {/**system configuration route */}\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport JavascriptTimeAgo from 'javascript-time-ago'\r\n \r\nimport en from 'javascript-time-ago/locale/en'\r\nimport ru from 'javascript-time-ago/locale/ru'\r\n \r\n\r\nJavascriptTimeAgo.addLocale(en)\r\nJavascriptTimeAgo.addLocale(ru)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}